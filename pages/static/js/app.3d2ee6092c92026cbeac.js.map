{"version":3,"sources":["webpack:///./src/assets/weichat.png","webpack:///./src/assets/swagger2_2.png","webpack:///./src/modules/common/bottom.vue?7941","webpack:///./src/modules/common/bottom.vue","webpack:///src/App.vue","webpack:///./src/App.vue?54c7","webpack:///./src/App.vue","webpack:///./src/modules/HelloWorld/Start.vue?9bc4","webpack:///./src/modules/HelloWorld/Start.vue","webpack:///./src/modules/HelloWorld/pom.md?387e","webpack:///./src/modules/HelloWorld/web.md?089d","webpack:///./src/modules/HelloWorld/helloCode.md?7e33","webpack:///./src/modules/HelloWorld/test.md?79d0","webpack:///./src/modules/HelloWorld/import.md?1566","webpack:///src/modules/HelloWorld/FirstApp.vue","webpack:///./src/modules/HelloWorld/pom.md","webpack:///./src/modules/HelloWorld/web.md","webpack:///./src/modules/HelloWorld/helloCode.md","webpack:///./src/modules/HelloWorld/test.md","webpack:///./src/modules/HelloWorld/import.md","webpack:///./src/modules/HelloWorld/FirstApp.vue?e2c9","webpack:///./src/modules/HelloWorld/FirstApp.vue","webpack:///src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?6c12","webpack:///./src/components/HelloWorld.vue","webpack:///./src/modules/common/contextBtn.vue?5170","webpack:///./src/modules/common/contextBtn.vue","webpack:///src/modules/common/postMain.vue","webpack:///src/modules/common/contextBtn.vue","webpack:///./src/modules/common/postMain.vue?b674","webpack:///./src/modules/common/postMain.vue","webpack:///src/components/index.vue","webpack:///./src/components/index.vue?7cef","webpack:///./src/components/index.vue","webpack:///./src/components/Configlntroduce/configlntroduce.md?c7ca","webpack:///./src/components/Configlntroduce/newfeature1.md?09b1","webpack:///./src/components/Configlntroduce/newfeature2.md?ccaa","webpack:///./src/router/configRouter.js","webpack:///./src/components/Configlntroduce/configlntroduce.md","webpack:///./src/components/Configlntroduce/newfeature1.md","webpack:///./src/components/Configlntroduce/newfeature2.md","webpack:///./src/components/Data/JdbcTemplate.md?67e3","webpack:///./src/components/Data/Jpa.md?501f","webpack:///./src/components/Data/MoreDataConfig.md?8337","webpack:///./src/components/Data/Redis.md?4ae3","webpack:///./src/components/Data/MongoDB.md?2913","webpack:///./src/components/Data/MyBatis.md?bbbb","webpack:///./src/components/Data/MyBatisConfig.md?e9d1","webpack:///./src/components/Data/Flyway.md?5f53","webpack:///./src/components/Data/LDAP.md?0dd4","webpack:///./src/components/Data/Transaction.md?b65a","webpack:///./src/router/dataRouter.js","webpack:///./src/components/Data/JdbcTemplate.md","webpack:///./src/components/Data/Jpa.md","webpack:///./src/components/Data/MoreDataConfig.md","webpack:///./src/components/Data/Redis.md","webpack:///./src/components/Data/MongoDB.md","webpack:///./src/components/Data/MyBatis.md","webpack:///./src/components/Data/MyBatisConfig.md","webpack:///./src/components/Data/Flyway.md","webpack:///./src/components/Data/LDAP.md","webpack:///./src/components/Data/Transaction.md","webpack:///./src/components/WebDev/RESTfulAPI.md?96dc","webpack:///./src/components/WebDev/Thymeleaf.md?d256","webpack:///./src/components/WebDev/Swagger2.md?400f","webpack:///./src/components/WebDev/Abnormity.md?b793","webpack:///./src/components/WebDev/Java8Api.md?f091","webpack:///./src/components/WebDev/XMLResponse.md?6365","webpack:///./src/router/webRouter.js","webpack:///./src/components/WebDev/RESTfulAPI.md","webpack:///./src/components/WebDev/Thymeleaf.md","webpack:///./src/components/WebDev/Swagger2.md","webpack:///./src/components/WebDev/Abnormity.md","webpack:///./src/components/WebDev/Java8Api.md","webpack:///./src/components/WebDev/XMLResponse.md","webpack:///./src/components/Async/scheduled.md?6fc7","webpack:///./src/components/Async/asyncCall.md?a707","webpack:///./src/components/Async/taskExecutor.md?0387","webpack:///./src/components/Async/taskClose.md?7ef7","webpack:///./src/components/Async/future.md?8733","webpack:///./src/router/asyncRouter.js","webpack:///./src/components/Async/scheduled.md","webpack:///./src/components/Async/asyncCall.md","webpack:///./src/components/Async/taskExecutor.md","webpack:///./src/components/Async/taskClose.md","webpack:///./src/components/Async/future.md","webpack:///./src/components/Log/defaultLog.md?ec60","webpack:///./src/components/Log/log4j.md?01c9","webpack:///./src/components/Log/logLevel.md?1cb6","webpack:///./src/router/logRouter.js","webpack:///./src/components/Log/defaultLog.md","webpack:///./src/components/Log/log4j.md","webpack:///./src/components/Log/logLevel.md","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/assets/swagger2_1.png","webpack:///./src/assets/zfb.png","webpack:///./src/assets/idea.png","webpack:///./src/assets/pasted-121.png","webpack:///./src/assets/abnormity.png","webpack:///./src/assets/spring-download.png","webpack:///./src/assets/helloworld.png","webpack:///./src/assets/springbootrestfulapi-1.png"],"names":["module","exports","__webpack_require__","p","common_bottom","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","attrs","type","justify","gutter","span","src","staticRenderFns","href","target","modules_common_bottom","normalizeComponent","ssrContext","App","name","data","routerList","components","bottom","methods","toLink","$router","push","created","options","routes","console","log","watch","$route","handler","val","oldVal","$nextTick","document","body","scrollTop","documentElement","querySelectorAll","forEach","block","lib_default","a","highlightBlock","deep","selectortype_template_index_0_src_App","id","mode","theme","active-name","on","on-select","_l","item","index","key","children","_e","path","_s","cnName","slot","im","idx","staticStyle","height","src_App","App_normalizeComponent","HelloWorld_Start","modules_HelloWorld_Start","Start_normalizeComponent","pom","pre","v-pre","web","helloCode","test","HelloWorld_import","FirstApp","pom_normalizeComponent","web_normalizeComponent","helloCode_normalizeComponent","test_normalizeComponent","importDom","import_normalizeComponent","mounted","HelloWorld_FirstApp","label","icon","directives","rawName","HelloWorld","Start","FirstApp_normalizeComponent","components_HelloWorld","src_components_HelloWorld","HelloWorld_normalizeComponent","common_contextBtn","click","upClick","to","up","nextClick","next","postMain","props","contextBtn","contextBtn_normalizeComponent","common_postMain","domProps","textContent","title","size","date","_t","modules_common_postMain","postMain_normalizeComponent","findRouters","hashList","getUp","resultUrl","i","length","iPath","jPath","j","temp","currLocal","variateBulid","routers","hash","window","location","replace","split","obj","buildResult","r","rItem","c","cItem","eachRouters","_this","Object","main","selectortype_template_index_0_src_components","src_components","components_normalizeComponent","configlntroduce","newfeature1","newfeature2","configRouter","component","commonView","configlntroduce_normalizeComponent","newfeature1_normalizeComponent","newfeature2_normalizeComponent","JdbcTemplate","Jpa","MoreDataConfig","Redis","MongoDB","MyBatis","MyBatisConfig","Flyway","LDAP","Transaction","dataRouter","JdbcTemplate_normalizeComponent","Jpa_normalizeComponent","MoreDataConfig_normalizeComponent","Redis_normalizeComponent","MongoDB_normalizeComponent","MyBatis_normalizeComponent","MyBatisConfig_normalizeComponent","Flyway_normalizeComponent","LDAP_normalizeComponent","Transaction_normalizeComponent","RESTfulAPI","alt","Thymeleaf","Swagger2","Abnormity","Java8Api","XMLResponse","webRouter","RESTfulAPI_normalizeComponent","Thymeleaf_normalizeComponent","Swagger2_normalizeComponent","Abnormity_normalizeComponent","Java8Api_normalizeComponent","XMLResponse_normalizeComponent","scheduled","asyncCall","taskExecutor","taskClose","future","asyncRouter","scheduled_normalizeComponent","asyncCall_normalizeComponent","taskExecutor_normalizeComponent","taskClose_normalizeComponent","future_normalizeComponent","defaultLog","log4j","logLevel","logRouter","defaultLog_normalizeComponent","log4j_normalizeComponent","logLevel_normalizeComponent","Vue","use","Router","router","VueLazyLoad","config","productionTip","iView","directive","el","hljs","template"],"mappings":"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","file":"static/js/app.3d2ee6092c92026cbeac.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/weichat.45b5571.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/weichat.png\n// module id = +Ul+\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/swagger2_2.51fa568.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/swagger2_2.png\n// module id = JG8F\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bottom\"},[_c('p',[_vm._v(\"PS：你的star是我学习的动力\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('p',[_vm._v(\"也可以选择以下两种方式支持我\")]),_vm._v(\" \"),_c('row',{staticClass:\"row\",attrs:{\"type\":\"flex\",\"justify\":\"center\",\"gutter\":20}},[_c('i-col',{attrs:{\"span\":\"3\"}},[_c('div',[_c('img',{attrs:{\"src\":require(\"../../assets/weichat.png\")}})]),_vm._v(\" \"),_c('p',[_vm._v(\"微信支持\")])]),_vm._v(\" \"),_c('i-col',{attrs:{\"span\":\"3\"}},[_c('div',[_c('img',{attrs:{\"src\":require(\"../../assets/zfb.png\")}})]),_vm._v(\" \"),_c('p',[_vm._v(\"支付宝支持\")])])],1)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"github地址：\"),_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn\",\"target\":\"_bank\"}},[_vm._v(\"\\n    https://github.com/codeyoyo/spring-boot-learn\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-6d82dd20\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/modules/common/bottom.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6d82dd20\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./bottom.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./bottom.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./bottom.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6d82dd20\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./bottom.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6d82dd20\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/common/bottom.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <div class=\"menu wrapper-header-nav\">\n      <i-menu mode=\"horizontal\" theme='light' active-name=\"1\" @on-select=\"toLink\">\n        <div :key=\"index\" v-for=\"(item,index) in routerList\">\n          <menu-item :name=\"item.path\" v-if=\"!item.children\">\n              <Icon type=\"ios-paper\" />\n                {{item.cnName}}\n          </menu-item>\n          <submenu v-if=\"item.children\" :name='item.name'>\n              <template slot=\"title\">\n                  <icon type=\"md-cog\" />\n                  {{item.cnName}}\n              </template>\n              <menu-item :key=\"idx\" v-for=\"(im,idx) in item.children\" :name=\"item.path+'/'+im.path\">{{im.cnName}}</menu-item>\n          </submenu>\n        </div>\n      </i-menu>\n    </div>\n    <div style=\"height:61px;\"></div>\n    <router-view/>\n    <bottom />\n    <back-top></back-top>\n  </div>\n</template>\n\n<script>\nimport bottom from \"@/modules/common/bottom\";\nimport hljs from \"highlight.js\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      routerList: []\n    };\n  },\n  components: {\n    bottom\n  },\n  methods: {\n    toLink(name) {\n      if (name) {\n        this.$router.push(name);\n      }\n    }\n  },\n  created() {\n    this.routerList = this.$router.options.routes;\n    console.log(\"routerList\", this.routerList);\n  },\n  watch: {\n    $route: {\n      handler: function(val, oldVal) {\n        this.$nextTick(function() {\n          //页面加载完成后执行\n          document.body.scrollTop = document.documentElement.scrollTop = 0;\n          let blocks = document.querySelectorAll(\"pre code\");\n          blocks.forEach(block => {\n            hljs.highlightBlock(block);\n          });\n        });\n      },\n      // 深度观察监听\n      deep: true\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  overflow: hidden;\n}\n\n.wrapper-header-nav {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  right: 0;\n  z-index: 1000;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"menu wrapper-header-nav\"},[_c('i-menu',{attrs:{\"mode\":\"horizontal\",\"theme\":\"light\",\"active-name\":\"1\"},on:{\"on-select\":_vm.toLink}},_vm._l((_vm.routerList),function(item,index){return _c('div',{key:index},[(!item.children)?_c('menu-item',{attrs:{\"name\":item.path}},[_c('Icon',{attrs:{\"type\":\"ios-paper\"}}),_vm._v(\"\\n              \"+_vm._s(item.cnName)+\"\\n        \")],1):_vm._e(),_vm._v(\" \"),(item.children)?_c('submenu',{attrs:{\"name\":item.name}},[_c('template',{slot:\"title\"},[_c('icon',{attrs:{\"type\":\"md-cog\"}}),_vm._v(\"\\n                \"+_vm._s(item.cnName)+\"\\n            \")],1),_vm._v(\" \"),_vm._l((item.children),function(im,idx){return _c('menu-item',{key:idx,attrs:{\"name\":item.path+'/'+im.path}},[_vm._v(_vm._s(im.cnName))])})],2):_vm._e()],1)}))],1),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"61px\"}}),_vm._v(\" \"),_c('router-view'),_vm._v(\" \"),_c('bottom'),_vm._v(\" \"),_c('back-top')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-115efadc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-115efadc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-115efadc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"start\"},[_c('h2',[_vm._v(\"项目搭建\")]),_vm._v(\" \"),_c('row',{staticClass:\"code-row-bg row\",attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('i-col',{attrs:{\"span\":\"15\"}},[_c('p',{staticClass:\"p-indent\"},[_vm._v(\"第一种搭建方式：可访问\"),_c('a',{attrs:{\"href\":\"http://start.spring.io/\",\"target\":\"_bank\"}},[_vm._v(\"http://start.spring.io/\")]),_vm._v(\" \\n            选择构建工具Maven Project、Spring Boot版本1.3.2以及一些工程基本信息，可参考下图所示：\")]),_vm._v(\" \"),_c('div',{staticClass:\"img-box\"},[_c('img',{attrs:{\"src\":require(\"../../assets/spring-download.png\")}})])])],1),_vm._v(\" \"),_c('row',{staticClass:\"code-row-bg row\",attrs:{\"type\":\"flex\",\"justify\":\"end\"}},[_c('i-col',{attrs:{\"span\":\"15\"}},[_c('p',{staticClass:\"p-indent\"},[_vm._v(\"第二种搭建方式：可通过IDEA进行项目构建，可参考下图所示：\")]),_vm._v(\" \"),_c('div',{staticClass:\"img-box\"},[_c('img',{attrs:{\"src\":require(\"../../assets/idea.png\")}})])])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-2dba2df4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/modules/HelloWorld/Start.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2dba2df4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./Start.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./Start.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./Start.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2dba2df4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./Start.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2dba2df4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/Start.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependencies>\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter</artifactId>\\n    </dependency>\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-starter-test</artifactId>\\n        <scope>test</scope>\\n    </dependency>\\n</dependencies>\\n\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-315e8fb8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/modules/HelloWorld/pom.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n\\t<groupId>org.springframework.boot</groupId>\\n\\t<artifactId>spring-boot-starter-web</artifactId>\\n</dependency>\\n\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-d3665ce8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/modules/HelloWorld/web.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RestController\\npublic class HelloController {\\n\\n    @RequestMapping(\\\"/hello\\\")\\n    public String index() {\\n        return \\\"Hello World\\\";\\n    }\\n    \\n}\\n\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-38777550\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/modules/HelloWorld/helloCode.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringRunner.class)\\n@SpringBootTest\\npublic class Lesson1ApplicationTests {\\n\\n\\tprivate MockMvc mvc;\\n\\n\\t@Before\\n\\tpublic void setUp(){\\n\\t\\ttry{\\n\\t\\t\\tmvc=MockMvcBuilders.standaloneSetup(new HelloController()).build();\\n\\t\\t}catch (Exception ex){\\n\\t\\t\\tex.printStackTrace();\\n\\t\\t}\\n\\t}\\n\\n\\t@Test\\n\\tpublic void contextLoads() {\\n\\t\\ttry {\\n\\t\\t\\tmvc.perform(MockMvcRequestBuilders.get(\\\"/hello\\\").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().string(equalTo(\\\"Hello World\\\")));\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\te.printStackTrace();\\n\\t\\t}\\n\\t}\\n\\n}\\n\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-7beed470\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/modules/HelloWorld/test.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"import static org.hamcrest.Matchers.equalTo;\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\\n\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-779f2874\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/modules/HelloWorld/import.md\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"first\">\r\n        <h2>编写HelloWorld</h2>\r\n        <tabs>\r\n            <tab-pane label=\"项目结构\" icon=\"md-code\">\r\n                <div class=\"tab-item\">\r\n                    <h3>项目结构</h3>\r\n                    <div class=\"img-box\">\r\n                        <img src=\"../../assets/helloworld.png\" />\r\n                    </div>\r\n                </div>\r\n            </tab-pane>\r\n            <tab-pane label=\"引入Web模块\" icon=\"md-code\">\r\n                <div class=\"tab-item\">\r\n                  <h3>引入Web模块</h3>\r\n                  <div class=\"context-box\">\r\n                    <p>当前的<span class=\"code\">pom.xml</span>内容如下，仅引入了两个模块：</p>\r\n                    <ul>\r\n                      <li>\r\n                        <span class=\"code\">spring-boot-starter</span>：核心模块，包括自动配置支持、日志和YAML\r\n                      </li>\r\n                      <li>\r\n                       <span class=\"code\">spring-boot-starter-test</span>：测试模块，包括JUnit、Hamcrest、Mockito\r\n                      </li>\r\n                    </ul>\r\n                    <pom v-highlight />     \r\n                      <p>\r\n                        引入Web模块，需添加<span class=\"code\">spring-boot-starter-web</span>模块：\r\n                      </p>\r\n                      <web v-highlight />\r\n                  </div>\r\n                </div>\r\n            </tab-pane>\r\n            <tab-pane label=\"编写HelloWorld服务\" icon=\"md-code\">\r\n              <div class=\"tab-item\">\r\n                <h3>编写HelloWorld服务</h3>\r\n                <div class=\"context-box\">\r\n                  <ul>\r\n                    <li>\r\n                      创建\r\n                      <span class=\"code\">package</span>\r\n                      命名为\r\n                      <span class=\"code\">com.example.lesson1</span>\r\n                      （根据实际情况修改）\r\n                    </li>\r\n                    <li>\r\n                      创建\r\n                      <span class=\"code\">HelloController</span>类，内容如下:\r\n                    </li>\r\n                  </ul>\r\n                  <hello-code v-highlight />\r\n                  <ul>\r\n                    <li>\r\n                      启动主程序，打开浏览器访问\r\n                      <span class=\"code\">http://localhost:8080/hello</span>，可以看到页面输出\r\n                      <span class=\"code\">\r\n                        Hello World\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </tab-pane>\r\n            <tab-pane label=\"编写单元测试用例\" icon=\"md-code\">\r\n              <div class=\"tab-item\">\r\n                  <h3>编写单元测试用例</h3>\r\n                  <div class=\"context-box\">\r\n                    <p>\r\n                      打开的<span class=\"code\">src/test/</span>下的测试入口<span class=\"code\">Chapter1ApplicationTests</span>类。下面编写一个简单的单元测试来模拟http请求，具体如下：\r\n                    </p>\r\n                    <test v-highlight />\r\n                    <p>\r\n                      使用<span class=\"code\">MockServletContext</span>来构建一个空的<span class=\"code\">WebApplicationContext</span>，这样我们创建的<span class=\"code\">HelloController</span>就可以在<span class=\"code\">@Before</span>函数中创建并传递到<span class=\"code\">MockMvcBuilders.standaloneSetup()</span>函数中。\r\n                    </p>\r\n                    <ul>\r\n                      <li>\r\n                        注意引入下面内容，让<span class=\"code\">status</span>、\r\n                        <span class=\"code\">content</span>、<span>equalTo</span>函数可用\r\n                      </li>\r\n                    </ul>\r\n                    <import-dom v-highlight />\r\n                    <p>\r\n                      至此已完成目标，通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n            </tab-pane>\r\n        </tabs>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport pom from \"./pom.md\";\r\nimport web from \"./web.md\";\r\nimport helloCode from \"./helloCode.md\";\r\nimport test from \"./test.md\";\r\nimport importDom from \"./import.md\";\r\nexport default {\r\n  data() {\r\n    return {};\r\n  },\r\n  components: {\r\n    pom,\r\n    web,\r\n    helloCode,\r\n    test,\r\n    importDom\r\n  },\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.first {\r\n  background-color: #fff;\r\n  color: #000;\r\n  padding: 30px 0px;\r\n  h2 {\r\n    font-size: 25px;\r\n    margin-bottom: 20px;\r\n  }\r\n  .tab-item {\r\n    margin: 0 auto;\r\n    margin-top: 30px;\r\n    width: 80%;\r\n    h3 {\r\n      font-size: 20px;\r\n    }\r\n    .img-box {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/modules/HelloWorld/FirstApp.vue","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-315e8fb8\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./pom.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/pom.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d3665ce8\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./web.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/web.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-38777550\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./helloCode.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/helloCode.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7beed470\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./test.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/test.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-779f2874\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./import.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/import.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"first\"},[_c('h2',[_vm._v(\"编写HelloWorld\")]),_vm._v(\" \"),_c('tabs',[_c('tab-pane',{attrs:{\"label\":\"项目结构\",\"icon\":\"md-code\"}},[_c('div',{staticClass:\"tab-item\"},[_c('h3',[_vm._v(\"项目结构\")]),_vm._v(\" \"),_c('div',{staticClass:\"img-box\"},[_c('img',{attrs:{\"src\":require(\"../../assets/helloworld.png\")}})])])]),_vm._v(\" \"),_c('tab-pane',{attrs:{\"label\":\"引入Web模块\",\"icon\":\"md-code\"}},[_c('div',{staticClass:\"tab-item\"},[_c('h3',[_vm._v(\"引入Web模块\")]),_vm._v(\" \"),_c('div',{staticClass:\"context-box\"},[_c('p',[_vm._v(\"当前的\"),_c('span',{staticClass:\"code\"},[_vm._v(\"pom.xml\")]),_vm._v(\"内容如下，仅引入了两个模块：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('span',{staticClass:\"code\"},[_vm._v(\"spring-boot-starter\")]),_vm._v(\"：核心模块，包括自动配置支持、日志和YAML\\n                  \")]),_vm._v(\" \"),_c('li',[_c('span',{staticClass:\"code\"},[_vm._v(\"spring-boot-starter-test\")]),_vm._v(\"：测试模块，包括JUnit、Hamcrest、Mockito\\n                  \")])]),_vm._v(\" \"),_c('pom',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}]}),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    引入Web模块，需添加\"),_c('span',{staticClass:\"code\"},[_vm._v(\"spring-boot-starter-web\")]),_vm._v(\"模块：\\n                  \")]),_vm._v(\" \"),_c('web',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}]})],1)])]),_vm._v(\" \"),_c('tab-pane',{attrs:{\"label\":\"编写HelloWorld服务\",\"icon\":\"md-code\"}},[_c('div',{staticClass:\"tab-item\"},[_c('h3',[_vm._v(\"编写HelloWorld服务\")]),_vm._v(\" \"),_c('div',{staticClass:\"context-box\"},[_c('ul',[_c('li',[_vm._v(\"\\n                  创建\\n                  \"),_c('span',{staticClass:\"code\"},[_vm._v(\"package\")]),_vm._v(\"\\n                  命名为\\n                  \"),_c('span',{staticClass:\"code\"},[_vm._v(\"com.example.lesson1\")]),_vm._v(\"\\n                  （根据实际情况修改）\\n                \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                  创建\\n                  \"),_c('span',{staticClass:\"code\"},[_vm._v(\"HelloController\")]),_vm._v(\"类，内容如下:\\n                \")])]),_vm._v(\" \"),_c('hello-code',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}]}),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"\\n                  启动主程序，打开浏览器访问\\n                  \"),_c('span',{staticClass:\"code\"},[_vm._v(\"http://localhost:8080/hello\")]),_vm._v(\"，可以看到页面输出\\n                  \"),_c('span',{staticClass:\"code\"},[_vm._v(\"\\n                    Hello World\\n                  \")])])])],1)])]),_vm._v(\" \"),_c('tab-pane',{attrs:{\"label\":\"编写单元测试用例\",\"icon\":\"md-code\"}},[_c('div',{staticClass:\"tab-item\"},[_c('h3',[_vm._v(\"编写单元测试用例\")]),_vm._v(\" \"),_c('div',{staticClass:\"context-box\"},[_c('p',[_vm._v(\"\\n                  打开的\"),_c('span',{staticClass:\"code\"},[_vm._v(\"src/test/\")]),_vm._v(\"下的测试入口\"),_c('span',{staticClass:\"code\"},[_vm._v(\"Chapter1ApplicationTests\")]),_vm._v(\"类。下面编写一个简单的单元测试来模拟http请求，具体如下：\\n                \")]),_vm._v(\" \"),_c('test',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}]}),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                  使用\"),_c('span',{staticClass:\"code\"},[_vm._v(\"MockServletContext\")]),_vm._v(\"来构建一个空的\"),_c('span',{staticClass:\"code\"},[_vm._v(\"WebApplicationContext\")]),_vm._v(\"，这样我们创建的\"),_c('span',{staticClass:\"code\"},[_vm._v(\"HelloController\")]),_vm._v(\"就可以在\"),_c('span',{staticClass:\"code\"},[_vm._v(\"@Before\")]),_vm._v(\"函数中创建并传递到\"),_c('span',{staticClass:\"code\"},[_vm._v(\"MockMvcBuilders.standaloneSetup()\")]),_vm._v(\"函数中。\\n                \")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"\\n                    注意引入下面内容，让\"),_c('span',{staticClass:\"code\"},[_vm._v(\"status\")]),_vm._v(\"、\\n                    \"),_c('span',{staticClass:\"code\"},[_vm._v(\"content\")]),_vm._v(\"、\"),_c('span',[_vm._v(\"equalTo\")]),_vm._v(\"函数可用\\n                  \")])]),_vm._v(\" \"),_c('import-dom',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}]}),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                  至此已完成目标，通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。\\n                \")])],1)])])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-75d2711f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/modules/HelloWorld/FirstApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-75d2711f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./FirstApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./FirstApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./FirstApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-75d2711f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./FirstApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-75d2711f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/HelloWorld/FirstApp.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"hello\" v-lazy>\n      <div class=\"context\">\n        <h1 class=\"tada animated\">Spring Boot<span>2.0</span></h1>\n        <h2>学习笔记</h2>\n        <p>简介：我第一次接触到Spring Boot这个框架是在2017年11月，那时候公司对系统进行了重新架构，偶合之下接触以及学到Spring Boot 这个框架；因为某些原因离开了上家公司，来到新公司是做华为外包的，信息这方面比较封闭，我们PM希望我们能分享下外面的新知识，所以我就再重新学习Spring Boot做下这一系列的学习笔记与大家分享共勉。</p>\n      </div>\n    </div>\n    <start/>\n    <first-app/>\n  </div>\n</template>\n\n<script>\nimport Start from \"@/modules/HelloWorld/Start\";\nimport FirstApp from \"@/modules/HelloWorld/FirstApp\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {};\n  },\n  components: {\n    Start,\n    FirstApp\n  },\n  methods: {},\n  created() {}\n};\n</script>\n\n<style scoped lang='less'>\n.hello {\n  background: url(\"../assets/bg.jpg\");\n  background-size: 100% 100%;\n  background-position: 0 0;\n  text-align: center;\n  overflow: hidden;\n  height: 800px;\n  background-color: #000;\n  color: #fff;\n  position: relative;\n  .context {\n    margin-top: 10%;\n  }\n  h1 {\n    font-size: 50px;\n    margin-top: 50px !important;\n    font-weight: bold;\n    span {\n      margin-left: 10px;\n      font-size: 20px;\n    }\n  }\n  h2{\n    margin-top: 20px;\n  } \n  p {\n    width: 50%;\n    margin: 0 auto;\n    font-size: 18px;\n    text-indent: 2rem;\n    margin-top: 20px;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/HelloWorld.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{directives:[{name:\"lazy\",rawName:\"v-lazy\"}],staticClass:\"hello\"},[_vm._m(0)]),_vm._v(\" \"),_c('start'),_vm._v(\" \"),_c('first-app')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"context\"},[_c('h1',{staticClass:\"tada animated\"},[_vm._v(\"Spring Boot\"),_c('span',[_vm._v(\"2.0\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"学习笔记\")]),_vm._v(\" \"),_c('p',[_vm._v(\"简介：我第一次接触到Spring Boot这个框架是在2017年11月，那时候公司对系统进行了重新架构，偶合之下接触以及学到Spring Boot 这个框架；因为某些原因离开了上家公司，来到新公司是做华为外包的，信息这方面比较封闭，我们PM希望我们能分享下外面的新知识，所以我就再重新学习Spring Boot做下这一系列的学习笔记与大家分享共勉。\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-4c77b66d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4c77b66d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4c77b66d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4c77b66d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"btns\"},[_c('row',{attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('i-col',{attrs:{\"span\":\"12\"}},[_c('i-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.upClick}},[_c('icon',{attrs:{\"type\":\"ios-arrow-back\"}}),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":{ path: _vm.up}}},[_vm._v(\"上一篇\")])],1)],1),_vm._v(\" \"),_c('i-col',{attrs:{\"span\":\"12\"}},[_c('i-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.nextClick}},[_c('router-link',{attrs:{\"to\":{ path: _vm.next}}},[_vm._v(\"下一篇\")]),_vm._v(\" \"),_c('icon',{attrs:{\"type\":\"ios-arrow-forward\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-f96254a8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/modules/common/contextBtn.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f96254a8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./contextBtn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./contextBtn.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./contextBtn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f96254a8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./contextBtn.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f96254a8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/common/contextBtn.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"context-box\">\r\n        <row type=\"flex\" justify=\"center\">\r\n            <i-col span='14' class=\"shadow\">\r\n                <h1 v-text=\"title\"></h1>\r\n                <p class=\"article-meta\">\r\n                    <span class=\"label label-success\">原创</span>\r\n                    <icon type=\"md-calendar\" size='20' />\r\n                    <span class=\"date\" v-text=\"date\"></span>\r\n                </p>\r\n                <div class=\"context\">\r\n                    <slot />\r\n                </div>\r\n            </i-col>\r\n        </row>\r\n        <context-btn :up=\"up\" :next=\"next\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport contextBtn from \"@/modules/common/contextBtn.vue\";\r\nexport default {\r\n  props: [\"title\", \"date\", \"up\", \"next\"],\r\n  components: {\r\n    contextBtn\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/modules/common/postMain.vue","<template>\r\n    <div class=\"btns\">\r\n        <row type=\"flex\" justify=\"center\">\r\n            <i-col span='12'>\r\n                <i-button type=\"primary\" @click=\"upClick\">\r\n                    <icon type=\"ios-arrow-back\"></icon>\r\n                    <router-link :to=\"{ path: up}\">上一篇</router-link>\r\n                </i-button>\r\n            </i-col>\r\n            <i-col span='12'>\r\n                <i-button type=\"primary\" @click=\"nextClick\">\r\n                    <router-link :to=\"{ path: next}\">下一篇</router-link>\r\n                    <icon type=\"ios-arrow-forward\"></icon>\r\n                </i-button>\r\n            </i-col>\r\n        </row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"up\", \"next\"],\r\n  methods: {\r\n    upClick() {\r\n        if(this.up){\r\n            this.$router.push(this.up);\r\n        }\r\n    },\r\n    nextClick() {\r\n        if(this.next){\r\n            this.$router.push(this.next);\r\n        }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.btns {\r\n  line-height: 60px;\r\n  text-align: center;\r\n  a {\r\n    color: #fff;\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/modules/common/contextBtn.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"context-box\"},[_c('row',{attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('i-col',{staticClass:\"shadow\",attrs:{\"span\":\"14\"}},[_c('h1',{domProps:{\"textContent\":_vm._s(_vm.title)}}),_vm._v(\" \"),_c('p',{staticClass:\"article-meta\"},[_c('span',{staticClass:\"label label-success\"},[_vm._v(\"原创\")]),_vm._v(\" \"),_c('icon',{attrs:{\"type\":\"md-calendar\",\"size\":\"20\"}}),_vm._v(\" \"),_c('span',{staticClass:\"date\",domProps:{\"textContent\":_vm._s(_vm.date)}})],1),_vm._v(\" \"),_c('div',{staticClass:\"context\"},[_vm._t(\"default\")],2)])],1),_vm._v(\" \"),_c('context-btn',{attrs:{\"up\":_vm.up,\"next\":_vm.next}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-a514f55c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/modules/common/postMain.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a514f55c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./postMain.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./postMain.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./postMain.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a514f55c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./postMain.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a514f55c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/common/postMain.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div v-highlight>\r\n        <post-main :title=\"title\" :date='date' :up='up' :next='next'>\r\n            <router-view></router-view>\r\n        </post-main>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport postMain from \"@/modules/common/postMain\";\r\nimport { setInterval } from \"timers\";\r\n\r\nconst eachRouters = function(hashList, routers) {\r\n  var buildResult = function(item) {\r\n    var obj = {\r\n      title: \"\",\r\n      date: \"\",\r\n      up: \"\",\r\n      next: \"\"\r\n    };\r\n    if (item.title) {\r\n      obj.title = item.title;\r\n    }\r\n    if (item.date) {\r\n      obj.date = item.date;\r\n    }\r\n    return obj;\r\n  };\r\n  for (var r in routers) {\r\n    let rItem = routers[r];\r\n    if (hashList[0] == rItem.name) {\r\n      if (rItem.children && hashList.length > 1) {\r\n        for (var c in rItem.children) {\r\n          let cItem = rItem.children[c];\r\n          if (cItem.name == hashList[1]) {\r\n            return buildResult(cItem);\r\n          }\r\n        }\r\n      } else {\r\n        return buildResult(rItem);\r\n      }\r\n    }\r\n  }\r\n  return {};\r\n};\r\nconst findRouters = function(routes, hashList, getUp) {\r\n  var resultUrl = \"\";\r\n  for (var i = 0; i < routes.length; i++) {\r\n    var item = routes[i];\r\n    if (item.name == hashList[0]) {\r\n      var iPath = item.path;\r\n      var jPath = \"\";\r\n      if (item.children && hashList.length > 1) {\r\n        for (var j = 0; j < item.children.length; j++) {\r\n          var jtem = item.children[j];\r\n          if (jtem.name == hashList[1]) {\r\n            if (getUp) {\r\n              if (j - 1 >= 0) {\r\n                jPath = \"/\" + item.children[j - 1].path;\r\n                break;\r\n              }\r\n            } else {\r\n              if (j + 1 < item.children.length) {\r\n                jPath = \"/\" + item.children[j + 1].path;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (iPath && jPath) {\r\n          resultUrl = iPath + jPath;\r\n          break;\r\n        } else {\r\n          if (getUp) {\r\n            if (i - 1 > 0) {\r\n              var temp = routes[i - 1];\r\n              iPath = temp.path;\r\n              if (temp.children) {\r\n                jPath = \"/\" + temp.children[temp.children.length - 1].path;\r\n              }\r\n              resultUrl = iPath + jPath;\r\n              break;\r\n            }\r\n          } else {\r\n            if (i + 1 < routes.length) {\r\n              var temp = routes[i + 1];\r\n              iPath = temp.path;\r\n              if (temp.children) {\r\n                jPath = \"/\" + temp.children[0].path;\r\n              }\r\n              resultUrl = iPath + jPath;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (!resultUrl) {\r\n    resultUrl = \"/\";\r\n  }\r\n  return resultUrl;\r\n};\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: \"\",\r\n      date: \"\",\r\n      up: \"\",\r\n      next: \"\",\r\n      currLocal: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    postMain\r\n  },\r\n  methods: {\r\n    variateBulid() {\r\n      let routers = this.$router.options.routes;\r\n      var hash = window.location.hash;\r\n      this.currLocal = hash;\r\n      let replaceHash = hash.replace(\"#/\", \"\");\r\n      let hashList = replaceHash.split(\"/\");\r\n      let obj = eachRouters(hashList, routers);\r\n      this.title = obj.title;\r\n      this.date = obj.date;\r\n      this.up = findRouters(routers, hashList, true);\r\n      this.next = findRouters(routers, hashList, false);\r\n    }\r\n  },\r\n  created() {\r\n    this.variateBulid();\r\n    setInterval(() => {\r\n      var has = window.location.hash;\r\n      if (has != this.currLocal) {\r\n        this.variateBulid();\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}]},[_c('post-main',{attrs:{\"title\":_vm.title,\"date\":_vm.date,\"up\":_vm.up,\"next\":_vm.next}},[_c('router-view')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-7dae7529\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7dae7529\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7dae7529\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7dae7529\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/index.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"相信很多人选择Spring Boot主要是考虑到它既能兼顾Spring的强大功能，还能实现快速开发的便捷。我们在Spring Boot使用过程中，最直观的感受就是没有了原来自己整合Spring应用时繁多的XML配置内容，替代它的是在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中引入模块化的\"),_c('code',{pre:true},[_vm._v(\"Starter POMs\")]),_vm._v(\"，其中各个模块都有自己的默认配置，所以如果不是特殊应用场景，就只需要在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中完成一些属性配置就能开启各模块的应用。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在之前的各篇文章中都有提及关于\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"的使用，主要用来配置数据库连接、日志相关配置等。除了这些配置内容之外，本文将具体介绍一些在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"配置中的其他特性和使用方法。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"自定义属性与加载\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们在使用Spring Boot的时候，通常也需要定义一些自己使用的属性，我们可以如下方式直接定义：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"com.lesson.name=Spring Boot笔记\\ncom.lesson.title=Spring Boot属性配置文件详解\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"然后通过\"),_c('code',{pre:true},[_vm._v(\"@Value(\\\"${属性名}\\\")\")]),_vm._v(\"注解来加载对应的配置属性，具体如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Component\\npublic class BlogProperties {\\n\\n    @Value(\\\"${com.example.lesson.name}\\\")\\n    private String name;\\n    @Value(\\\"${com.examplelesson.title}\\\")\\n    private String title;\\n\\n    // 省略getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"按照惯例，通过单元测试来验证BlogProperties中的属性是否已经根据配置文件加载了。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate BlogProperties blogProperties;\\n\\n\\n\\t@Test\\n\\tpublic void getHello() throws Exception {\\n\\t\\tAssert.assertEquals(blogProperties.getName(), \\\"lesson\\\");\\n\\t\\tAssert.assertEquals(blogProperties.getTitle(), \\\"Spring Boot笔记\\\");\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"参数间的引用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中的各个参数之间也可以直接引用来使用，就像下面的设置：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"com.example.lesson.name=lesson\\ncom.example.lesson.title=Spring Boot教程\\ncom.example.lesson.desc=${com.example.lesson.name}正在努力写《${com.example.lesson.title}》\\n\")])]),_vm._v(\" \"),_c('p',[_c('code',{pre:true},[_vm._v(\"com.example.lesson.desc\")]),_vm._v(\"参数引用了上文中定义的\"),_c('code',{pre:true},[_vm._v(\"name\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"title\")]),_vm._v(\"属性，最后该属性的值就是\"),_c('code',{pre:true},[_vm._v(\"正在努力写《Spring Boot笔记》\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"使用随机数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在一些情况下，有些参数我们需要希望它不是一个固定的值，比如密钥、服务端口等。Spring Boot的属性配置文件中可以通过\"),_c('code',{pre:true},[_vm._v(\"${random}\")]),_vm._v(\"来产生int值、long值或者string字符串，来支持属性的随机值。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# 随机字符串\\ncom.example.lesson.value=${random.value}\\n# 随机int\\ncom.example.lesson.number=${random.int}\\n# 随机long\\ncom.example.lesson.bignumber=${random.long}\\n# 10以内的随机数\\ncom.example.lesson.test1=${random.int(10)}\\n# 10-20的随机数\\ncom.example.lesson.test2=${random.int[10,20]}\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"通过命令行设置属性值\")]),_vm._v(\" \"),_c('p',[_vm._v(\"相信使用过一段时间Spring Boot的用户，一定知道这条命令：\"),_c('code',{pre:true},[_vm._v(\"java -jar xxx.jar --server.port=8888\")]),_vm._v(\"，通过使用–server.port属性来设置xxx.jar应用的端口为8888。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在命令行运行时，连续的两个减号\"),_c('code',{pre:true},[_vm._v(\"--\")]),_vm._v(\"就是对\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中的属性值进行赋值的标识。所以，\"),_c('code',{pre:true},[_vm._v(\"java -jar xxx.jar --server.port=8888\")]),_vm._v(\"命令，等价于我们在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中添加属性\"),_c('code',{pre:true},[_vm._v(\"server.port=8888\")]),_vm._v(\"，该设置在样例工程中可见，读者可通过删除该值或使用命令行来设置该值来验证。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过命令行来修改属性值固然提供了不错的便利性，但是通过命令行就能更改应用运行的参数，那岂不是很不安全？是的，所以Spring Boot也贴心的提供了屏蔽命令行访问属性的设置，只需要这句设置就能屏蔽：\"),_c('code',{pre:true},[_vm._v(\"SpringApplication.setAddCommandLineProperties(false)\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"多环境配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们在开发Spring Boot应用时，通常同一套程序会被应用和安装到几个不同的环境，比如：开发、测试、生产等。其中每个环境的数据库地址、服务器端口等等配置都会不同，如果在为不同环境打包时都要频繁修改配置文件的话，那必将是个非常繁琐且容易发生错误的事。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于多环境的配置，各种项目构建工具或是框架的基本思路是一致的，通过配置多份不同环境的配置文件，再通过打包命令指定需要打包的内容之后进行区分打包，Spring Boot也不例外，或者说更加简单。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中多环境配置文件名需要满足\"),_c('code',{pre:true},[_vm._v(\"application-{profile}.properties\")]),_vm._v(\"的格式，其中\"),_c('code',{pre:true},[_vm._v(\"{profile}\")]),_vm._v(\"对应你的环境标识，比如：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"application-dev.properties\")]),_vm._v(\"：开发环境\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"application-test.properties\")]),_vm._v(\"：测试环境\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"application-prod.properties\")]),_vm._v(\"：生产环境\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"至于哪个具体的配置文件会被加载，需要在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"文件中通过\"),_c('code',{pre:true},[_vm._v(\"spring.profiles.active\")]),_vm._v(\"属性来设置，其值对应\"),_c('code',{pre:true},[_vm._v(\"{profile}\")]),_vm._v(\"值。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如：\"),_c('code',{pre:true},[_vm._v(\"spring.profiles.active=test\")]),_vm._v(\"就会加载\"),_c('code',{pre:true},[_vm._v(\"application-test.properties\")]),_vm._v(\"配置文件内容\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面，以不同环境配置不同的服务端口为例，进行样例实验。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"针对各环境新建不同的配置文件\"),_c('code',{pre:true},[_vm._v(\"application-dev.properties\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"application-test.properties\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"application-prod.properties\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"在这三个文件均都设置不同的\"),_c('code',{pre:true},[_vm._v(\"server.port\")]),_vm._v(\"属性，如：dev环境设置为1111，test环境设置为2222，prod环境设置为3333\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"application.properties中设置\"),_c('code',{pre:true},[_vm._v(\"spring.profiles.active=dev\")]),_vm._v(\"，就是说默认以dev环境设置\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"测试不同配置的加载\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"执行\"),_c('code',{pre:true},[_vm._v(\"java -jar xxx.jar\")]),_vm._v(\"，可以观察到服务端口被设置为\"),_c('code',{pre:true},[_vm._v(\"1111\")]),_vm._v(\"，也就是默认的开发环境（dev）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"执行\"),_c('code',{pre:true},[_vm._v(\"java -jar xxx.jar --spring.profiles.active=test\")]),_vm._v(\"，可以观察到服务端口被设置为\"),_c('code',{pre:true},[_vm._v(\"2222\")]),_vm._v(\"，也就是测试环境的配置（test）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"执行\"),_c('code',{pre:true},[_vm._v(\"java -jar xxx.jar --spring.profiles.active=prod\")]),_vm._v(\"，可以观察到服务端口被设置为\"),_c('code',{pre:true},[_vm._v(\"3333\")]),_vm._v(\"，也就是生产环境的配置（prod）\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"按照上面的实验，可以如下总结多环境的配置思路：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中配置通用内容，并设置\"),_c('code',{pre:true},[_vm._v(\"spring.profiles.active=dev\")]),_vm._v(\"，以开发环境为默认配置\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"application-{profile}.properties\")]),_vm._v(\"中配置各个环境不同的内容\")]),_vm._v(\" \"),_c('li',[_vm._v(\"通过命令行方式去激活不同环境的配置\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson2-1\"}},[_vm._v(\"完整示例：lesson2-1\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-e62af73e\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Configlntroduce/configlntroduce.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"在Spring Boot 2.0中推出了Relaxed Binding 2.0，对原有的属性绑定功能做了非常多的改进以帮助我们更容易的在Spring应用中加载和读取配置信息。下面本文就来说说Spring Boot 2.0中对配置的改进。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"配置文件绑定\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"简单类型\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot 2.0中对配置属性加载的时候会除了像1.x版本时候那样移除特殊字符外，还会将配置均以全小写的方式进行匹配和加载。所以，下面的4种配置方式都是等价的：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"properties格式：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.jpa.databaseplatform=mysql\\nspring.jpa.database-platform=mysql\\nspring.jpa.databasePlatform=mysql\\nspring.JPA.database_platform=mysql\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"yaml格式：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring:\\n  jpa:\\n    databaseplatform: mysql\\n    database-platform: mysql\\n    databasePlatform: mysql\\n    database_platform: mysql\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Tips：推荐使用全小写配合\")]),_c('code',{pre:true},[_vm._v(\"-\")]),_c('strong',[_vm._v(\"分隔符的方式来配置，比如：\")]),_c('code',{pre:true},[_vm._v(\"spring.jpa.database-platform=mysql\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"List类型\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在properties文件中使用\"),_c('code',{pre:true},[_vm._v(\"[]\")]),_vm._v(\"来定位列表类型，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.my-example.url[0]=http://example.com\\nspring.my-example.url[1]=http://spring.io\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"也支持使用\"),_c('strong',[_vm._v(\"逗号\")]),_vm._v(\"分割的配置方式，上面与下面的配置是等价的：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.my-example.url=http://example.com,http://spring.io\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"而在yaml文件中使用可以使用如下配置：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring:\\n  my-example:\\n    url:\\n      - http://example.com\\n      - http://spring.io\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"也支持\"),_c('strong',[_vm._v(\"逗号\")]),_vm._v(\"分割的方式：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring:\\n  my-example:\\n    url: http://example.com, http://spring.io\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"注意：在Spring Boot 2.0中对于List类型的配置必须是连续的，不然会抛出\")]),_c('code',{pre:true},[_vm._v(\"UnboundConfigurationPropertiesException\")]),_c('strong',[_vm._v(\"异常，所以如下配置是不允许的：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"foo[0]=a\\nfoo[2]=b\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"***在Spring Boot 1.x中上述配置是可以的，\"),_c('code',{pre:true},[_vm._v(\"foo[1]\")]),_c('strong',[_vm._v(\"由于没有配置，它的值会是\")]),_c('code',{pre:true},[_vm._v(\"null\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"Map类型\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Map类型在properties和yaml中的标准配置方式如下：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"properties格式：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.my-example.foo=bar\\nspring.my-example.hello=world\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"yaml格式：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring:\\n  my-example:\\n    foo: bar\\n    hello: world\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"注意：如果Map类型的key包含非字母数字和\"),_c('code',{pre:true},[_vm._v(\"-\")]),_vm._v(\"的字符，需要用\"),_c('code',{pre:true},[_vm._v(\"[]\")]),_vm._v(\"括起来，比如：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring:\\n  my-example:\\n    '[foo.baz]': bar\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"环境属性绑定\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"简单类型\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在环境变量中通过小写转换与.替换\"),_c('code',{pre:true},[_vm._v(\"_\")]),_vm._v(\"来映射配置文件中的内容，比如：环境变量\"),_c('code',{pre:true},[_vm._v(\"SPRING_JPA_DATABASEPLATFORM=mysql\")]),_vm._v(\"的配置会产生与在配置文件中设置\"),_c('code',{pre:true},[_vm._v(\"spring.jpa.databaseplatform=mysql\")]),_vm._v(\"一样的效果。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"List类型\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"由于环境变量中无法使用\"),_c('code',{pre:true},[_vm._v(\"[\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"]\")]),_vm._v(\"符号，所以使用_来替代。任何由下划线包围的数字都会被认为是\"),_c('code',{pre:true},[_vm._v(\"[]\")]),_vm._v(\"的数组形式。比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"MY_FOO_1_ = my.foo[1]\\nMY_FOO_1_BAR = my.foo[1].bar\\nMY_FOO_1_2_ = my.foo[1][2]\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"另外，最后环境变量最后是以数字和下划线结尾的话，最后的下划线可以省略，比如上面例子中的第一条和第三条等价于下面的配置：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"MY_FOO_1 = my.foo[1]\\nMY_FOO_1_2 = my.foo[1][2]\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"系统属性绑定\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"简单类型\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"系统属性与文件配置中的类似，都以移除特殊字符并转化小写后实现绑定，比如下面的命令行参数都会实现配置\"),_c('code',{pre:true},[_vm._v(\"spring.jpa.databaseplatform=mysql\")]),_vm._v(\"的效果：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"-Dspring.jpa.database-platform=mysql\\n-Dspring.jpa.databasePlatform=mysql\\n-Dspring.JPA.database_platform=mysql\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"List类型\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"系统属性的绑定也与文件属性的绑定类似，通过\"),_c('code',{pre:true},[_vm._v(\"[]\")]),_vm._v(\"来标示，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"-D\\\"spring.my-example.url[0]=http://example.com\\\"\\n-D\\\"spring.my-example.url[1]=http://spring.io\\\"\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"同样的，他也支持逗号分割的方式，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"-Dspring.my-example.url=http://example.com,http://spring.io\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"属性的读取\")]),_vm._v(\" \"),_c('p',[_vm._v(\"上文介绍了Spring Boot 2.0中对属性绑定的内容，可以看到对于一个属性我们可以有多种不同的表达，但是如果我们要在Spring应用程序的environment中读取属性的时候，每个属性的唯一名称符合如下规则：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"通过\"),_c('code',{pre:true},[_vm._v(\".\")]),_vm._v(\"分离各个元素\")]),_vm._v(\" \"),_c('li',[_vm._v(\"最后一个\"),_c('code',{pre:true},[_vm._v(\".\")]),_vm._v(\"将前缀与属性名称分开\")]),_vm._v(\" \"),_c('li',[_vm._v(\"必须是字母（a-z）和数字(0-9)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"必须是小写字母\")]),_vm._v(\" \"),_c('li',[_vm._v(\"用连字符\"),_c('code',{pre:true},[_vm._v(\"-\")]),_vm._v(\"来分隔单词\")]),_vm._v(\" \"),_c('li',[_vm._v(\"唯一允许的其他字符是\"),_c('code',{pre:true},[_vm._v(\"[\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"]\")]),_vm._v(\"，用于List的索引\")]),_vm._v(\" \"),_c('li',[_vm._v(\"不能以数字开头\\n所以，如果我们要读取配置文件中\"),_c('code',{pre:true},[_vm._v(\"spring.jpa.database-platform\")]),_vm._v(\"的配置，可以这样写：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"this.environment.containsProperty(\\\"spring.jpa.database-platform\\\")\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"而下面的方式是无法获取到\"),_c('code',{pre:true},[_vm._v(\"spring.jpa.database-platform\")]),_vm._v(\"配置内容的：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"this.environment.containsProperty(\\\"spring.jpa.databasePlatform\\\")\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"注意：使用\"),_c('code',{pre:true},[_vm._v(\"@Value\")]),_vm._v(\"获取配置内容的时候也需要这样的特点\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"全新的绑定API\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot 2.0中增加了新的绑定API来帮助我们更容易的获取配置信息。下面举个例子来帮助大家更容易的理解：\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"例子一：简单类型\")]),_vm._v(\" \"),_c('p',[_vm._v(\"假设在propertes配置中有这样一个配置：\"),_c('code',{pre:true},[_vm._v(\"com.didispace.foo=bar\")]),_vm._v(\"\\n我们为它创建对应的配置类：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Data\\n@ConfigurationProperties(prefix = \\\"com.didispace\\\")\\npublic class FooProperties {\\n\\n    private String foo;\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来，通过最新的\"),_c('code',{pre:true},[_vm._v(\"Binder\")]),_vm._v(\"就可以这样来拿配置信息了：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@SpringBootApplication\\npublic class Application {\\n\\n    public static void main(String[] args) {\\n        ApplicationContext context = SpringApplication.run(Application.class, args);\\n\\n        Binder binder = Binder.get(context.getEnvironment());\\n\\n        // 绑定简单配置\\n        FooProperties foo = binder.bind(\\\"com.didispace\\\", Bindable.of(FooProperties.class)).get();\\n        System.out.println(foo.getFoo());\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"例子二：List类型\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果配置内容是List类型呢？比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"com.didispace.post[0]=Why Spring Boot\\ncom.didispace.post[1]=Why Spring Cloud\\n\\ncom.didispace.posts[0].title=Why Spring Boot\\ncom.didispace.posts[0].content=It is perfect!\\ncom.didispace.posts[1].title=Why Spring Cloud\\ncom.didispace.posts[1].content=It is perfect too!\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"要获取这些配置依然很简单，可以这样实现：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"ApplicationContext context = SpringApplication.run(Application.class, args);\\n\\nBinder binder = Binder.get(context.getEnvironment());\\n\\n// 绑定List配置\\nList<String> post = binder.bind(\\\"com.didispace.post\\\", Bindable.listOf(String.class)).get();\\nSystem.out.println(post);\\n\\nList<PostInfo> posts = binder.bind(\\\"com.didispace.posts\\\", Bindable.listOf(PostInfo.class)).get();\\nSystem.out.println(posts);\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson2-2\"}},[_vm._v(\"完整示列：lesson2-2\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-1dc8f31c\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Configlntroduce/newfeature1.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('blockquote',[_c('p',[_c('strong',[_vm._v(\"今天继续来聊Spring Boot 2.0的新特性。本文将具体说说2.0版本中的事件模型，尤其是新增的事件：\")]),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot 2.0中对事件模型做了一些增强，主要就是增加了\"),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"事件，所以在2.0版本中所有的事件按执行的先后顺序如下：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"ApplicationStartingEvent\")])]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"ApplicationEnvironmentPreparedEvent\")])]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"ApplicationPreparedEvent\")])]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\" <= 新增的事件\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"ApplicationReadyEvent\")])]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"ApplicationFailedEvent\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"从上面的列表中，我们可以看到\"),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"位于\"),_c('code',{pre:true},[_vm._v(\"ApplicationPreparedEvent\")]),_vm._v(\"之后，\"),_c('code',{pre:true},[_vm._v(\"ApplicationReadyEvent\")]),_vm._v(\"之前。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面我们通过代码的方式来直观的感受这个事件的切入位置，以便与将来我们在这个切入点加入自己需要的逻辑。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"第一步：我们可以编写\"),_c('code',{pre:true},[_vm._v(\"ApplicationPreparedEvent\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"以及\"),_c('code',{pre:true},[_vm._v(\"ApplicationReadyEvent\")]),_vm._v(\"三个事件的监听器，然后在这三个事件触发的时候打印一些日志来观察它们各自的切入点，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Slf4j\\npublic class ApplicationPreparedEventListener implements ApplicationListener<ApplicationPreparedEvent> {\\n\\n    @Override\\n    public void onApplicationEvent(ApplicationPreparedEvent event) {\\n        log.info(\\\"......ApplicationPreparedEvent......\\\");\\n    }\\n\\n}\\n\\n@Slf4j\\npublic class ApplicationStartedEventListener implements ApplicationListener<ApplicationStartedEvent> {\\n\\n    @Override\\n    public void onApplicationEvent(ApplicationStartedEvent event) {\\n        log.info(\\\"......ApplicationStartedEvent......\\\");\\n    }\\n\\n}\\n\\n@Slf4j\\npublic class ApplicationReadyEventListener implements ApplicationListener<ApplicationReadyEvent> {\\n\\n    @Override\\n    public void onApplicationEvent(ApplicationReadyEvent event) {\\n        log.info(\\\"......ApplicationReadyEvent......\\\");\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"第二步：在\"),_c('code',{pre:true},[_vm._v(\"/src/main/resources/\")]),_vm._v(\"目录下新建：\"),_c('code',{pre:true},[_vm._v(\"META-INF/spring.factories\")]),_vm._v(\"配置文件，通过配置\"),_c('code',{pre:true},[_vm._v(\"org.springframework.context.ApplicationListener\")]),_vm._v(\"来加载上面我们编写的监听器。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"org.springframework.context.ApplicationListener=\\n  com.didispace.ApplicationPreparedEventListener,\\\\\\n  com.didispace.ApplicationReadyEventListener,\\\\\\n  com.didispace.ApplicationStartedEventListener\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"此时，我们运行Spring Boot应用可以获得类似如下日志输出：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2018-03-07 18:15:18.591  INFO 83387 --- [           main] com.didispace.Application                : Starting Application on zhaiyongchaodeMacBook-Pro.local with PID 83387 (/Users/zhaiyongchao/Documents/git/github/SpringBoot-Learning/Chapter1-2-1/target/classes started by zhaiyongchao in /Users/zhaiyongchao/Documents/git/github/SpringBoot-Learning/Chapter1-2-1)\\n2018-03-07 18:15:18.591  INFO 83387 --- [           main] com.didispace.Application                : No active profile set, falling back to default profiles: default\\n2018-03-07 18:15:18.658  INFO 83387 --- [           main] c.d.ApplicationPreparedEventListener     : ......ApplicationPreparedEvent......\\n2018-03-07 18:15:18.662  INFO 83387 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20d3d15a: startup date [Wed Mar 07 18:15:18 CST 2018]; root of context hierarchy\\n2018-03-07 18:15:19.879  INFO 83387 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)\\n2018-03-07 18:15:19.926  INFO 83387 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\\n2018-03-07 18:15:19.930  INFO 83387 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.28\\n2018-03-07 18:15:19.946  INFO 83387 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/zhaiyongchao/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]\\n2018-03-07 18:15:20.068  INFO 83387 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\\n2018-03-07 18:15:20.068  INFO 83387 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1410 ms\\n2018-03-07 18:15:20.210  INFO 83387 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]\\n2018-03-07 18:15:20.214  INFO 83387 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]\\n2018-03-07 18:15:20.214  INFO 83387 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]\\n2018-03-07 18:15:20.214  INFO 83387 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]\\n2018-03-07 18:15:20.215  INFO 83387 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]\\n2018-03-07 18:15:20.513  INFO 83387 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20d3d15a: startup date [Wed Mar 07 18:15:18 CST 2018]; root of context hierarchy\\n2018-03-07 18:15:20.592  INFO 83387 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \\\"{[/error]}\\\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)\\n2018-03-07 18:15:20.593  INFO 83387 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \\\"{[/error],produces=[text/html]}\\\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\\n2018-03-07 18:15:20.623  INFO 83387 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\\n2018-03-07 18:15:20.623  INFO 83387 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\\n2018-03-07 18:15:20.660  INFO 83387 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\\n2018-03-07 18:15:20.787  INFO 83387 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup\\n2018-03-07 18:15:20.839  INFO 83387 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''\\n2018-03-07 18:15:20.843  INFO 83387 --- [           main] com.didispace.Application                : Started Application in 2.866 seconds (JVM running for 3.337)\\n2018-03-07 18:15:20.845  INFO 83387 --- [           main] c.d.ApplicationStartedEventListener      : ......ApplicationStartedEvent......\\n2018-03-07 18:15:20.847  INFO 83387 --- [           main] c.d.ApplicationReadyEventListener        : ......ApplicationReadyEvent......\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"从日志中我们可以看到清晰的看到\"),_c('code',{pre:true},[_vm._v(\"ApplicationPreparedEvent\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"以及\"),_c('code',{pre:true},[_vm._v(\"ApplicationReadyEvent\")]),_vm._v(\"三个事件的切入点。通过这个例子可能读者会感到疑问：\"),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"ApplicationReadyEvent\")]),_vm._v(\"从事件命名和日志输出位置来看，都是应用加载完成之后的事件，它们是否有什么区别呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面可以看看官方文档对\"),_c('code',{pre:true},[_vm._v(\"ApplicationStartedEvent\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"ApplicationReadyEvent\")]),_vm._v(\"的解释：\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"An ApplicationStartedEvent is sent after the context has been refreshed but before any application and command-line runners have been called.An ApplicationReadyEvent is sent after any application and command-line runners have been called. It indicates that the application is ready to service requests\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"从文档中我们可以知道他们两中间还有一个过程就是\"),_c('code',{pre:true},[_vm._v(\"command-line runners\")]),_vm._v(\"被调用的内容。所以，为了更准确的感受这两个事件的区别，我们在应用主类中加入\"),_c('code',{pre:true},[_vm._v(\"CommandLineRunner\")]),_vm._v(\"的实现，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Slf4j\\n@SpringBootApplication\\npublic class Application {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(Application.class, args);\\n    }\\n\\n    @Bean\\n    public DataLoader dataLoader() {\\n        return new DataLoader();\\n    }\\n\\n    @Slf4j\\n    static class DataLoader implements CommandLineRunner {\\n\\n        @Override\\n        public void run(String... strings) throws Exception {\\n            log.info(\\\"Loading data...\\\");\\n        }\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"最后，我们再运行程序，此时我们可以发现这两个事件中间输出了上面定义的DataLoader的输出内容，具体如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2018-03-07 18:15:20.845  INFO 83387 --- [main] c.d.ApplicationStartedEventListener      : ......ApplicationStartedEvent......\\n2018-03-07 18:15:20.846  INFO 83387 --- [main] com.didispace.Application$DataLoader     : Loading data...\\n2018-03-07 18:15:20.847  INFO 83387 --- [main] c.d.ApplicationReadyEventListener        : ......ApplicationReadyEvent......\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson2-3\"}},[_vm._v(\"完整示例：lesson2-3\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-2410a0aa\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Configlntroduce/newfeature2.md\n// module id = null\n// module chunks = ","import commonView from '@/components';\r\nimport configlntroduce from \"@/components/Configlntroduce/configlntroduce.md\";\r\nimport newfeature1 from \"@/components/Configlntroduce/newfeature1.md\";\r\nimport newfeature2 from \"@/components/Configlntroduce/newfeature2.md\";\r\n\r\nexport default {\r\n    path: '/config',\r\n    cnName: \"工程配置\",\r\n    component: commonView,\r\n    name: \"config\",\r\n    children: [\r\n      {\r\n        path: 'ConfigIntroduce',\r\n        component: configlntroduce,\r\n        cnName: \"配置文件详解\",\r\n        title: 'Spring Boot属性配置文件详解',\r\n        date: \"2018-11-04\",\r\n        name: \"ConfigIntroduce\"\r\n      },\r\n      {\r\n        path: 'NewFeature1',\r\n        component: newfeature1,\r\n        cnName: \"2.0 新特性（一）\",\r\n        title: \"Spring Boot 2.0 新特性（一）：配置绑定 2.0 全解析\",\r\n        date: \"2018-11-05\",\r\n        name: \"NewFeature1\"\r\n      },\r\n      {\r\n        path: 'NewFeature2',\r\n        component: newfeature2,\r\n        cnName: \"2.0 新特性（二）\",\r\n        title: \"Spring Boot 2.0 新特性（二）：新增事件ApplicationStartedEvent\",\r\n        date: \"2018-11-06\",\r\n        name: \"NewFeature2\"\r\n      }\r\n    ]\r\n  };\n\n\n// WEBPACK FOOTER //\n// ./src/router/configRouter.js","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e62af73e\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./configlntroduce.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Configlntroduce/configlntroduce.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1dc8f31c\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./newfeature1.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Configlntroduce/newfeature1.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2410a0aa\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./newfeature2.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Configlntroduce/newfeature2.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"之前介绍了很多Web层的例子，包括构建\"),_c('a',{attrs:{\"href\":\"/Web/RESTfulAPI\"}},[_vm._v(\"RESTful API\")]),_vm._v(\"、\"),_c('a',{attrs:{\"href\":\"/Web/Thymeleaf\"}},[_vm._v(\"使用Thymeleaf模板引擎渲染Web视图\")]),_vm._v(\"，但是这些内容还不足以构建一个动态的应用。通常我们做App也好，做Web应用也好，都需要内容，而内容通常存储于各种类型的数据库，服务端在接收到访问请求之后需要访问数据库获取并处理成展现给用户使用的数据形式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本文介绍在Spring Boot基础下配置数据源和通过JdbcTemplate编写数据访问的示例。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"数据源配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在我们访问数据库的时候，需要先配置一个数据源，下面分别介绍一下几种不同的数据库配置方式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先，为了连接数据库需要引入jdbc支持，在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中引入如下配置：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-jdbc</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"嵌入式数据库支持\")]),_vm._v(\" \"),_c('p',[_vm._v(\"嵌入式数据库通常用于开发和测试环境，不推荐用于生产环境。Spring Boot提供自动配置的嵌入式数据库有H2、HSQL、Derby，你不需要提供任何连接配置就能使用。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如，我们可以在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中引入如下配置使用HSQL\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>org.hsqldb</groupId>\\n    <artifactId>hsqldb</artifactId>\\n    <scope>runtime</scope>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"连接生产数据源\")]),_vm._v(\" \"),_c('p',[_vm._v(\"以MySQL数据库为例，先引入MySQL连接的依赖包，在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中加入：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>mysql</groupId>\\n    <artifactId>mysql-connector-java</artifactId>\\n    <version>5.1.21</version>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"src/main/resources/application.properties\")]),_vm._v(\"中配置数据源信息\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.datasource.url=jdbc:mysql://localhost:3306/test\\nspring.datasource.username=dbuser\\nspring.datasource.password=dbpass\\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"连接JNDI数据源\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当你将应用部署于应用服务器上的时候想让数据源由应用服务器管理，那么可以使用如下配置方式引入JNDI数据源。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.datasource.jndi-name=java:jboss/datasources/customers\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"使用JdbcTemplate操作数据库\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring的JdbcTemplate是自动配置的，你可以直接使用\"),_c('code',{pre:true},[_vm._v(\"@Autowired\")]),_vm._v(\"来注入到你自己的bean中来使用。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：我们在创建\"),_c('code',{pre:true},[_vm._v(\"User\")]),_vm._v(\"表，包含属性\"),_c('code',{pre:true},[_vm._v(\"name\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"age\")]),_vm._v(\"，下面来编写数据访问对象和单元测试用例。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"定义包含有插入、删除、查询的抽象接口UserService\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface UserService {\\n\\n    /**\\n     * 新增一个用户\\n     * @param name\\n     * @param age\\n     */\\n    void create(String name, Integer age);\\n\\n    /**\\n     * 根据name删除一个用户高\\n     * @param name\\n     */\\n    void deleteByName(String name);\\n\\n    /**\\n     * 获取用户总量\\n     */\\n    Integer getAllUsers();\\n\\n    /**\\n     * 删除所有用户\\n     */\\n    void deleteAllUsers();\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"通过JdbcTemplate实现UserService中定义的数据访问操作\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Service\\npublic class UserServiceImpl implements UserService {\\n\\n    @Autowired\\n    private JdbcTemplate jdbcTemplate;\\n\\n    @Override\\n    public void create(String name, Integer age) {\\n        jdbcTemplate.update(\\\"insert into USER(NAME, AGE) values(?, ?)\\\", name, age);\\n    }\\n\\n    @Override\\n    public void deleteByName(String name) {\\n        jdbcTemplate.update(\\\"delete from USER where NAME = ?\\\", name);\\n    }\\n\\n    @Override\\n    public Integer getAllUsers() {\\n        return jdbcTemplate.queryForObject(\\\"select count(1) from USER\\\", Integer.class);\\n    }\\n\\n    @Override\\n    public void deleteAllUsers() {\\n        jdbcTemplate.update(\\\"delete from USER\\\");\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建对UserService的单元测试用例，通过创建、删除和查询来验证数据库操作的正确性。\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserService userSerivce;\\n\\n\\t@Before\\n\\tpublic void setUp() {\\n\\t\\t// 准备，清空user表\\n\\t\\tuserSerivce.deleteAllUsers();\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\t\\t// 插入5个用户\\n\\t\\tuserSerivce.create(\\\"a\\\", 1);\\n\\t\\tuserSerivce.create(\\\"b\\\", 2);\\n\\t\\tuserSerivce.create(\\\"c\\\", 3);\\n\\t\\tuserSerivce.create(\\\"d\\\", 4);\\n\\t\\tuserSerivce.create(\\\"e\\\", 5);\\n\\n\\t\\t// 查数据库，应该有5个用户\\n\\t\\tAssert.assertEquals(5, userSerivce.getAllUsers().intValue());\\n\\n\\t\\t// 删除两个用户\\n\\t\\tuserSerivce.deleteByName(\\\"a\\\");\\n\\t\\tuserSerivce.deleteByName(\\\"e\\\");\\n\\n\\t\\t// 查数据库，应该有5个用户\\n\\t\\tAssert.assertEquals(3, userSerivce.getAllUsers().intValue());\\n\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"上面介绍的\"),_c('code',{pre:true},[_vm._v(\"JdbcTemplate\")]),_vm._v(\"只是最基本的几个操作，更多其他数据访问操作的使用请参考：\"),_c('a',{attrs:{\"href\":\"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html\"}},[_vm._v(\"JdbcTemplate API\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"通过上面这个简单的例子，我们可以看到在Spring Boot下访问数据库的配置依然秉承了框架的初衷：简单。我们只需要在pom.xml中加入数据库依赖，再到application.properties中配置连接信息，不需要像Spring应用中创建JdbcTemplate的Bean，就可以直接在自己的对象中注入使用。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-1\"}},[_vm._v(\"完整示例：lesson4-1\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-765b7baf\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/JdbcTemplate.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"在上一篇\"),_c('a',{attrs:{\"href\":\"/Data/JdbcTemplate\"}},[_vm._v(\"Spring中使用JdbcTemplate访问数据库\")]),_vm._v(\" 中介绍了一种基本的数据访问方式，结合\"),_c('a',{attrs:{\"href\":\"/Web/RESTfulAPI\"}},[_vm._v(\"构建RESTful API\")]),_vm._v(\"和\"),_c('a',{attrs:{\"href\":\"/Web/Thymeleaf\"}},[_vm._v(\"使用Thymeleaf模板引擎渲染Web视图\")]),_vm._v(\"的内容就已经可以完成App服务端和Web站点的开发任务了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"然而，在实际开发过程中，对数据库的操作无非就“增删改查”。就最为普遍的单表操作而言，除了表和字段不同外，语句都是类似的，开发人员需要写大量类似而枯燥的语句来完成业务逻辑。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"为了解决这些大量枯燥的数据操作语句，我们第一个想到的是使用ORM框架，比如：Hibernate。通过整合Hibernate之后，我们以操作Java实体的方式最终将数据改变映射到数据库表中。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"为了解决抽象各个Java实体基本的“增删改查”操作，我们通常会以泛型的方式封装一个模板Dao来进行抽象简化，但是这样依然不是很方便，我们需要针对每个实体编写一个继承自泛型模板Dao的接口，再编写该接口的实现。虽然一些基础的数据访问已经可以得到很好的复用，但是在代码结构上针对每个实体都会有一堆Dao的接口和实现。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由于模板Dao的实现，使得这些具体实体的Dao层已经变的非常“薄”，有一些具体实体的Dao实现可能完全就是对模板Dao的简单代理，并且往往这样的实现类可能会出现在很多实体上。Spring-data-jpa的出现正可以让这样一个已经很“薄”的数据访问层变成只是一层接口的编写方式。比如，下面的例子：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface UserRepository extends JpaRepository<User, Long> {\\n\\n    User findByName(String name);\\n\\n    @Query(\\\"from User u where u.name=:name\\\")\\n    User findUser(@Param(\\\"name\\\") String name);\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"我们只需要通过编写一个继承自\"),_c('code',{pre:true},[_vm._v(\"JpaRepository\")]),_vm._v(\"的接口就能完成数据访问，下面以一个具体实例来体验Spring-data-jpa给我们带来的强大功能。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"使用示例\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由于Spring-data-jpa依赖于Hibernate。如果您对Hibernate有一定了解，下面内容可以毫不费力的看懂并上手使用Spring-data-jpa。如果您还是Hibernate新手，您可以先按如下方式入门，再建议回头学习一下Hibernate以帮助这部分的理解和进一步使用。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"工程配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中添加相关依赖，加入以下内容：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"application.xml\")]),_vm._v(\"中配置：数据库连接信息（如使用嵌入式数据库则不需要）、自动创建表结构的设置，例如使用mysql的情况如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.datasource.url=jdbc:mysql://localhost:3306/test\\nspring.datasource.username=root\\nspring.datasource.password=root\\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\\nspring.jpa.properties.hibernate.hbm2ddl.auto=create-drop\\n\")])]),_vm._v(\" \"),_c('p',[_c('code',{pre:true},[_vm._v(\"spring.jpa.properties.hibernate.hbm2ddl.auto\")]),_vm._v(\"是hibernate的配置属性，其主要作用是：自动创建、更新、验证数据库表结构。该参数的几种配置如下：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"create\")]),_vm._v(\"：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"create-drop\")]),_vm._v(\"：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"update\")]),_vm._v(\"：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"validate\")]),_vm._v(\"：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"创建实体\")]),_vm._v(\" \"),_c('p',[_vm._v(\"创建一个User实体，包含id（主键）、name（姓名）、age（年龄）属性，通过ORM框架其会被映射到数据库表中，由于配置了\"),_c('code',{pre:true},[_vm._v(\"hibernate.hbm2ddl.auto\")]),_vm._v(\"，在应用启动的时候框架会自动去数据库中创建对应的表。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Entity\\npublic class User {\\n\\n    @Id\\n    @GeneratedValue\\n    private Long id;\\n\\n    @Column(nullable = false)\\n    private String name;\\n\\n    @Column(nullable = false)\\n    private Integer age;\\n\\n    // 省略构造函数\\n\\n    // 省略getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"创建数据访问接口\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面针对User实体创建对应的\"),_c('code',{pre:true},[_vm._v(\"Repository\")]),_vm._v(\"接口实现对该实体的数据访问，如下代码：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface UserRepository extends JpaRepository<User, Long> {\\n\\n    User findByName(String name);\\n\\n    User findByNameAndAge(String name, Integer age);\\n\\n    @Query(\\\"from User u where u.name=:name\\\")\\n    User findUser(@Param(\\\"name\\\") String name);\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring-data-jpa中，只需要编写类似上面这样的接口就可实现数据访问。不再像我们以往编写了接口时候还需要自己编写接口实现类，直接减少了我们的文件清单。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面对上面的\"),_c('code',{pre:true},[_vm._v(\"UserRepository\")]),_vm._v(\"做一些解释，该接口继承自\"),_c('code',{pre:true},[_vm._v(\"JpaRepository\")]),_vm._v(\"，通过查看\"),_c('code',{pre:true},[_vm._v(\"JpaRepository\")]),_vm._v(\"接口的\"),_c('a',{attrs:{\"href\":\"https://docs.spring.io/spring-data/data-jpa/docs/current/api/\"}},[_vm._v(\"API文档\")]),_vm._v(\"，可以看到该接口本身已经实现了创建（save）、更新（save）、删除（delete）、查询（findAll、findOne）等基本操作的函数，因此对于这些基础操作的数据访问就不需要开发者再自己定义。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在我们实际开发中，\"),_c('code',{pre:true},[_vm._v(\"JpaRepository\")]),_vm._v(\"接口定义的接口往往还不够或者性能不够优化，我们需要进一步实现更复杂一些的查询或操作。由于本文重点在spring boot中整合spring-data-jpa，在这里先抛砖引玉简单介绍一下spring-data-jpa中让我们兴奋的功能，后续再单独开篇讲一下spring-data-jpa中的常见使用。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在上例中，我们可以看到下面两个函数：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"User findByName(String name)\")])]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"User findByNameAndAge(String name, Integer age)\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"它们分别实现了按name查询User实体和按name和age查询User实体，可以看到我们这里没有任何类SQL语句就完成了两个条件查询方法。这就是Spring-data-jpa的一大特性：\"),_c('strong',[_vm._v(\"通过解析方法名创建查询\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"除了通过解析方法名来创建查询外，它也提供通过使用@Query 注解来创建查询，您只需要编写JPQL语句，并通过类似“:name”来映射@Param指定的参数，就像例子中的第三个findUser函数一样。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Spring-data-jpa的能力远不止本文提到的这些，由于本文主要以整合介绍为主，对于Spring-data-jpa的使用只是介绍了常见的使用方式。诸如@Modifying操作、分页排序、原生SQL支持以及与Spring MVC的结合使用等等内容就不在本文中详细展开，这里先挖个坑，后续再补文章填坑，如您对这些感兴趣可以关注我博客或简书，同样欢迎大家留言交流想法。\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"单元测试\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在完成了上面的数据访问接口之后，按照惯例就是编写对应的单元测试来验证编写的内容是否正确。这里就不多做介绍，主要通过数据操作和查询来反复验证操作的正确性。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserRepository userRepository;\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\t// 创建10条记录\\n\\t\\tuserRepository.save(new User(\\\"AAA\\\", 10));\\n\\t\\tuserRepository.save(new User(\\\"BBB\\\", 20));\\n\\t\\tuserRepository.save(new User(\\\"CCC\\\", 30));\\n\\t\\tuserRepository.save(new User(\\\"DDD\\\", 40));\\n\\t\\tuserRepository.save(new User(\\\"EEE\\\", 50));\\n\\t\\tuserRepository.save(new User(\\\"FFF\\\", 60));\\n\\t\\tuserRepository.save(new User(\\\"GGG\\\", 70));\\n\\t\\tuserRepository.save(new User(\\\"HHH\\\", 80));\\n\\t\\tuserRepository.save(new User(\\\"III\\\", 90));\\n\\t\\tuserRepository.save(new User(\\\"JJJ\\\", 100));\\n\\n\\t\\t// 测试findAll, 查询所有记录\\n\\t\\tAssert.assertEquals(10, userRepository.findAll().size());\\n\\n\\t\\t// 测试findByName, 查询姓名为FFF的User\\n\\t\\tAssert.assertEquals(60, userRepository.findByName(\\\"FFF\\\").getAge().longValue());\\n\\n\\t\\t// 测试findUser, 查询姓名为FFF的User\\n\\t\\tAssert.assertEquals(60, userRepository.findUser(\\\"FFF\\\").getAge().longValue());\\n\\n\\t\\t// 测试findByNameAndAge, 查询姓名为FFF并且年龄为60的User\\n\\t\\tAssert.assertEquals(\\\"FFF\\\", userRepository.findByNameAndAge(\\\"FFF\\\", 60).getName());\\n\\n\\t\\t// 测试删除姓名为AAA的User\\n\\t\\tuserRepository.delete(userRepository.findByName(\\\"AAA\\\"));\\n\\n\\t\\t// 测试findAll, 查询所有记录, 验证上面的删除是否成功\\n\\t\\tAssert.assertEquals(9, userRepository.findAll().size());\\n\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-2\"}},[_vm._v(\"完整示例：lesson4-2\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-1ed747f4\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/Jpa.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"之前在介绍使用JdbcTemplate和Spring-data-jpa时，都使用了单数据源。在单数据源的情况下，Spring Boot的配置非常简单，只需要在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"文件中配置连接参数即可。但是往往随着业务量发展，我们通常会进行数据库拆分或是引入其他数据库，从而我们需要配置多个数据源，下面基于之前的JdbcTemplate和Spring-data-jpa例子分别介绍两种多数据源的配置方式。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"多数据源配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"创建一个Spring配置类，定义两个DataSource用来读取\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中的不同配置。如下例子中，主数据源配置为\"),_c('code',{pre:true},[_vm._v(\"spring.datasource.primary\")]),_vm._v(\"开头的配置，第二数据源配置为\"),_c('code',{pre:true},[_vm._v(\"spring.datasource.secondary\")]),_vm._v(\"开头的配置。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Configuration\\npublic class DataSourceConfig {\\n\\n    @Bean(name = \\\"primaryDataSource\\\")\\n    @Qualifier(\\\"primaryDataSource\\\")\\n    @ConfigurationProperties(prefix=\\\"spring.datasource.primary\\\")\\n    public DataSource primaryDataSource() {\\n        return DataSourceBuilder.create().build();\\n    }\\n\\n    @Bean(name = \\\"secondaryDataSource\\\")\\n    @Qualifier(\\\"secondaryDataSource\\\")\\n    @Primary\\n    @ConfigurationProperties(prefix=\\\"spring.datasource.secondary\\\")\\n    public DataSource secondaryDataSource() {\\n        return DataSourceBuilder.create().build();\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"对应的\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"配置如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.datasource.primary.url=jdbc:mysql://localhost:3306/test1\\nspring.datasource.primary.username=root\\nspring.datasource.primary.password=root\\nspring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver\\n\\nspring.datasource.secondary.url=jdbc:mysql://localhost:3306/test2\\nspring.datasource.secondary.username=root\\nspring.datasource.secondary.password=root\\nspring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"JdbcTemplate支持\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对JdbcTemplate的支持比较简单，只需要为其注入对应的datasource即可，如下例子，在创建JdbcTemplate的时候分别注入名为\"),_c('code',{pre:true},[_vm._v(\"primaryDataSource\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"secondaryDataSource\")]),_vm._v(\"的数据源来区分不同的JdbcTemplate。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Bean(name = \\\"primaryJdbcTemplate\\\")\\npublic JdbcTemplate primaryJdbcTemplate(\\n        @Qualifier(\\\"primaryDataSource\\\") DataSource dataSource) {\\n    return new JdbcTemplate(dataSource);\\n}\\n\\n@Bean(name = \\\"secondaryJdbcTemplate\\\")\\npublic JdbcTemplate secondaryJdbcTemplate(\\n        @Qualifier(\\\"secondaryDataSource\\\") DataSource dataSource) {\\n    return new JdbcTemplate(dataSource);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来通过测试用例来演示如何使用这两个针对不同数据源的JdbcTemplate。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\t@Qualifier(\\\"primaryJdbcTemplate\\\")\\n\\tprotected JdbcTemplate jdbcTemplate1;\\n\\n\\t@Autowired\\n\\t@Qualifier(\\\"secondaryJdbcTemplate\\\")\\n\\tprotected JdbcTemplate jdbcTemplate2;\\n\\n\\t@Before\\n\\tpublic void setUp() {\\n\\t\\tjdbcTemplate1.update(\\\"DELETE  FROM  USER \\\");\\n\\t\\tjdbcTemplate2.update(\\\"DELETE  FROM  USER \\\");\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\t// 往第一个数据源中插入两条数据\\n\\t\\tjdbcTemplate1.update(\\\"insert into user(id,name,age) values(?, ?, ?)\\\", 1, \\\"aaa\\\", 20);\\n\\t\\tjdbcTemplate1.update(\\\"insert into user(id,name,age) values(?, ?, ?)\\\", 2, \\\"bbb\\\", 30);\\n\\n\\t\\t// 往第二个数据源中插入一条数据，若插入的是第一个数据源，则会主键冲突报错\\n\\t\\tjdbcTemplate2.update(\\\"insert into user(id,name,age) values(?, ?, ?)\\\", 1, \\\"aaa\\\", 20);\\n\\n\\t\\t// 查一下第一个数据源中是否有两条数据，验证插入是否成功\\n\\t\\tAssert.assertEquals(\\\"2\\\", jdbcTemplate1.queryForObject(\\\"select count(1) from user\\\", String.class));\\n\\n\\t\\t// 查一下第一个数据源中是否有两条数据，验证插入是否成功\\n\\t\\tAssert.assertEquals(\\\"1\\\", jdbcTemplate2.queryForObject(\\\"select count(1) from user\\\", String.class));\\n\\n\\t}\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-3\"}},[_vm._v(\"完整示例：lesson4-3\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"Spring-data-jpa支持\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于数据源的配置可以沿用上例中\"),_c('code',{pre:true},[_vm._v(\"DataSourceConfig\")]),_vm._v(\"的实现。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"新增对第一数据源的JPA配置，注意两处注释的地方，用于指定数据源对应的\"),_c('code',{pre:true},[_vm._v(\"Entity\")]),_vm._v(\"实体和\"),_c('code',{pre:true},[_vm._v(\"Repository\")]),_vm._v(\"定义位置，用\"),_c('code',{pre:true},[_vm._v(\"@Primary\")]),_vm._v(\"区分主数据源。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Configuration\\n@EnableTransactionManagement\\n@EnableJpaRepositories(\\n        entityManagerFactoryRef=\\\"entityManagerFactoryPrimary\\\",\\n        transactionManagerRef=\\\"transactionManagerPrimary\\\",\\n        basePackages= { \\\"com.didispace.domain.p\\\" }) //设置Repository所在位置\\npublic class PrimaryConfig {\\n\\n    @Autowired @Qualifier(\\\"primaryDataSource\\\")\\n    private DataSource primaryDataSource;\\n\\n    @Primary\\n    @Bean(name = \\\"entityManagerPrimary\\\")\\n    public EntityManager entityManager(EntityManagerFactoryBuilder builder) {\\n        return entityManagerFactoryPrimary(builder).getObject().createEntityManager();\\n    }\\n\\n    @Primary\\n    @Bean(name = \\\"entityManagerFactoryPrimary\\\")\\n    public LocalContainerEntityManagerFactoryBean entityManagerFactoryPrimary (EntityManagerFactoryBuilder builder) {\\n        return builder\\n                .dataSource(primaryDataSource)\\n                .properties(getVendorProperties(primaryDataSource))\\n                .packages(\\\"com.didispace.domain.p\\\") //设置实体类所在位置\\n                .persistenceUnit(\\\"primaryPersistenceUnit\\\")\\n                .build();\\n    }\\n\\n    @Autowired\\n    private JpaProperties jpaProperties;\\n\\n    private Map<String, String> getVendorProperties(DataSource dataSource) {\\n        return jpaProperties.getHibernateProperties(dataSource);\\n    }\\n\\n    @Primary\\n    @Bean(name = \\\"transactionManagerPrimary\\\")\\n    public PlatformTransactionManager transactionManagerPrimary(EntityManagerFactoryBuilder builder) {\\n        return new JpaTransactionManager(entityManagerFactoryPrimary(builder).getObject());\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"新增对第二数据源的JPA配置，内容与第一数据源类似，具体如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Configuration\\n@EnableTransactionManagement\\n@EnableJpaRepositories(\\n        entityManagerFactoryRef=\\\"entityManagerFactorySecondary\\\",\\n        transactionManagerRef=\\\"transactionManagerSecondary\\\",\\n        basePackages= { \\\"com.didispace.domain.s\\\" }) //设置Repository所在位置\\npublic class SecondaryConfig {\\n\\n    @Autowired @Qualifier(\\\"secondaryDataSource\\\")\\n    private DataSource secondaryDataSource;\\n\\n    @Bean(name = \\\"entityManagerSecondary\\\")\\n    public EntityManager entityManager(EntityManagerFactoryBuilder builder) {\\n        return entityManagerFactorySecondary(builder).getObject().createEntityManager();\\n    }\\n\\n    @Bean(name = \\\"entityManagerFactorySecondary\\\")\\n    public LocalContainerEntityManagerFactoryBean entityManagerFactorySecondary (EntityManagerFactoryBuilder builder) {\\n        return builder\\n                .dataSource(secondaryDataSource)\\n                .properties(getVendorProperties(secondaryDataSource))\\n                .packages(\\\"com.didispace.domain.s\\\") //设置实体类所在位置\\n                .persistenceUnit(\\\"secondaryPersistenceUnit\\\")\\n                .build();\\n    }\\n\\n    @Autowired\\n    private JpaProperties jpaProperties;\\n\\n    private Map<String, String> getVendorProperties(DataSource dataSource) {\\n        return jpaProperties.getHibernateProperties(dataSource);\\n    }\\n\\n    @Bean(name = \\\"transactionManagerSecondary\\\")\\n    PlatformTransactionManager transactionManagerSecondary(EntityManagerFactoryBuilder builder) {\\n        return new JpaTransactionManager(entityManagerFactorySecondary(builder).getObject());\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"完成了以上配置之后，主数据源的实体和数据访问对象位于：\"),_c('code',{pre:true},[_vm._v(\"com.didispace.domain.p\")]),_vm._v(\"，次数据源的实体和数据访问接口位于：\"),_c('code',{pre:true},[_vm._v(\"com.didispace.domain.s\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"分别在这两个package下创建各自的实体和数据访问接口\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"主数据源下，创建User实体和对应的Repository接口\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Entity\\npublic class User {\\n\\n    @Id\\n    @GeneratedValue\\n    private Long id;\\n\\n    @Column(nullable = false)\\n    private String name;\\n\\n    @Column(nullable = false)\\n    private Integer age;\\n\\n    public User(){}\\n\\n    public User(String name, Integer age) {\\n        this.name = name;\\n        this.age = age;\\n    }\\n\\n    // 省略getter、setter\\n\\n}\\n\\npublic interface UserRepository extends JpaRepository<User, Long> {\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"从数据源下，创建Message实体和对应的Repository接口\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Entity\\npublic class Message {\\n\\n    @Id\\n    @GeneratedValue\\n    private Long id;\\n\\n    @Column(nullable = false)\\n    private String name;\\n\\n    @Column(nullable = false)\\n    private String content;\\n\\n    public Message(){}\\n\\n    public Message(String name, String content) {\\n        this.name = name;\\n        this.content = content;\\n    }\\n\\n    // 省略getter、setter\\n\\n}\\n\\npublic interface MessageRepository extends JpaRepository<Message, Long> {\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来通过测试用例来验证使用这两个针对不同数据源的配置进行数据操作。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserRepository userRepository;\\n\\t@Autowired\\n\\tprivate MessageRepository messageRepository;\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\tuserRepository.save(new User(\\\"aaa\\\", 10));\\n\\t\\tuserRepository.save(new User(\\\"bbb\\\", 20));\\n\\t\\tuserRepository.save(new User(\\\"ccc\\\", 30));\\n\\t\\tuserRepository.save(new User(\\\"ddd\\\", 40));\\n\\t\\tuserRepository.save(new User(\\\"eee\\\", 50));\\n\\n\\t\\tAssert.assertEquals(5, userRepository.findAll().size());\\n\\n\\t\\tmessageRepository.save(new Message(\\\"o1\\\", \\\"aaaaaaaaaa\\\"));\\n\\t\\tmessageRepository.save(new Message(\\\"o2\\\", \\\"bbbbbbbbbb\\\"));\\n\\t\\tmessageRepository.save(new Message(\\\"o3\\\", \\\"cccccccccc\\\"));\\n\\n\\t\\tAssert.assertEquals(3, messageRepository.findAll().size());\\n\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-4\"}},[_vm._v(\"完整示例：lesson4-4\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-add61a82\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/MoreDataConfig.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"Spring Boot中除了对常用的关系型数据库提供了优秀的自动化支持之外，对于很多NoSQL数据库一样提供了自动化配置的支持，包括：Redis, MongoDB, Elasticsearch, Solr和Cassandra。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"使用Redis\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"http://redis.io/\"}},[_vm._v(\"Redis官网\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"http://www.redis.cn/\"}},[_vm._v(\"Redis中文社区\")])])]),_vm._v(\" \"),_c('h3',[_vm._v(\"引入依赖\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot提供的数据访问框架Spring Data Redis基于Jedis。可以通过引入\"),_c('code',{pre:true},[_vm._v(\"spring-boot-starter-redis\")]),_vm._v(\"来配置依赖关系。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-redis</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"参数配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"按照惯例在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中加入Redis服务端的相关配置，具体说明如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# REDIS (RedisProperties)\\n# Redis数据库索引（默认为0）\\nspring.redis.database=0\\n# Redis服务器地址\\nspring.redis.host=localhost\\n# Redis服务器连接端口\\nspring.redis.port=6379\\n# Redis服务器连接密码（默认为空）\\nspring.redis.password=\\n# 连接池最大连接数（使用负值表示没有限制）\\nspring.redis.pool.max-active=8\\n# 连接池最大阻塞等待时间（使用负值表示没有限制）\\nspring.redis.pool.max-wait=-1\\n# 连接池中的最大空闲连接\\nspring.redis.pool.max-idle=8\\n# 连接池中的最小空闲连接\\nspring.redis.pool.min-idle=0\\n# 连接超时时间（毫秒）\\nspring.redis.timeout=0\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"其中spring.redis.database的配置通常使用0即可，Redis在配置的时候可以设置数据库数量，默认为16，可以理解为数据库的schema\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"测试访问\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过编写测试用例，举例说明如何访问Redis。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate StringRedisTemplate stringRedisTemplate;\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\t// 保存字符串\\n\\t\\tstringRedisTemplate.opsForValue().set(\\\"aaa\\\", \\\"111\\\");\\n\\t\\tAssert.assertEquals(\\\"111\\\", stringRedisTemplate.opsForValue().get(\\\"aaa\\\"));\\n\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"通过上面这段极为简单的测试案例演示了如何通过自动配置的\"),_c('code',{pre:true},[_vm._v(\"StringRedisTemplate\")]),_vm._v(\"对象进行Redis的读写操作，该对象从命名中就可注意到支持的是String类型。如果有使用过spring-data-redis的开发者一定熟悉\"),_c('code',{pre:true},[_vm._v(\"RedisTemplate<K, V>\")]),_vm._v(\"接口，\"),_c('code',{pre:true},[_vm._v(\"StringRedisTemplate\")]),_vm._v(\"就相当于\"),_c('code',{pre:true},[_vm._v(\"R\")]),_vm._v(\"edisTemplate<String, String>``的实现。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"除了String类型，实战中我们还经常会在Redis中存储对象，这时候我们就会想是否可以使用类似\"),_c('code',{pre:true},[_vm._v(\"RedisTemplate<String, User>\")]),_vm._v(\"来初始化并进行操作。但是Spring Boot并不支持直接使用，需要我们自己实现\"),_c('code',{pre:true},[_vm._v(\"RedisSerializer<T>\")]),_vm._v(\"接口来对传入对象进行序列化和反序列化，下面我们通过一个实例来完成对象的读写操作。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建要存储的对象：User\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class User implements Serializable {\\n\\n    private static final long serialVersionUID = -1L;\\n\\n    private String username;\\n    private Integer age;\\n\\n    public User(String username, Integer age) {\\n        this.username = username;\\n        this.age = age;\\n    }\\n\\n    // 省略getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"实现对象的序列化接口\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class RedisObjectSerializer implements RedisSerializer<Object> {\\n\\n  private Converter<Object, byte[]> serializer = new SerializingConverter();\\n  private Converter<byte[], Object> deserializer = new DeserializingConverter();\\n\\n  static final byte[] EMPTY_ARRAY = new byte[0];\\n\\n  public Object deserialize(byte[] bytes) {\\n    if (isEmpty(bytes)) {\\n      return null;\\n    }\\n\\n    try {\\n      return deserializer.convert(bytes);\\n    } catch (Exception ex) {\\n      throw new SerializationException(\\\"Cannot deserialize\\\", ex);\\n    }\\n  }\\n\\n  public byte[] serialize(Object object) {\\n    if (object == null) {\\n      return EMPTY_ARRAY;\\n    }\\n\\n    try {\\n      return serializer.convert(object);\\n    } catch (Exception ex) {\\n      return EMPTY_ARRAY;\\n    }\\n  }\\n\\n  private boolean isEmpty(byte[] data) {\\n    return (data == null || data.length == 0);\\n  }\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"配置针对User的RedisTemplate实例\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Configuration\\npublic class RedisConfig {\\n\\n    @Bean\\n    JedisConnectionFactory jedisConnectionFactory() {\\n        return new JedisConnectionFactory();\\n    }\\n\\n    @Bean\\n    public RedisTemplate<String, User> redisTemplate(RedisConnectionFactory factory) {\\n        RedisTemplate<String, User> template = new RedisTemplate<String, User>();\\n        template.setConnectionFactory(jedisConnectionFactory());\\n        template.setKeySerializer(new StringRedisSerializer());\\n        template.setValueSerializer(new RedisObjectSerializer());\\n        return template;\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"完成了配置工作后，编写测试用例实验效果\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate RedisTemplate<String, User> redisTemplate;\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\t// 保存对象\\n\\t\\tUser user = new User(\\\"超人\\\", 20);\\n\\t\\tredisTemplate.opsForValue().set(user.getUsername(), user);\\n\\n\\t\\tuser = new User(\\\"蝙蝠侠\\\", 30);\\n\\t\\tredisTemplate.opsForValue().set(user.getUsername(), user);\\n\\n\\t\\tuser = new User(\\\"蜘蛛侠\\\", 40);\\n\\t\\tredisTemplate.opsForValue().set(user.getUsername(), user);\\n\\n\\t\\tAssert.assertEquals(20, redisTemplate.opsForValue().get(\\\"超人\\\").getAge().longValue());\\n\\t\\tAssert.assertEquals(30, redisTemplate.opsForValue().get(\\\"蝙蝠侠\\\").getAge().longValue());\\n\\t\\tAssert.assertEquals(40, redisTemplate.opsForValue().get(\\\"蜘蛛侠\\\").getAge().longValue());\\n\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"当然spring-data-redis中提供的数据操作远不止这些，本文仅作为在Spring Boot中使用redis时的配置参考，更多对于redis的操作使用，请参考\"),_c('a',{attrs:{\"href\":\"http://docs.spring.io/spring-data/redis/docs/1.6.2.RELEASE/reference/html/\"}},[_vm._v(\"Spring-data-redis Reference\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-5\"}},[_vm._v(\"完整示例：lesson4-5\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-8912f8c6\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/Redis.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"上文分享了关于\"),_c('a',{attrs:{\"href\":\"/Data/MongoDB\"}},[_vm._v(\"Spring Boot中使用Redis\")]),_vm._v(\"的文章，除了Redis之后，我们在互联网产品中还经常会用到另外一款著名的NoSQL数据库MongoDB。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面就来简单介绍一下MongoDB，并且通过一个例子来介绍Spring Boot中对MongoDB访问的配置和使用。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"MongoDB简介\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MongoDB是一个基于分布式文件存储的数据库，它是一个介于关系数据库和非关系数据库之间的产品，其主要目标是在键/值存储方式（提供了高性能和高度伸缩性）和传统的RDBMS系统（具有丰富的功能）之间架起一座桥梁，它集两者的优势于一身。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MongoDB支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型，也因为他的存储格式也使得它所存储的数据在Nodejs程序应用中使用非常流畅。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"既然称为NoSQL数据库，Mongo的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"但是，MongoDB也不是万能的，同MySQL等关系型数据库相比，它们在针对不同的数据类型和事务要求上都存在自己独特的优势。在数据存储的选择中，坚持多样化原则，选择更好更经济的方式，而不是自上而下的统一化。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"较常见的，我们可以直接用MongoDB来存储键值对类型的数据，如：验证码、Session等；由于MongoDB的横向扩展能力，也可以用来存储数据规模会在未来变的非常巨大的数据，如：日志、评论等；由于MongoDB存储数据的弱类型，也可以用来存储一些多变json数据，如：与外系统交互时经常变化的JSON报文。而对于一些对数据有复杂的高事务性要求的操作，如：账户交易等就不适合使用MongoDB来存储。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://www.mongodb.org/\"}},[_vm._v(\"MongoDB官网\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"访问MongoDB\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中，对如此受欢迎的MongoDB，同样提供了自配置功能。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"引入依赖\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot中可以通过在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中加入\"),_c('code',{pre:true},[_vm._v(\"spring-boot-starter-data-mongodb\")]),_vm._v(\"引入对mongodb的访问支持依赖。它的实现依赖\"),_c('code',{pre:true},[_vm._v(\"spring-data-mongodb\")]),_vm._v(\"。是的，您没有看错，又是\"),_c('code',{pre:true},[_vm._v(\"spring-data\")]),_vm._v(\"的子项目，之前介绍过\"),_c('code',{pre:true},[_vm._v(\"spring-data-jpa\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"spring-data-redis\")]),_vm._v(\"，对于mongodb的访问，\"),_c('code',{pre:true},[_vm._v(\"spring-data\")]),_vm._v(\"也提供了强大的支持，下面就开始动手试试吧。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-data-mongodb</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"快速开始使用Spring-data-mongodb\")]),_vm._v(\" \"),_c('p',[_vm._v(\"若MongoDB的安装配置采用默认端口，那么在自动配置的情况下，我们不需要做任何参数配置，就能马上连接上本地的MongoDB。下面直接使用\"),_c('code',{pre:true},[_vm._v(\"spring-data-mongodb\")]),_vm._v(\"来尝试对mongodb的存取操作。（记得mongod启动您的mongodb）\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建要存储的User实体，包含属性：id、username、age\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class User {\\n\\n    @Id\\n    private Long id;\\n\\n    private String username;\\n    private Integer age;\\n\\n    public User(Long id, String username, Integer age) {\\n        this.id = id;\\n        this.username = username;\\n        this.age = age;\\n    }\\n\\n    // 省略getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"实现User的数据访问对象：UserRepository\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface UserRepository extends MongoRepository<User, Long> {\\n\\n    User findByUsername(String username);\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在单元测试中调用\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserRepository userRepository;\\n\\n\\t@Before\\n\\tpublic void setUp() {\\n\\t\\tuserRepository.deleteAll();\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\t// 创建三个User，并验证User总数\\n\\t\\tuserRepository.save(new User(1L, \\\"didi\\\", 30));\\n\\t\\tuserRepository.save(new User(2L, \\\"mama\\\", 40));\\n\\t\\tuserRepository.save(new User(3L, \\\"kaka\\\", 50));\\n\\t\\tAssert.assertEquals(3, userRepository.findAll().size());\\n\\n\\t\\t// 删除一个User，再验证User总数\\n\\t\\tUser u = userRepository.findOne(1L);\\n\\t\\tuserRepository.delete(u);\\n\\t\\tAssert.assertEquals(2, userRepository.findAll().size());\\n\\n\\t\\t// 删除一个User，再验证User总数\\n\\t\\tu = userRepository.findByUsername(\\\"mama\\\");\\n\\t\\tuserRepository.delete(u);\\n\\t\\tAssert.assertEquals(1, userRepository.findAll().size());\\n\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"参数配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过上面的例子，我们可以轻而易举的对MongoDB进行访问，但是实战中，应用服务器与MongoDB通常不会部署于同一台设备之上，这样就无法使用自动化的本地配置来进行使用。这个时候，我们也可以方便的配置来完成支持，只需要在application.properties中加入mongodb服务端的相关配置，具体示例如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.data.mongodb.uri=mongodb://name:pass@localhost:27017/test\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在尝试此配置时，记得在mongo中对test库创建具备读写权限的用户（用户名为name，密码为pass），不同版本的用户创建语句不同，注意查看文档做好准备工作\")]),_vm._v(\" \"),_c('p',[_vm._v(\"若使用mongodb 2.x，也可以通过如下参数配置，该方式不支持mongodb 3.x。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.data.mongodb.host=localhost spring.data.mongodb.port=27017\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-6\"}},[_vm._v(\"完整示例：lesson4-6\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-7f3b7cd2\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/MongoDB.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"最近项目原因可能会继续开始使用MyBatis，已经习惯于spring-data的风格，再回头看xml的映射配置总觉得不是特别舒服，接口定义与映射离散在不同文件中，使得阅读起来并不是特别方便。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring中整合MyBatis就不多说了，最近大量使用Spring Boot，因此整理一下Spring Boot中整合MyBatis的步骤。搜了一下Spring Boot整合MyBatis的文章，方法都比较老，比较繁琐。查了一下文档，实际已经支持较为简单的整合与使用。下面就来详细介绍如何在Spring Boot中整合MyBatis，并通过注解方式实现映射。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"整合MyBatis\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"新建Spring Boot项目，或以\"),_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson1\"}},[_vm._v(\"lesson1\")]),_vm._v(\"为基础来操作\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中引入依赖\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"这里用到spring-boot-starter基础和spring-boot-starter-test用来做单元测试验证数据访问\")]),_vm._v(\" \"),_c('li',[_vm._v(\"引入连接mysql的必要依赖mysql-connector-java\")]),_vm._v(\" \"),_c('li',[_vm._v(\"引入整合MyBatis的核心依赖mybatis-spring-boot-starter\")]),_vm._v(\" \"),_c('li',[_vm._v(\"这里不引入spring-boot-starter-jdbc依赖，是由于mybatis-spring-boot-starter中已经包含了此依赖\")])])])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<parent>\\n\\t<groupId>org.springframework.boot</groupId>\\n\\t<artifactId>spring-boot-starter-parent</artifactId>\\n\\t<version>1.3.2.RELEASE</version>\\n\\t<relativePath/> <!-- lookup parent from repository -->\\n</parent>\\n\\n<dependencies>\\n\\n\\t<dependency>\\n\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t<artifactId>spring-boot-starter</artifactId>\\n\\t</dependency>\\n\\n\\t<dependency>\\n\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t<artifactId>spring-boot-starter-test</artifactId>\\n\\t\\t<scope>test</scope>\\n\\t</dependency>\\n\\n\\t<dependency>\\n\\t\\t<groupId>org.mybatis.spring.boot</groupId>\\n\\t\\t<artifactId>mybatis-spring-boot-starter</artifactId>\\n\\t\\t<version>1.1.1</version>\\n\\t</dependency>\\n\\n\\t<dependency>\\n\\t\\t<groupId>mysql</groupId>\\n\\t\\t<artifactId>mysql-connector-java</artifactId>\\n\\t\\t<version>5.1.21</version>\\n\\t</dependency>\\n\\n</dependencies>\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"同之前介绍的使用jdbc和spring-data连接数据库一样，在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中配置mysql的连接配置\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.datasource.url=jdbc:mysql://localhost:3306/test\\nspring.datasource.username=root\\nspring.datasource.password=123456\\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"同其他Spring Boot工程一样，简单且简洁的的完成了基本配置，下面看看如何在这个基础下轻松方便的使用MyBatis访问数据库。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"使用MyBatis\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在Mysql中创建User表，包含id(BIGINT)、name(INT)、age(VARCHAR)字段。同时，创建映射对象User\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class User {\\n\\n    private Long id;\\n    private String name;\\n    private Integer age;\\n\\n    // 省略getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建User映射的操作UserMapper，为了后续单元测试验证，实现插入和查询操作\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Mapper\\npublic interface UserMapper {\\n\\n    @Select(\\\"SELECT * FROM USER WHERE NAME = #{name}\\\")\\n    User findByName(@Param(\\\"name\\\") String name);\\n\\n    @Insert(\\\"INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})\\\")\\n    int insert(@Param(\\\"name\\\") String name, @Param(\\\"age\\\") Integer age);\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建Spring Boot主类\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@SpringBootApplication\\npublic class Application {\\n\\n\\tpublic static void main(String[] args) {\\n\\t\\tSpringApplication.run(Application.class, args);\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建单元测试\\n\"),_c('ul',[_c('li',[_vm._v(\"测试逻辑：插入一条name=AAA，age=20的记录，然后根据name=AAA查询，并判断age是否为20\")]),_vm._v(\" \"),_c('li',[_vm._v(\"测试结束回滚数据，保证测试单元每次运行的数据环境独立\")])])])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(classes = Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserMapper userMapper;\\n\\n\\t@Test\\n\\t@Rollback\\n\\tpublic void findByName() throws Exception {\\n\\t\\tuserMapper.insert(\\\"AAA\\\", 20);\\n\\t\\tUser u = userMapper.findByName(\\\"AAA\\\");\\n\\t\\tAssert.assertEquals(20, u.getAge().intValue());\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-7\"}},[_vm._v(\"完整示例：lesson4-7\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-7938888b\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/MyBatis.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"之前在Spring Boot中整合MyBatis时，采用了注解的配置方式，相信很多人还是比较喜欢这种优雅的方式的，也收到不少读者朋友的反馈和问题，主要集中于针对各种场景下注解如何使用，下面就对几种常见的情况举例说明用法。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在做下面的示例之前，先准备一个整合好MyBatis的工程，可参见\"),_c('a',{attrs:{\"href\":\"/Data/MyBatis\"}},[_vm._v(\"Spring Boot整合MyBatis\")]),_vm._v(\"，也可直接使用整合好的样例：\"),_c('a',{attrs:{\"href\":\"Chapter3-2-7\"}},[_vm._v(\"Chapter3-2-7\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"传参方式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面通过几种不同传参方式来实现前文中实现的插入操作。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"使用@Param\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在之前的整合示例中我们已经使用了这种最简单的传参方式，如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Insert(\\\"INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})\\\")\\nint insert(@Param(\\\"name\\\") String name, @Param(\\\"age\\\") Integer age);\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这种方式很好理解，\"),_c('code',{pre:true},[_vm._v(\"@Param\")]),_vm._v(\"中定义的\"),_c('code',{pre:true},[_vm._v(\"name\")]),_vm._v(\"对应了SQL中的\"),_c('code',{pre:true},[_vm._v(\"#{name}\")]),_vm._v(\"，\"),_c('code',{pre:true},[_vm._v(\"age\")]),_vm._v(\"对应了SQL中的\"),_c('code',{pre:true},[_vm._v(\"#{age}\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"使用Map\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如下代码，通过Map对象来作为传递参数的容器：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Insert(\\\"INSERT INTO USER(NAME, AGE) VALUES(#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})\\\")\\nint insertByMap(Map<String, Object> map);\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"对于Insert语句中需要的参数，我们只需要在map中填入同名的内容即可，具体如下面代码所示：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"Map<String, Object> map = new HashMap<>();\\nmap.put(\\\"name\\\", \\\"CCC\\\");\\nmap.put(\\\"age\\\", 40);\\nuserMapper.insertByMap(map);\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"使用对象\")]),_vm._v(\" \"),_c('p',[_vm._v(\"除了Map对象，我们也可直接使用普通的Java对象来作为查询条件的传参，比如我们可以直接使用User对象:\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Insert(\\\"INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})\\\")\\nint insertByUser(User user);\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这样语句中的\"),_c('code',{pre:true},[_vm._v(\"#{name}\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"#{age}\")]),_vm._v(\"就分别对应了User对象中的\"),_c('code',{pre:true},[_vm._v(\"name\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"age\")]),_vm._v(\"属性。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"增删改查\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MyBatis针对不同的数据库操作分别提供了不同的注解来进行配置，在之前的示例中演示了\"),_c('code',{pre:true},[_vm._v(\"@Insert\")]),_vm._v(\"，下面针对User表做一组最基本的增删改查作为示例：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface UserMapper {\\n\\n    @Select(\\\"SELECT * FROM user WHERE name = #{name}\\\")\\n    User findByName(@Param(\\\"name\\\") String name);\\n\\n    @Insert(\\\"INSERT INTO user(name, age) VALUES(#{name}, #{age})\\\")\\n    int insert(@Param(\\\"name\\\") String name, @Param(\\\"age\\\") Integer age);\\n\\n    @Update(\\\"UPDATE user SET age=#{age} WHERE name=#{name}\\\")\\n    void update(User user);\\n\\n    @Delete(\\\"DELETE FROM user WHERE id =#{id}\\\")\\n    void delete(Long id);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在完成了一套增删改查后，不妨我们试试下面的单元测试来验证上面操作的正确性：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(classes = Application.class)\\n@Transactional\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserMapper userMapper;\\n\\n\\t@Test\\n\\t@Rollback\\n\\tpublic void testUserMapper() throws Exception {\\n\\t\\t// insert一条数据，并select出来验证\\n\\t\\tuserMapper.insert(\\\"AAA\\\", 20);\\n\\t\\tUser u = userMapper.findByName(\\\"AAA\\\");\\n\\t\\tAssert.assertEquals(20, u.getAge().intValue());\\n\\t\\t// update一条数据，并select出来验证\\n\\t\\tu.setAge(30);\\n\\t\\tuserMapper.update(u);\\n\\t\\tu = userMapper.findByName(\\\"AAA\\\");\\n\\t\\tAssert.assertEquals(30, u.getAge().intValue());\\n\\t\\t// 删除这条数据，并select验证\\n\\t\\tuserMapper.delete(u.getId());\\n\\t\\tu = userMapper.findByName(\\\"AAA\\\");\\n\\t\\tAssert.assertEquals(null, u);\\n\\t}\\n}\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"返回结果的绑定\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于增、删、改操作相对变化较小。而对于“查”操作，我们往往需要进行多表关联，汇总计算等操作，那么对于查询的结果往往就不再是简单的实体对象了，往往需要返回一个与数据库实体不同的包装类，那么对于这类情况，就可以通过\"),_c('code',{pre:true},[_vm._v(\"@Results\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"@Result\")]),_vm._v(\"注解来进行绑定，具体如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Results({\\n    @Result(property = \\\"name\\\", column = \\\"name\\\"),\\n    @Result(property = \\\"age\\\", column = \\\"age\\\")\\n})\\n@Select(\\\"SELECT name, age FROM user\\\")\\nList<User> findAll();\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在上面代码中，@Result中的property属性对应User对象中的成员名，column对应SELECT出的字段名。在该配置中故意没有查出id属性，只对User对应中的name和age对象做了映射配置，这样可以通过下面的单元测试来验证查出的id为null，而其他属性不为null：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Test\\n@Rollback\\npublic void testUserMapper() throws Exception {\\n\\tList<User> userList = userMapper.findAll();\\n\\tfor(User user : userList) {\\n\\t\\tAssert.assertEquals(null, user.getId());\\n\\t\\tAssert.assertNotEquals(null, user.getName());\\n\\t}\\n}\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"Spring Boot中增强对MongoDB的配置（连接池等）\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"spring-boot-starter-mongodb-plus使用\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"在使用了\"),_c('code',{pre:true},[_vm._v(\"spring-boot-starter-data-mongodb\")]),_vm._v(\"的项目中，增加以下依赖\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>com.spring4all</groupId>\\n    <artifactId>mongodb-plus-spring-boot-starter</artifactId>\\n    <version>1.0.0.RELEASE</version>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"在应用主类上增加\"),_c('code',{pre:true},[_vm._v(\"@EnableMongoPlus\")]),_vm._v(\"注解，比如：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@EnableMongoPlus\\n@SpringBootApplication\\npublic class Application {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(Application.class, args);\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"可用配置参数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"可配置参数如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.data.mongodb.option.min-connection-per-host=0\\nspring.data.mongodb.option.max-connection-per-host=100\\nspring.data.mongodb.option.threads-allowed-to-block-for-connection-multiplier=5\\nspring.data.mongodb.option.server-selection-timeout=30000\\nspring.data.mongodb.option.max-wait-time=120000\\nspring.data.mongodb.option.max-connection-idle-time=0\\nspring.data.mongodb.option.max-connection-life-time=0\\nspring.data.mongodb.option.connect-timeout=10000\\nspring.data.mongodb.option.socket-timeout=0\\n\\nspring.data.mongodb.option.socket-keep-alive=false\\nspring.data.mongodb.option.ssl-enabled=false\\nspring.data.mongodb.option.ssl-invalid-host-name-allowed=false\\nspring.data.mongodb.option.always-use-m-beans=false\\n\\nspring.data.mongodb.option.heartbeat-socket-timeout=20000\\nspring.data.mongodb.option.heartbeat-connect-timeout=20000\\nspring.data.mongodb.option.min-heartbeat-frequency=500\\nspring.data.mongodb.option.heartbeat-frequency=10000\\nspring.data.mongodb.option.local-threshold=15\\n\")])]),_vm._v(\" \"),_c('p',[_c('em',[_vm._v(\"上述配置值均为默认值\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"后记\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本文主要介绍几种最为常用的方式，更多其他注解的使用可参见文档：\\n\"),_c('a',{attrs:{\"href\":\"http://www.mybatis.org/mybatis-3/zh/java-api.html\"}},[_vm._v(\"http://www.mybatis.org/mybatis-3/zh/java-api.html\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-8\"}},[_vm._v(\"完整示例：lesson4-8\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-36485843\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/MyBatisConfig.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h2',[_vm._v(\"Flyway简介\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Flyway是一个简单开源数据库版本控制器（约定大于配置），主要提供migrate、clean、info、validate、baseline、repair等命令。它支持SQL（PL/SQL、T-SQL）方式和Java方式，支持命令行客户端等，还提供一系列的插件支持（Maven、Gradle、SBT、ANT等）。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"官方网站：\"),_c('a',{attrs:{\"href\":\"https://flywaydb.org/\"}},[_vm._v(\"https://flywaydb.org/\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"本文对于Flyway的自身功能不做过多的介绍，读者可以通过阅读官方文档或利用搜索引擎获得更多资料。下面我们具体说说在Spring Boot应用中的应用，如何使用Flyway来创建数据库以及结构不一致的检查。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"动手试一试\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面我们可以通过对\"),_c('a',{attrs:{\"href\":\"http://blog.didispace.com/springbootdata1/\"}},[_vm._v(\"使用JdbcTemplate\")]),_vm._v(\"一文中的例子进行加工完成。读者也可以拿任何一个与数据访问相关的工程来做如下内容的实验：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"第一步，在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中增加flyway的依赖：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n\\t<groupId>org.flywaydb</groupId>\\n\\t<artifactId>flyway-core</artifactId>\\n\\t<version>5.0.3</version>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"第二步，按Flyway的规范创建版本化的SQL脚本。\\n\"),_c('ul',[_c('li',[_vm._v(\"在工程的\"),_c('code',{pre:true},[_vm._v(\"src/main/resources\")]),_vm._v(\"目录下创建\"),_c('code',{pre:true},[_vm._v(\"db\")]),_vm._v(\"目录\")]),_vm._v(\" \"),_c('li',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"db\")]),_vm._v(\"目录下创建版本化的SQL脚本\"),_c('code',{pre:true},[_vm._v(\"V1__Base_version.sql\")])])])])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"DROP TABLE IF EXISTS user ;\\nCREATE TABLE `user` (\\n  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',\\n  `name` varchar(20) NOT NULL COMMENT '姓名',\\n  `age` int(5) DEFAULT NULL COMMENT '年龄',\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"第三步，在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"文件中配置Flyway要加载的SQL脚本位置。按第二步创建的结果配置如下：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"flyway.locations=classpath:/db\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"第四步，执行单元测试\"),_c('code',{pre:true},[_vm._v(\"ApplicationTests\")]),_vm._v(\"，此时我们在日志中可以看到如下信息：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"INFO 82441 --- [main] o.f.core.internal.util.VersionPrinter    : Flyway Community Edition 5.0.3 by Boxfuse\\nINFO 82441 --- [main] o.f.c.internal.database.DatabaseFactory  : Database: jdbc:mysql://localhost:3306/test (MySQL 5.7)\\nINFO 82441 --- [main] o.f.core.internal.command.DbValidate     : Successfully validated 1 migration (execution time 00:00.022s)\\nINFO 82441 --- [main] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table: `test`.`flyway_schema_history`\\nINFO 82441 --- [main] o.f.core.internal.command.DbMigrate      : Current version of schema `test`: << Empty Schema >>\\nINFO 82441 --- [main] o.f.core.internal.command.DbMigrate      : Migrating schema `test` to version 1 - Base version\\nWARN 82441 --- [main] o.f.core.internal.sqlscript.SqlScript    : DB: Unknown table 'test.user' (SQL State: 42S02 - Error Code: 1051)\\nINFO 82441 --- [main] o.f.core.internal.command.DbMigrate      : Successfully applied 1 migration to schema `test` (execution time 00:00.128s)\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Flyway监测到需要运行版本脚本来初始化数据库，因此执行了\"),_c('code',{pre:true},[_vm._v(\"V1__Base_version.sql\")]),_vm._v(\"脚本，从而创建了user表，这才得以让一系列单元测试（对user表的CRUD操作）通过。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"第五步，我们可以继续再执行一下单元测试，此时我们会发现日志输出与之前不同：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"INFO 83150 --- [main] o.f.core.internal.util.VersionPrinter    : Flyway Community Edition 5.0.3 by Boxfuse\\nINFO 83150 --- [main] o.f.c.internal.database.DatabaseFactory  : Database: jdbc:mysql://localhost:3306/test (MySQL 5.7)\\nINFO 83150 --- [main] o.f.core.internal.command.DbValidate     : Successfully validated 1 migration (execution time 00:00.031s)\\nINFO 83150 --- [main] o.f.core.internal.command.DbMigrate      : Current version of schema `test`: 1\\nINFO 83150 --- [main] o.f.core.internal.command.DbMigrate      : Schema `test` is up to date. No migration necessary.\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"由于在第四步的时候，初始化脚本已经执行过，所以这次执行就没有再去执行\"),_c('code',{pre:true},[_vm._v(\"V1__Base_version.sql\")]),_vm._v(\"脚本来重建user表。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"第六步，我们可以尝试修改一下\"),_c('code',{pre:true},[_vm._v(\"V1__Base_version.sql\")]),_vm._v(\"脚本中的name字段长度，然后在运行一下单元测试，此时我们可以得到如下错误：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"ERROR 83791 --- [main] o.s.boot.SpringApplication               : Application startup failed\\n\\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Invocation of init method failed; nested exception is org.flywaydb.core.api.FlywayException: Validate failed: Migration checksum mismatch for migration version 1\\n-> Applied to database : 466264992\\n-> Resolved locally    : -270269434\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"由于初始化脚本的改动，Flyway校验失败，认为当前的\"),_c('code',{pre:true},[_vm._v(\"V1__Base_version.sql\")]),_vm._v(\"脚本与上一次执行的内容不同，提示报错并终止程序，以免造成更严重的数据结构破坏。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"总结\")]),_vm._v(\" \"),_c('p',[_vm._v(\"到这里为止，本文的内容告一段落。由于博文篇幅问题，对于Flyway更细节的使用没有说的太多，本文主要作为敲门砖，帮助和引导正在使用Spring Boot做系统开发的个人或团队在数据库的版本控制上做的更好提供一些思路。至于更深入的应用还请读者自行翻阅官方文档参考和学习。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-9\"}},[_vm._v(\"完整示例：lesson4-9\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-d8d57380\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/Flyway.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('blockquote',[_c('p',[_vm._v(\"很多时候，我们在构建系统的时候都会自己创建用户管理体系，这对于开发人员来说并不是什么难事，但是当我们需要维护多个不同系统并且相同用户跨系统使用的情况下，如果每个系统维护自己的用户信息，那么此时用户信息的同步就会变的比较麻烦，对于用户自身来说也会非常困扰，很容易出现不同系统密码不一致啊等情况出现。如果此时我们引入LDAP来集中存储用户的基本信息并提供统一的读写接口和校验机制，那么这样的问题就比较容易解决了。下面就来说说当我们使用Spring Boot开发的时候，如何来访问LDAP服务端。\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"LDAP简介\")]),_vm._v(\" \"),_c('p',[_vm._v(\"LDAP（轻量级目录访问协议，Lightweight Directory Access Protocol)是实现提供被称为目录服务的信息服务。目录服务是一种特殊的数据库系统，其专门针对读取，浏览和搜索操作进行了特定的优化。目录一般用来包含描述性的，基于属性的信息并支持精细复杂的过滤能力。目录一般不支持通用数据库针对大量更新操作操作需要的复杂的事务管理或回卷策略。而目录服务的更新则一般都非常简单。这种目录可以存储包括个人信息、web链结、jpeg图像等各种信息。为了访问存储在目录中的信息，就需要使用运行在TCP/IP 之上的访问协议—LDAP。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"LDAP目录中的信息是是按照树型结构组织，具体信息存储在条目(entry)的数据结构中。条目相当于关系数据库中表的记录；条目是具有区别名DN （Distinguished Name）的属性（Attribute），DN是用来引用条目的，DN相当于关系数据库表中的关键字（Primary Key）。属性由类型（Type）和一个或多个值（Values）组成，相当于关系数据库中的字段（Field）由字段名和数据类型组成，只是为了方便检索的需要，LDAP中的Type可以有多个Value，而不是关系数据库中为降低数据的冗余性要求实现的各个域必须是不相关的。LDAP中条目的组织一般按照地理位置和组织关系进行组织，非常的直观。LDAP把数据存放在文件中，为提高效率可以使用基于索引的文件数据库，而不是关系数据库。类型的一个例子就是mail，其值将是一个电子邮件地址。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"LDAP的信息是以树型结构存储的，在树根一般定义国家(c=CN)或域名(dc=com)，在其下则往往定义一个或多个组织 (organization)(o=Acme)或组织单元(organizational units) (ou=People)。一个组织单元可能包含诸如所有雇员、大楼内的所有打印机等信息。此外，LDAP支持对条目能够和必须支持哪些属性进行控制，这是有一个特殊的称为对象类别(objectClass)的属性来实现的。该属性的值决定了该条目必须遵循的一些规则，其规定了该条目能够及至少应该包含哪些属性。例如：inetorgPerson对象类需要支持sn(surname)和cn(common name)属性，但也可以包含可选的如邮件，电话号码等属性。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"LDAP简称对应\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"o：organization（组织-公司）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"ou：organization unit（组织单元-部门）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"c：countryName（国家）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"dc：domainComponent（域名）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"sn：surname（姓氏）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"cn：common name（常用名称）\")])]),_vm._v(\" \"),_c('p',[_c('em',[_vm._v(\"以上内容参考自\")]),_vm._v(\"：\"),_c('a',{attrs:{\"href\":\"https://www.cnblogs.com/obpm/archive/2010/08/28/1811065.html\"}},[_vm._v(\"LDAP快速入门\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"入门示例\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在了解了LDAP的基础概念之后，我们通过一个简单例子进一步理解！\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"创建一个基础的Spring Boot项目\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中引入两个重要依赖\")])])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-data-ldap</artifactId>\\n</dependency>\\n\\n<dependency>\\n    <groupId>com.unboundid</groupId>\\n    <artifactId>unboundid-ldapsdk</artifactId>\\n    <scope>test</scope>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"其中，\"),_c('code',{pre:true},[_vm._v(\"spring-boot-starter-data-ldap\")]),_vm._v(\"是Spring Boot封装的对LDAP自动化配置的实现，它是基于spring-data-ldap来对LDAP服务端进行具体操作的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"而\"),_c('code',{pre:true},[_vm._v(\"unboundid-ldapsdk\")]),_vm._v(\"主要是为了在这里使用嵌入式的LDAP服务端来进行测试操作，所以scope设置为了test，实际应用中，我们通常会连接真实的、独立部署的LDAP服务器，所以不需要此项依赖。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"src/test/resources\")]),_vm._v(\"目录下创建\"),_c('code',{pre:true},[_vm._v(\"ldap-server.ldif\")]),_vm._v(\"文件，用来存储LDAP服务端的基础数据，以备后面的程序访问之用。\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"dn: dc=didispace,dc=com\\nobjectClass: top\\nobjectClass: domain\\n\\ndn: ou=people,dc=didispace,dc=com\\nobjectclass: top\\nobjectclass: organizationalUnit\\nou: people\\n\\ndn: uid=ben,ou=people,dc=didispace,dc=com\\nobjectclass: top\\nobjectclass: person\\nobjectclass: organizationalPerson\\nobjectclass: inetOrgPerson\\ncn: didi\\nsn: zhaiyongchao\\nuid: didi\\nuserPassword: {SHA}nFCebWjxfaLbHHG1Qk5UU4trbvQ=\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这里创建了一个基础用户，真实姓名为\"),_c('code',{pre:true},[_vm._v(\"zhaiyongchao\")]),_vm._v(\",常用名\"),_c('code',{pre:true},[_vm._v(\"didi\")]),_vm._v(\"，在后面的程序中，我们会来读取这些信息。更多内容解释大家可以深入学习LDAP来理解，这里不做过多的讲解。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中添加嵌入式LDAP的配置\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.ldap.embedded.ldif=ldap-server.ldif\\nspring.ldap.embedded.base-dn=dc=didispace,dc=com\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"使用spring-data-ldap的基础用法，定义LDAP中属性与我们Java中定义实体的关系映射以及对应的Repository\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Data\\n@Entry(base = \\\"ou=people,dc=didispace,dc=com\\\", objectClasses = \\\"inetOrgPerson\\\")\\npublic class Person {\\n\\n    @Id\\n    private Name id;\\n    @DnAttribute(value = \\\"uid\\\", index = 3)\\n    private String uid;\\n    @Attribute(name = \\\"cn\\\")\\n    private String commonName;\\n    @Attribute(name = \\\"sn\\\")\\n    private String suerName;\\n    private String userPassword;\\n\\n}\\n\\npublic interface PersonRepository extends CrudRepository<Person, Name> {\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"通过上面的定义之后，已经将Person对象与LDAP存储内容实现了映射，我们只需要使用\"),_c('code',{pre:true},[_vm._v(\"PersonRepository\")]),_vm._v(\"就可以轻松的对LDAP内容实现读写。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建单元测试用例读取所有用户信息：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringRunner.class)\\n@SpringBootTest\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate PersonRepository personRepository;\\n\\n\\t@Test\\n\\tpublic void findAll() throws Exception {\\n\\t\\tpersonRepository.findAll().forEach(p -> {\\n\\t\\t\\tSystem.out.println(p);\\n\\t\\t});\\n\\t}\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"启动该测试用例之后，我们可以看到控制台中输出了刚才维护在\"),_c('code',{pre:true},[_vm._v(\"ldap-server.ldif\")]),_vm._v(\"中的用户信息：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2018-01-27 14:25:06.283  WARN 73630 --- [           main] o.s.ldap.odm.core.impl.ObjectMetaData    : The Entry class Person should be declared final\\nPerson(id=uid=ben,ou=people,dc=didispace,dc=com, uid=ben, commonName=didi, suerName=zhaiyongchao, userPassword=123,83,72,65,125,110,70,67,101,98,87,106,120,102,97,76,98,72,72,71,49,81,107,53,85,85,52,116,114,98,118,81,61)\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"添加用户\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过上面的入门示例，如果您能够独立完成，那么在Spring Boot中操作LDAP的基础目标已经完成了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果您足够了解Spring Data，其实不难想到，这个在其下的子项目必然也遵守Repsitory的抽象。所以，我们可以使用上面定义的\"),_c('code',{pre:true},[_vm._v(\"PersonRepository\")]),_vm._v(\"来轻松实现操作，比如下面的代码就可以方便的往LDAP中添加用户：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"Person person = new Person();\\nperson.setUid(\\\"uid:1\\\");\\nperson.setSuerName(\\\"AAA\\\");\\nperson.setCommonName(\\\"aaa\\\");\\nperson.setUserPassword(\\\"123456\\\");\\npersonRepository.save(person);\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果还想实现更多操作，您可以参考spring-data-ldap的文档来进行使用。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"连接LDAP服务端\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在本文的例子中都采用了嵌入式的LDAP服务器，事实上这种方式也仅限于我们本地测试开发使用，真实环境下LDAP服务端必然是独立部署的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot的封装下，我们只需要配置下面这些参数就能将上面的例子连接到远端的LDAP而不是嵌入式的LDAP。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"spring.ldap.urls=ldap://localhost:1235\\nspring.ldap.base=dc=didispace,dc=com\\nspring.ldap.username=didispace\\nspring.ldap.password=123456\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-10\"}},[_vm._v(\"完整示例：lesson4-10\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-3b4926a5\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/LDAP.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h2',[_vm._v(\"什么是事务？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"快速入门\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。所以我们不需要任何额外配置就可以用@Transactional注解进行事务的使用。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们以之前实现的《用spring-data-jpa访问数据库》的示例\"),_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-2\"}},[_vm._v(\"lesson4-2\")]),_vm._v(\"作为基础工程进行事务的使用常识。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在该样例工程中（若对该数据访问方式不了解，可先阅读该\"),_c('a',{attrs:{\"href\":\"#/Data/Jpa\"}},[_vm._v(\"文章\")]),_vm._v(\"），我们引入了spring-data-jpa，并创建了User实体以及对User的数据访问对象UserRepository，在ApplicationTest类中实现了使用UserRepository进行数据读写的单元测试用例，如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate UserRepository userRepository;\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\n\\t\\t// 创建10条记录\\n\\t\\tuserRepository.save(new User(\\\"AAA\\\", 10));\\n\\t\\tuserRepository.save(new User(\\\"BBB\\\", 20));\\n\\t\\tuserRepository.save(new User(\\\"CCC\\\", 30));\\n\\t\\tuserRepository.save(new User(\\\"DDD\\\", 40));\\n\\t\\tuserRepository.save(new User(\\\"EEE\\\", 50));\\n\\t\\tuserRepository.save(new User(\\\"FFF\\\", 60));\\n\\t\\tuserRepository.save(new User(\\\"GGG\\\", 70));\\n\\t\\tuserRepository.save(new User(\\\"HHH\\\", 80));\\n\\t\\tuserRepository.save(new User(\\\"III\\\", 90));\\n\\t\\tuserRepository.save(new User(\\\"JJJ\\\", 100));\\n\\n\\t\\t// 省略后续的一些验证操作\\n\\t}\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"可以看到，在这个单元测试用例中，使用UserRepository对象连续创建了10个User实体到数据库中，下面我们人为的来制造一些异常，看看会发生什么情况。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过定义User的name属性长度为5，这样通过创建时User实体的name属性超长就可以触发异常产生。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Entity\\npublic class User {\\n\\n    @Id\\n    @GeneratedValue\\n    private Long id;\\n\\n    @Column(nullable = false, length = 5)\\n    private String name;\\n\\n    @Column(nullable = false)\\n    private Integer age;\\n\\n    // 省略构造函数、getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"修改测试用例中创建记录的语句，将一条记录的name长度超过5，如下：name为HHHHHHHHH的User对象将会抛出异常。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"// 创建10条记录\\nuserRepository.save(new User(\\\"AAA\\\", 10));\\nuserRepository.save(new User(\\\"BBB\\\", 20));\\nuserRepository.save(new User(\\\"CCC\\\", 30));\\nuserRepository.save(new User(\\\"DDD\\\", 40));\\nuserRepository.save(new User(\\\"EEE\\\", 50));\\nuserRepository.save(new User(\\\"FFF\\\", 60));\\nuserRepository.save(new User(\\\"GGG\\\", 70));\\nuserRepository.save(new User(\\\"HHHHHHHHHH\\\", 80));\\nuserRepository.save(new User(\\\"III\\\", 90));\\nuserRepository.save(new User(\\\"JJJ\\\", 100));\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"执行测试用例，可以看到控制台中抛出了如下异常，name字段超长：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2016-05-27 10:30:35.948  WARN 2660 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1406, SQLState: 22001\\n2016-05-27 10:30:35.948 ERROR 2660 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Data truncation: Data too long for column 'name' at row 1\\n2016-05-27 10:30:35.951  WARN 2660 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 1406, SQLState: HY000\\n2016-05-27 10:30:35.951  WARN 2660 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Data too long for column 'name' at row 1\\n\\norg.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"此时查数据库中，创建了name从AAA到GGG的记录，没有HHHHHHHHHH、III、JJJ的记录。而若这是一个希望保证完整性操作的情况下，AAA到GGG的记录希望能在发生异常的时候被回退，这时候就可以使用事务让它实现回退，做法非常简单，我们只需要在test函数上添加\"),_c('code',{pre:true},[_vm._v(\"@Transactional\")]),_vm._v(\"注解即可。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Test\\n@Transactional\\npublic void test() throws Exception {\\n\\n    // 省略测试内容\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"再来执行该测试用例，可以看到控制台中输出了回滚日志（Rolled back transaction for test context）\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2016-05-27 10:35:32.210  WARN 5672 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1406, SQLState: 22001\\n2016-05-27 10:35:32.210 ERROR 5672 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Data truncation: Data too long for column 'name' at row 1\\n2016-05-27 10:35:32.213  WARN 5672 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 1406, SQLState: HY000\\n2016-05-27 10:35:32.213  WARN 5672 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Data too long for column 'name' at row 1\\n2016-05-27 10:35:32.221  INFO 5672 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@1d7a715 testClass = ApplicationTests, testInstance = com.didispace.ApplicationTests@95a785, testMethod = test@ApplicationTests, testException = org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement, mergedContextConfiguration = [MergedContextConfiguration@11f39f9 testClass = ApplicationTests, locations = '{}', classes = '{class com.didispace.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.boot.test.SpringApplicationContextLoader', parent = [null]]].\\n\\norg.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"再看数据库中，User表就没有AAA到GGG的用户数据了，成功实现了自动回滚。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这里主要通过单元测试演示了如何使用\"),_c('code',{pre:true},[_vm._v(\"@Transactional\")]),_vm._v(\"注解来声明一个函数需要被事务管理，通常我们单元测试为了保证每个测试之间的数据独立，会使用\"),_c('code',{pre:true},[_vm._v(\"@Rollback\")]),_vm._v(\"注解让每个单元测试都能在结束时回滚。而真正在开发业务逻辑时，我们通常在service层接口中使用\"),_c('code',{pre:true},[_vm._v(\"@Transactional\")]),_vm._v(\"来对各个业务逻辑进行事务管理的配置，例如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface UserService {\\n    \\n    @Transactional\\n    User login(String name, String password);\\n    \\n}\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"事务详解\")]),_vm._v(\" \"),_c('p',[_vm._v(\"上面的例子中我们使用了默认的事务配置，可以满足一些基本的事务需求，但是当我们项目较大较复杂时（比如，有多个数据源等），这时候需要在声明事务时，指定不同的事务管理器。对于不同数据源的事务管理配置可以见\"),_c('a',{attrs:{\"href\":\"/Data/MoreDataConfig\"}},[_vm._v(\"《Spring Boot多数据源配置与使用》\")]),_vm._v(\"中的设置。在声明事务时，只需要通过value属性指定配置的事务管理器名即可，例如：\"),_c('code',{pre:true},[_vm._v(\"@Transactional(value=\\\"transactionManagerPrimary\\\")\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"除了指定不同的事务管理器之后，还能对事务进行隔离级别和传播行为的控制，下面分别详细解释：\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"隔离级别\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"隔离级别是指若干个并发的事务之间的隔离程度，与我们开发时候主要相关的场景包括：脏读取、重复读、幻读。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们可以看\"),_c('code',{pre:true},[_vm._v(\"org.springframework.transaction.annotation.Isolation\")]),_vm._v(\"枚举类中定义了五个表示隔离级别的值：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public enum Isolation {\\n    DEFAULT(-1),\\n    READ_UNCOMMITTED(1),\\n    READ_COMMITTED(2),\\n    REPEATABLE_READ(4),\\n    SERIALIZABLE(8);\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"DEFAULT\")]),_vm._v(\"：这是默认值，表示使用底层数据库的默认隔离级别。对大部分数据库而言，通常这值就是：READ_COMMITTED。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"READ_UNCOMMITTED\")]),_vm._v(\"：该隔离级别表示一个事务可以读取另一个事务修改但还没有提交的数据。该级别不能防止脏读和不可重复读，因此很少使用该隔离级别。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"READ_COMMITTED\")]),_vm._v(\"：该隔离级别表示一个事务只能读取另一个事务已经提交的数据。该级别可以防止脏读，这也是大多数情况下的推荐值。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"REPEATABLE_READ\")]),_vm._v(\"：该隔离级别表示一个事务在整个过程中可以多次重复执行某个查询，并且每次返回的记录都相同。即使在多次查询之间有新增的数据满足该查询，这些新增的记录也会被忽略。该级别可以防止脏读和不可重复读。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"SERIALIZABLE\")]),_vm._v(\"：所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。但是这将严重影响程序的性能。通常情况下也不会用到该级别。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"指定方法：通过使用\"),_c('code',{pre:true},[_vm._v(\"isolation\")]),_vm._v(\"属性设置，例如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Transactional(isolation = Isolation.DEFAULT)\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"传播行为\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所谓事务的传播行为是指，如果在开始当前事务之前，一个事务上下文已经存在，此时有若干选项可以指定一个事务性方法的执行行为。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们可以看\"),_c('code',{pre:true},[_vm._v(\"org.springframework.transaction.annotation.Propagation\")]),_vm._v(\"枚举类中定义了6个表示传播行为的枚举值：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public enum Propagation {\\n    REQUIRED(0),\\n    SUPPORTS(1),\\n    MANDATORY(2),\\n    REQUIRES_NEW(3),\\n    NOT_SUPPORTED(4),\\n    NEVER(5),\\n    NESTED(6);\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"REQUIRED\")]),_vm._v(\"：如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"SUPPORTS\")]),_vm._v(\"：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"MANDATORY\")]),_vm._v(\"：如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"REQUIRES_NEW\")]),_vm._v(\"：创建一个新的事务，如果当前存在事务，则把当前事务挂起。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"NOT_SUPPORTED\")]),_vm._v(\"：以非事务方式运行，如果当前存在事务，则把当前事务挂起。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"NEVER\")]),_vm._v(\"：以非事务方式运行，如果当前存在事务，则抛出异常。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"NESTED\")]),_vm._v(\"：如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于\"),_c('code',{pre:true},[_vm._v(\"REQUIRED\")]),_vm._v(\"。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"指定方法：通过使用\"),_c('code',{pre:true},[_vm._v(\"propagation\")]),_vm._v(\"属性设置，例如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Transactional(propagation = Propagation.REQUIRED)\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson4-12\"}},[_vm._v(\"完整示例：lesson4-12\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-34e7ce26\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Data/Transaction.md\n// module id = null\n// module chunks = ","import commonView from '@/components';\r\nimport JdbcTemplate from \"@/components/Data/JdbcTemplate.md\";\r\nimport Jpa from \"@/components/Data/Jpa.md\";\r\nimport MoreDataConfig from \"@/components/Data/MoreDataConfig.md\";\r\nimport Redis from \"@/components/Data/Redis.md\";\r\nimport MongoDB from \"@/components/Data/MongoDB.md\";\r\nimport MyBatis from \"@/components/Data/MyBatis.md\";\r\nimport MyBatisConfig from \"@/components/Data/MyBatisConfig.md\";\r\nimport Flyway from \"@/components/Data/Flyway.md\";\r\nimport LDAP from \"@/components/Data/LDAP.md\";\r\nimport Transaction from \"@/components/Data/Transaction.md\";\r\n\r\nexport default {\r\n    path: \"/Data\",\r\n    cnName: \"数据访问\",\r\n    component: commonView,\r\n    name: \"Data\",\r\n    children: [\r\n        {\r\n            name: \"JdbcTemplate\",\r\n            path: \"JdbcTemplate\",\r\n            cnName: 'JdbcTemplate访问数据库',\r\n            title: 'Spring Boot中使用JdbcTemplate访问数据库',\r\n            component: JdbcTemplate,\r\n            date: '2018-11-13'\r\n        },\r\n        {\r\n            name: \"Jpa\",\r\n            path: 'Jpa',\r\n            cnName: \"Spring-data-jpa使用\",\r\n            title: \"Spring Boot中使用Spring-data-jpa让数据访问更简单、更优雅\",\r\n            component: Jpa,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"MoreDataConfig\",\r\n            path: \"MoreDataConfig\",\r\n            cnName: \"多数据源配置\",\r\n            title: \"Spring Boot多数据源配置与使用\",\r\n            component: MoreDataConfig,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"Redis\",\r\n            path: \"Redis\",\r\n            cnName: \"使用NoSQL数据库（一）\",\r\n            title: \"Spring Boot中使用Redis数据库\",\r\n            component: Redis,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"MongoDB\",\r\n            path: \"MongoDB\",\r\n            cnName: \"使用NoSQL数据库（二）\",\r\n            title: \"Spring Boot中使用MongoDB数据库\",\r\n            component: MongoDB,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"MyBatis\",\r\n            path: \"MyBatis\",\r\n            cnName: \"整合MyBatis\",\r\n            title: \"Spring Boot整合MyBatis\",\r\n            component: MyBatis,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"MyBatisConfig\",\r\n            path: \"MyBatisConfig\",\r\n            cnName: \"MyBatis注解配置详解\",\r\n            title: \"Spring Boot中使用MyBatis注解配置详解\",\r\n            component: MyBatisConfig,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"Flyway\",\r\n            path: \"Flyway\",\r\n            cnName: \"Flyway管理数据库版本\",\r\n            title: \"Spring Boot中使用Flyway来管理数据库版本\",\r\n            component: Flyway,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"LDAP\",\r\n            path: \"LDAP\",\r\n            cnName: \"LDAP统一管理用户信息\",\r\n            title: \"Spring Boot中使用LDAP来统一管理用户信息\",\r\n            component: LDAP,\r\n            date: '2018-11-14'\r\n        },\r\n        {\r\n            name: \"Transaction\",\r\n            path: \"Transaction\",\r\n            cnName: \"事务管理\",\r\n            title: \"Spring Boot中的事务管理\",\r\n            component: Transaction,\r\n            date: '2018-11-15'\r\n        }\r\n    ]\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/router/dataRouter.js","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-765b7baf\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./JdbcTemplate.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/JdbcTemplate.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1ed747f4\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Jpa.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/Jpa.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-add61a82\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./MoreDataConfig.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/MoreDataConfig.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8912f8c6\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Redis.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/Redis.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7f3b7cd2\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./MongoDB.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/MongoDB.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7938888b\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./MyBatis.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/MyBatis.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-36485843\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./MyBatisConfig.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/MyBatisConfig.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d8d57380\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Flyway.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/Flyway.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3b4926a5\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./LDAP.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/LDAP.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-34e7ce26\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Transaction.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Data/Transaction.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"首先，回顾并详细说明一下在\"),_c('a',{attrs:{\"href\":\"#/\"}},[_vm._v(\"快速入门\")]),_vm._v(\"中使用的\"),_c('code',{pre:true},[_vm._v(\"@Controller\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"@RestController\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"@RequestMapping\")]),_vm._v(\"注解。如果您对Spring MVC不熟悉并且还没有尝试过快速入门案例，建议先看一下\"),_c('a',{attrs:{\"href\":\"#/\"}},[_vm._v(\"快速入门\")]),_vm._v(\"的内容。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"@Controller\")]),_vm._v(\"：修饰class，用来创建处理http请求的对象\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"@RestController\")]),_vm._v(\"：Spring4之后加入的注解，原来在\"),_c('code',{pre:true},[_vm._v(\"@Controller\")]),_vm._v(\"中返回json需要\"),_c('code',{pre:true},[_vm._v(\"@ResponseBody\")]),_vm._v(\"来配合，如果直接用\"),_c('code',{pre:true},[_vm._v(\"@RestController\")]),_vm._v(\"替代\"),_c('code',{pre:true},[_vm._v(\"@Controller\")]),_vm._v(\"就不需要再配置\"),_c('code',{pre:true},[_vm._v(\"@ResponseBody\")]),_vm._v(\"，默认返回json格式。\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"@RequestMapping\")]),_vm._v(\"：配置url映射\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"下面我们尝试使用Spring MVC来实现一组对User对象操作的RESTful API，配合注释详细说明在Spring MVC中如何映射HTTP请求、如何传参、如何编写单元测试。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"RESTful API具体设计如下：\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"../../assets/springbootrestfulapi-1.png\"),\"alt\":\"RESTful API具体设计\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"User实体定义：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class User { \\n \\n    private Long id; \\n    private String name; \\n    private Integer age; \\n \\n    // 省略setter和getter \\n     \\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"实现对User对象的操作接口\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RestController \\n@RequestMapping(value=\\\"/users\\\")     // 通过这里配置使下面的映射都在/users下 \\npublic class UserController { \\n \\n    // 创建线程安全的Map \\n    static Map<Long, User> users = Collections.synchronizedMap(new HashMap<Long, User>()); \\n \\n    @RequestMapping(value=\\\"/\\\", method=RequestMethod.GET) \\n    public List<User> getUserList() { \\n        // 处理\\\"/users/\\\"的GET请求，用来获取用户列表 \\n        // 还可以通过@RequestParam从页面中传递参数来进行查询条件或者翻页信息的传递 \\n        List<User> r = new ArrayList<User>(users.values()); \\n        return r; \\n    } \\n \\n    @RequestMapping(value=\\\"/\\\", method=RequestMethod.POST) \\n    public String postUser(@ModelAttribute User user) { \\n        // 处理\\\"/users/\\\"的POST请求，用来创建User \\n        // 除了@ModelAttribute绑定参数之外，还可以通过@RequestParam从页面中传递参数 \\n        users.put(user.getId(), user); \\n        return \\\"success\\\"; \\n    } \\n \\n    @RequestMapping(value=\\\"/{id}\\\", method=RequestMethod.GET) \\n    public User getUser(@PathVariable Long id) { \\n        // 处理\\\"/users/{id}\\\"的GET请求，用来获取url中id值的User信息 \\n        // url中的id可通过@PathVariable绑定到函数的参数中 \\n        return users.get(id); \\n    } \\n \\n    @RequestMapping(value=\\\"/{id}\\\", method=RequestMethod.PUT) \\n    public String putUser(@PathVariable Long id, @ModelAttribute User user) { \\n        // 处理\\\"/users/{id}\\\"的PUT请求，用来更新User信息 \\n        User u = users.get(id); \\n        u.setName(user.getName()); \\n        u.setAge(user.getAge()); \\n        users.put(id, u); \\n        return \\\"success\\\"; \\n    } \\n \\n    @RequestMapping(value=\\\"/{id}\\\", method=RequestMethod.DELETE) \\n    public String deleteUser(@PathVariable Long id) { \\n        // 处理\\\"/users/{id}\\\"的DELETE请求，用来删除User \\n        users.remove(id); \\n        return \\\"success\\\"; \\n    } \\n \\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"下面针对该Controller编写测试用例验证正确性，具体如下。当然也可以通过浏览器插件等进行请求提交验证。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"RunWith(SpringJUnit4ClassRunner.class) \\n@SpringApplicationConfiguration(classes = MockServletContext.class) \\n@WebAppConfiguration \\npublic class ApplicationTests { \\n \\n\\tprivate MockMvc mvc; \\n \\n\\t@Before \\n\\tpublic void setUp() throws Exception { \\n\\t\\tmvc = MockMvcBuilders.standaloneSetup(new UserController()).build(); \\n\\t} \\n \\n\\t@Test \\n\\tpublic void testUserController() throws Exception { \\n        // 测试UserController \\n\\t\\tRequestBuilder request = null; \\n \\n\\t\\t// 1、get查一下user列表，应该为空 \\n\\t\\trequest = get(\\\"/users/\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t\\t\\t.andExpect(status().isOk()) \\n\\t\\t\\t\\t.andExpect(content().string(equalTo(\\\"[]\\\"))); \\n \\n\\t\\t// 2、post提交一个user \\n\\t\\trequest = post(\\\"/users/\\\") \\n\\t\\t\\t\\t.param(\\\"id\\\", \\\"1\\\") \\n\\t\\t\\t\\t.param(\\\"name\\\", \\\"测试大师\\\") \\n\\t\\t\\t\\t.param(\\\"age\\\", \\\"20\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t        .andExpect(content().string(equalTo(\\\"success\\\"))); \\n \\n\\t\\t// 3、get获取user列表，应该有刚才插入的数据 \\n\\t\\trequest = get(\\\"/users/\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t\\t\\t.andExpect(status().isOk()) \\n\\t\\t\\t\\t.andExpect(content().string(equalTo(\\\"[{\\\\\\\"id\\\\\\\":1,\\\\\\\"name\\\\\\\":\\\\\\\"测试大师\\\\\\\",\\\\\\\"age\\\\\\\":20}]\\\"))); \\n \\n\\t\\t// 4、put修改id为1的user \\n\\t\\trequest = put(\\\"/users/1\\\") \\n\\t\\t\\t\\t.param(\\\"name\\\", \\\"测试终极大师\\\") \\n\\t\\t\\t\\t.param(\\\"age\\\", \\\"30\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t\\t\\t.andExpect(content().string(equalTo(\\\"success\\\"))); \\n \\n\\t\\t// 5、get一个id为1的user \\n\\t\\trequest = get(\\\"/users/1\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t\\t\\t.andExpect(content().string(equalTo(\\\"{\\\\\\\"id\\\\\\\":1,\\\\\\\"name\\\\\\\":\\\\\\\"测试终极大师\\\\\\\",\\\\\\\"age\\\\\\\":30}\\\"))); \\n \\n\\t\\t// 6、del删除id为1的user \\n\\t\\trequest = delete(\\\"/users/1\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t\\t\\t.andExpect(content().string(equalTo(\\\"success\\\"))); \\n \\n\\t\\t// 7、get查一下user列表，应该为空 \\n\\t\\trequest = get(\\\"/users/\\\"); \\n\\t\\tmvc.perform(request) \\n\\t\\t\\t\\t.andExpect(status().isOk()) \\n\\t\\t\\t\\t.andExpect(content().string(equalTo(\\\"[]\\\"))); \\n \\n\\t} \\n \\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"至此，我们通过引入web模块（没有做其他的任何配置），就可以轻松利用Spring MVC的功能，以非常简洁的代码完成了对User对象的RESTful API的创建以及单元测试的编写。其中同时介绍了Spring MVC中最为常用的几个核心注解：\"),_c('code',{pre:true},[_vm._v(\"@Controller\")]),_vm._v(\",\"),_c('code',{pre:true},[_vm._v(\"@RestController\")]),_vm._v(\",\"),_c('code',{pre:true},[_vm._v(\"RequestMapping\")]),_vm._v(\"以及一些参数绑定的注解：\"),_c('code',{pre:true},[_vm._v(\"@PathVariable\")]),_vm._v(\",\"),_c('code',{pre:true},[_vm._v(\"@ModelAttribute\")]),_vm._v(\",\"),_c('code',{pre:true},[_vm._v(\"@RequestParam\")]),_vm._v(\"等。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-1\"}},[_vm._v(\"完整示例：lesson3-1\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-044bb974\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/WebDev/RESTfulAPI.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('blockquote',[_c('p',[_c('a',{attrs:{\"href\":\"#/\"}},[_vm._v(\"Spring Boot\")]),_vm._v(\"快速入门中我们完成了一个简单的RESTful Service，体验了快速开发的特性。在留言中也有朋友提到如何把处理结果渲染到页面上。那么本篇就在上篇基础上介绍一下如何进行Web应用的开发。\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"静态资源访问\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在我们开发Web应用的时候，需要引用大量的js、css、图片等静态资源。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"默认配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"/static\")]),_vm._v(\" \"),_c('li',[_vm._v(\"/public\")]),_vm._v(\" \"),_c('li',[_vm._v(\"/resources\")]),_vm._v(\" \"),_c('li',[_vm._v(\"/META-INF/resources\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：我们可以在\"),_c('code',{pre:true},[_vm._v(\"src/main/resources/\")]),_vm._v(\"目录下创建\"),_c('code',{pre:true},[_vm._v(\"static\")]),_vm._v(\"，在该位置放置一个图片文件。启动程序后，尝试访问\"),_c('code',{pre:true},[_vm._v(\"http://localhost:8080/D.jpg\")]),_vm._v(\"。如能显示图片，配置成功。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"渲染Web页面\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在之前的示例中，我们都是通过@RestController来处理请求，所以返回的内容为json对象。那么如果需要渲染html页面的时候，要如何实现呢？\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"模板引擎\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在动态HTML实现上Spring Boot依然可以完美胜任，并且提供了多种模板引擎的默认配置支持，所以在推荐的模板引擎下，我们可以很快的上手开发动态网站。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot提供了默认配置的模板引擎主要有以下几种：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"Thymeleaf\")]),_vm._v(\" \"),_c('li',[_vm._v(\"FreeMarker\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Velocity\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Groovy\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Mustache\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Spring Boot建议使用这些模板引擎，避免使用JSP，若一定要使用JSP将无法实现Spring Boot的多种特性，具体可见后文：支持JSP的配置\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"当你使用上述模板引擎中的任何一个，它们默认的模板配置路径为：\"),_c('code',{pre:true},[_vm._v(\"src/main/resources/templates\")]),_vm._v(\"。当然也可以修改这个路径，具体如何修改，可在后续各模板引擎的配置属性中查询并修改。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"Thymeleaf\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Thymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。它是一个开源的Java库，基于Apache License 2.0许可，由Daniel Fernández创建，该作者还是Java加密库Jasypt的作者。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Thymeleaf提供了一个用于整合Spring MVC的可选模块，在应用开发中，你可以使用Thymeleaf来完全代替JSP或其他模板引擎，如Velocity、FreeMarker等。Thymeleaf的主要目标在于提供一种可被浏览器正确显示的、格式良好的模板创建方式，因此也可以用作静态建模。你可以使用它创建经过验证的XML与HTML模板。相对于编写逻辑或代码，开发者只需将标签属性添加到模板中即可。接下来，这些标签属性就会在DOM（文档对象模型）上执行预先制定好的逻辑。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"示例模板：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<table>\\n  <thead>\\n    <tr>\\n      <th th:text=\\\"#{msgs.headers.name}\\\">Name</td>\\n      <th th:text=\\\"#{msgs.headers.price}\\\">Price</td>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr th:each=\\\"prod : ${allProducts}\\\">\\n      <td th:text=\\\"${prod.name}\\\">Oranges</td>\\n      <td th:text=\\\"${#numbers.formatDecimal(prod.price,1,2)}\\\">0.99</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"可以看到Thymeleaf主要以属性的方式加入到html标签中，浏览器在解析html时，当检查到没有的属性时候会忽略，所以Thymeleaf的模板可以通过浏览器直接打开展现，这样非常有利于前后端的分离。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径\"),_c('code',{pre:true},[_vm._v(\"src/main/resources/templates\")]),_vm._v(\"下编写模板文件即可完成。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n\\t<groupId>org.springframework.boot</groupId>\\n\\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在完成配置之后，举一个简单的例子，在快速入门工程的基础上，举一个简单的示例来通过Thymeleaf渲染一个页面。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Controller\\npublic class HelloController {\\n\\n    @RequestMapping(\\\"/\\\")\\n    public String index(ModelMap map) {\\n        // 加入一个属性，用来在模板中读取\\n        map.addAttribute(\\\"host\\\", \\\"http://blog.didispace.com\\\");\\n        // return模板文件的名称，对应src/main/resources/templates/index.html\\n        return \\\"index\\\";  \\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<!DOCTYPE html>\\n<html>\\n<head lang=\\\"en\\\">\\n    <meta charset=\\\"UTF-8\\\" />\\n    <title></title>\\n</head>\\n<body>\\n<h1 th:text=\\\"${host}\\\">Hello World</h1>\\n</body>\\n</html>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如上页面，直接打开html页面展现Hello World，但是启动程序后，访问\"),_c('code',{pre:true},[_vm._v(\"http://localhost:8080/\")]),_vm._v(\"，则是展示Controller中host的值：\"),_c('code',{pre:true},[_vm._v(\"http://blog.didispace.com\")]),_vm._v(\"，做到了不破坏HTML自身内容的数据逻辑分离。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"更多Thymeleaf的页面语法，还请访问Thymeleaf的官方文档查询使用。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Thymeleaf的默认参数配置\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如有需要修改默认配置的时候，只需复制下面要修改的属性到\"),_c('code',{pre:true},[_vm._v(\"application.properties中\")]),_vm._v(\"，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# Enable template caching.\\nspring.thymeleaf.cache=true \\n# Check that the templates location exists.\\nspring.thymeleaf.check-template-location=true \\n# Content-Type value.\\nspring.thymeleaf.content-type=text/html \\n# Enable MVC Thymeleaf view resolution.\\nspring.thymeleaf.enabled=true \\n# Template encoding.\\nspring.thymeleaf.encoding=UTF-8 \\n# Comma-separated list of view names that should be excluded from resolution.\\nspring.thymeleaf.excluded-view-names= \\n# Template mode to be applied to templates. See also StandardTemplateModeHandlers.\\nspring.thymeleaf.mode=HTML5 \\n# Prefix that gets prepended to view names when building a URL.\\nspring.thymeleaf.prefix=classpath:/templates/ \\n# Suffix that gets appended to view names when building a URL.\\nspring.thymeleaf.suffix=.html  spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain. spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"支持JSP的配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot并不建议使用，但如果一定要使用，可以参考此工程作为脚手架：\"),_c('a',{attrs:{\"href\":\"https://github.com/spring-projects/spring-boot/tree/v1.3.2.RELEASE/spring-boot-samples/spring-boot-sample-web-jsp\"}},[_vm._v(\"JSP支持\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-2\"}},[_vm._v(\"完整示例：lesson3-2\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-2214ca50\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/WebDev/Thymeleaf.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"由于Spring Boot能够快速开发、便捷部署等特性，相信有很大一部分Spring Boot的用户会用来构建RESTful API。而我们构建RESTful API的目的通常都是由于多终端的原因，这些终端会共用很多底层业务逻辑，因此我们会抽象出这样一层来同时服务于多个移动端或者Web前端。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这样一来，我们的RESTful API就有可能要面对多个开发人员或多个开发团队：IOS开发、Android开发或是Web开发等。为了减少与其他团队平时开发期间的频繁沟通成本，传统做法我们会创建一份RESTful API文档来记录所有接口细节，然而这样的做法有以下几个问题：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"由于接口众多，并且细节复杂（需要考虑不同的HTTP请求类型、HTTP头部信息、HTTP请求内容等），高质量地创建这份文档本身就是件非常吃力的事，下游的抱怨声不绝于耳。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"随着时间推移，不断修改接口实现的时候都必须同步修改接口文档，而文档与代码又处于两个不同的媒介，除非有严格的管理机制，不然很容易导致不一致现象。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"为了解决上面这样的问题，本文将介绍RESTful API的重磅好伙伴Swagger2，它可以轻松的整合到Spring Boot中，并与Spring MVC程序配合组织出强大RESTful API文档。它既可以减少我们创建文档的工作量，同时说明内容又整合入实现代码中，让维护文档和修改代码整合为一体，可以让我们在修改代码逻辑的同时方便的修改文档说明。另外Swagger2也提供了强大的页面测试功能来调试每个RESTful API。具体效果如下图所示：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"../../assets/swagger2_1.png\"),\"alt\":\"Swagger2\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"下面来具体介绍，如果在Spring Boot中使用Swagger2。首先，我们需要一个Spring Boot实现的RESTful API工程，若您没有做过这类内容，建议先阅读\\n\"),_c('a',{attrs:{\"href\":\"/Web/RESTfulAPI\"}},[_vm._v(\"Spring Boot构建一个较为复杂的RESTful APIs和单元测试\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面的内容我们会以\"),_c('a',{attrs:{\"href\":\"https://gitee.com/didispace/SpringBoot-Learning\"}},[_vm._v(\"教程样例中\")]),_vm._v(\"的Chapter3-1-1进行下面的实验（Chpater3-1-5是我们的结果工程，亦可参考）。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"添加Swagger2依赖\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中加入Swagger2的依赖\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>io.springfox</groupId>\\n    <artifactId>springfox-swagger2</artifactId>\\n    <version>2.2.2</version>\\n</dependency>\\n<dependency>\\n    <groupId>io.springfox</groupId>\\n    <artifactId>springfox-swagger-ui</artifactId>\\n    <version>2.2.2</version>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"创建Swagger2配置类\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"Application.java\")]),_vm._v(\"同级创建Swagger2的配置类\"),_c('code',{pre:true},[_vm._v(\"Swagger2\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Configuration\\n@EnableSwagger2\\npublic class Swagger2 {\\n\\n    @Bean\\n    public Docket createRestApi() {\\n        return new Docket(DocumentationType.SWAGGER_2)\\n                .apiInfo(apiInfo())\\n                .select()\\n                .apis(RequestHandlerSelectors.basePackage(\\\"com.didispace.web\\\"))\\n                .paths(PathSelectors.any())\\n                .build();\\n    }\\n\\n    private ApiInfo apiInfo() {\\n        return new ApiInfoBuilder()\\n                .title(\\\"Spring Boot中使用Swagger2构建RESTful APIs\\\")\\n                .description(\\\"更多Spring Boot相关文章请关注：http://blog.didispace.com/\\\")\\n                .termsOfServiceUrl(\\\"http://blog.didispace.com/\\\")\\n                .contact(\\\"程序猿DD\\\")\\n                .version(\\\"1.0\\\")\\n                .build();\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如上代码所示，通过\"),_c('code',{pre:true},[_vm._v(\"@Configuration\")]),_vm._v(\"注解，让Spring来加载该类配置。再通过\"),_c('code',{pre:true},[_vm._v(\"@EnableSwagger2\")]),_vm._v(\"注解来启用Swagger2。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"再通过\"),_c('code',{pre:true},[_vm._v(\"createRestApi\")]),_vm._v(\"函数创建\"),_c('code',{pre:true},[_vm._v(\"Docket\")]),_vm._v(\"的Bean之后，\"),_c('code',{pre:true},[_vm._v(\"apiInfo()\")]),_vm._v(\"用来创建该Api的基本信息（这些基本信息会展现在文档页面中）。\"),_c('code',{pre:true},[_vm._v(\"select()\")]),_vm._v(\"函数返回一个\"),_c('code',{pre:true},[_vm._v(\"ApiSelectorBuilder\")]),_vm._v(\"实例用来控制哪些接口暴露给Swagger来展现，本例采用指定扫描的包路径来定义，Swagger会扫描该包下所有Controller定义的API，并产生文档内容（除了被\"),_c('code',{pre:true},[_vm._v(\"@ApiIgnore\")]),_vm._v(\"指定的请求）。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"添加文档内容\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在完成了上述配置后，其实已经可以生产文档内容，但是这样的文档主要针对请求本身，而描述主要来源于函数等命名产生，对用户并不友好，我们通常需要自己增加一些说明来丰富文档内容。如下所示，我们通过\"),_c('code',{pre:true},[_vm._v(\"@ApiOperation\")]),_vm._v(\"注解来给API增加说明、通过\"),_c('code',{pre:true},[_vm._v(\"@ApiImplicitParams\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"@ApiImplicitParam\")]),_vm._v(\"注解来给参数增加说明。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RestController\\n@RequestMapping(value=\\\"/users\\\")     // 通过这里配置使下面的映射都在/users下，可去除\\npublic class UserController {\\n\\n    static Map<Long, User> users = Collections.synchronizedMap(new HashMap<Long, User>());\\n\\n    @ApiOperation(value=\\\"获取用户列表\\\", notes=\\\"\\\")\\n    @RequestMapping(value={\\\"\\\"}, method=RequestMethod.GET)\\n    public List<User> getUserList() {\\n        List<User> r = new ArrayList<User>(users.values());\\n        return r;\\n    }\\n\\n    @ApiOperation(value=\\\"创建用户\\\", notes=\\\"根据User对象创建用户\\\")\\n    @ApiImplicitParam(name = \\\"user\\\", value = \\\"用户详细实体user\\\", required = true, dataType = \\\"User\\\")\\n    @RequestMapping(value=\\\"\\\", method=RequestMethod.POST)\\n    public String postUser(@RequestBody User user) {\\n        users.put(user.getId(), user);\\n        return \\\"success\\\";\\n    }\\n\\n    @ApiOperation(value=\\\"获取用户详细信息\\\", notes=\\\"根据url的id来获取用户详细信息\\\")\\n    @ApiImplicitParam(name = \\\"id\\\", value = \\\"用户ID\\\", required = true, dataType = \\\"Long\\\")\\n    @RequestMapping(value=\\\"/{id}\\\", method=RequestMethod.GET)\\n    public User getUser(@PathVariable Long id) {\\n        return users.get(id);\\n    }\\n\\n    @ApiOperation(value=\\\"更新用户详细信息\\\", notes=\\\"根据url的id来指定更新对象，并根据传过来的user信息来更新用户详细信息\\\")\\n    @ApiImplicitParams({\\n            @ApiImplicitParam(name = \\\"id\\\", value = \\\"用户ID\\\", required = true, dataType = \\\"Long\\\"),\\n            @ApiImplicitParam(name = \\\"user\\\", value = \\\"用户详细实体user\\\", required = true, dataType = \\\"User\\\")\\n    })\\n    @RequestMapping(value=\\\"/{id}\\\", method=RequestMethod.PUT)\\n    public String putUser(@PathVariable Long id, @RequestBody User user) {\\n        User u = users.get(id);\\n        u.setName(user.getName());\\n        u.setAge(user.getAge());\\n        users.put(id, u);\\n        return \\\"success\\\";\\n    }\\n\\n    @ApiOperation(value=\\\"删除用户\\\", notes=\\\"根据url的id来指定删除对象\\\")\\n    @ApiImplicitParam(name = \\\"id\\\", value = \\\"用户ID\\\", required = true, dataType = \\\"Long\\\")\\n    @RequestMapping(value=\\\"/{id}\\\", method=RequestMethod.DELETE)\\n    public String deleteUser(@PathVariable Long id) {\\n        users.remove(id);\\n        return \\\"success\\\";\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"完成上述代码添加上，启动Spring Boot程序，访问：\"),_c('a',{attrs:{\"href\":\"http://localhost:8080/swagger-ui.html\"}},[_vm._v(\"http://localhost:8080/swagger-ui.html\")]),_vm._v(\"\\n。就能看到前文所展示的RESTful API的页面。我们可以再点开具体的API请求，以POST类型的/users请求为例，可找到上述代码中我们配置的Notes信息以及参数user的描述信息，如下图所示。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"../../assets/swagger2_2.png\"),\"alt\":\"swagger2\"}})]),_vm._v(\" \"),_c('h3',[_vm._v(\"API文档访问与调试\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在上图请求的页面中，我们看到user的Value是个输入框？是的，Swagger除了查看接口功能外，还提供了调试测试功能，我们可以点击上图中右侧的Model Schema（黄色区域：它指明了User的数据结构），此时Value中就有了user对象的模板，我们只需要稍适修改，点击下方\"),_c('code',{pre:true},[_vm._v(\"“Try it out！”\")]),_vm._v(\"按钮，即可完成了一次请求调用！\")]),_vm._v(\" \"),_c('p',[_vm._v(\"此时，你也可以通过几个GET请求来验证之前的POST请求是否正确。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"相比为这些接口编写文档的工作，我们增加的配置内容是非常少而且精简的，对于原有代码的侵入也在忍受范围之内。因此，在构建RESTful API的同时，加入swagger来对API文档进行管理，是个不错的选择。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"完整结果示例可查看\"),_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-3\"}},[_vm._v(\"lesson3-3\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"参考信息\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"http://swagger.io/\"}},[_vm._v(\"Swagger官方网站\")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-7655b7be\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/WebDev/Swagger2.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"我们在做Web应用的时候，请求处理过程中发生错误是非常常见的情况。Spring Boot提供了一个默认的映射：\"),_c('code',{pre:true},[_vm._v(\"/error\")]),_vm._v(\"，当处理中抛出异常之后，会转到该请求中处理，并且该请求有一个全局的错误页面用来展示异常内容。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"选择一个之前实现过的Web应用（\"),_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-2\"}},[_vm._v(\"lesson3-2\")]),_vm._v(\"）为基础，启动该应用，访问一个不存在的URL，或是修改处理内容，直接抛出异常，如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RequestMapping(\\\"/hello\\\")\\npublic String hello() throws Exception {\\n    throw new Exception(\\\"发生错误\\\");\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"此时，可以看到类似下面的报错页面，该页面就是Spring Boot提供的默认error映射页面。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"../../assets/abnormity.png\"),\"alt\":\"Abnormity\"}})]),_vm._v(\" \"),_c('h2',[_vm._v(\"统一异常处理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"虽然，Spring Boot中实现了默认的error映射，但是在实际应用中，上面你的错误页面对用户来说并不够友好，我们通常需要去实现我们自己的异常提示。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面我们以之前的Web应用例子为基础（\"),_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-2\"}},[_vm._v(\"lesson3-2\")]),_vm._v(\"），进行统一异常处理的改造。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建全局异常处理类：通过使用\"),_c('code',{pre:true},[_vm._v(\"@ControllerAdvice\")]),_vm._v(\"定义统一的异常处理类，而不是在每个Controller中逐个定义。\"),_c('code',{pre:true},[_vm._v(\"@ExceptionHandler\")]),_vm._v(\"用来定义函数针对的异常类型，最后将Exception对象和请求URL映射到\"),_c('code',{pre:true},[_vm._v(\"error.html\")]),_vm._v(\"中\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@ControllerAdvice\\nclass GlobalExceptionHandler {\\n\\n    public static final String DEFAULT_ERROR_VIEW = \\\"error\\\";\\n\\n    @ExceptionHandler(value = Exception.class)\\n    public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception {\\n        ModelAndView mav = new ModelAndView();\\n        mav.addObject(\\\"exception\\\", e);\\n        mav.addObject(\\\"url\\\", req.getRequestURL());\\n        mav.setViewName(DEFAULT_ERROR_VIEW);\\n        return mav;\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"实现\"),_c('code',{pre:true},[_vm._v(\"error.html\")]),_vm._v(\"页面展示：在\"),_c('code',{pre:true},[_vm._v(\"templates\")]),_vm._v(\"目录下创建\"),_c('code',{pre:true},[_vm._v(\"error.html\")]),_vm._v(\"，将请求的URL和Exception对象的message输出。\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<!DOCTYPE html>\\n<html>\\n<head lang=\\\"en\\\">\\n    <meta charset=\\\"UTF-8\\\" />\\n    <title>统一异常处理</title>\\n</head>\\n<body>\\n    <h1>Error Handler</h1>\\n    <div th:text=\\\"${url}\\\"></div>\\n    <div th:text=\\\"${exception.message}\\\"></div>\\n</body>\\n</html>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"启动该应用，访问：\"),_c('code',{pre:true},[_vm._v(\"http://localhost:8080/hello\")]),_vm._v(\"，可以看到如下错误提示页面。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"![Error Handler.png](../../assets/Error Handler.png)\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过实现上述内容之后，我们只需要在\"),_c('code',{pre:true},[_vm._v(\"Controller\")]),_vm._v(\"中抛出\"),_c('code',{pre:true},[_vm._v(\"Exception\")]),_vm._v(\"，当然我们可能会有多种不同的\"),_c('code',{pre:true},[_vm._v(\"Exception\")]),_vm._v(\"。然后在\"),_c('code',{pre:true},[_vm._v(\"@ControllerAdvice\")]),_vm._v(\"类中，根据抛出的具体\"),_c('code',{pre:true},[_vm._v(\"Exception\")]),_vm._v(\"类型匹配\"),_c('code',{pre:true},[_vm._v(\"@ExceptionHandler\")]),_vm._v(\"中配置的异常类型来匹配错误映射和处理。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"返回JSON格式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在上述例子中，通过\"),_c('code',{pre:true},[_vm._v(\"@ControllerAdvice\")]),_vm._v(\"统一定义不同Exception映射到不同错误处理页面。而当我们要实现RESTful API时，返回的错误是JSON格式的数据，而不是HTML页面，这时候我们也能轻松支持。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本质上，只需在\"),_c('code',{pre:true},[_vm._v(\"@ExceptionHandler\")]),_vm._v(\"之后加入\"),_c('code',{pre:true},[_vm._v(\"@ResponseBody\")]),_vm._v(\"，就能让处理函数return的内容转换为JSON格式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面以一个具体示例来实现返回JSON格式的异常处理。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建统一的JSON返回对象，code：消息类型，message：消息内容，url：请求的url，data：请求返回的数据\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class ErrorInfo<T> {\\n\\n    public static final Integer OK = 0;\\n    public static final Integer ERROR = 100;\\n\\n    private Integer code;\\n    private String message;\\n    private String url;\\n    private T data;\\n\\n    // 省略getter和setter\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建一个自定义异常，用来实验捕获该异常，并返回json\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public class MyException extends Exception {\\n\\n    public MyException(String message) {\\n        super(message);\\n    }\\n    \\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"Controller\")]),_vm._v(\"中增加json映射，抛出\"),_c('code',{pre:true},[_vm._v(\"MyException\")]),_vm._v(\"异常\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Controller\\npublic class HelloController {\\n\\n    @RequestMapping(\\\"/json\\\")\\n    public String json() throws MyException {\\n        throw new MyException(\\\"发生错误2\\\");\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"为\"),_c('code',{pre:true},[_vm._v(\"MyException\")]),_vm._v(\"异常创建对应的处理\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@ControllerAdvice\\npublic class GlobalExceptionHandler {\\n\\n    @ExceptionHandler(value = MyException.class)\\n    @ResponseBody\\n    public ErrorInfo<String> jsonErrorHandler(HttpServletRequest req, MyException e) throws Exception {\\n        ErrorInfo<String> r = new ErrorInfo<>();\\n        r.setMessage(e.getMessage());\\n        r.setCode(ErrorInfo.ERROR);\\n        r.setData(\\\"Some Data\\\");\\n        r.setUrl(req.getRequestURL().toString());\\n        return r;\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"启动应用，访问：\"),_c('a',{attrs:{\"href\":\"http://localhost:8080/json\"}},[_vm._v(\"http://localhost:8080/json\")]),_vm._v(\"，可以得到如下返回内容：\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"{\\n    code: 100，\\n    data: \\\"Some Data\\\"，\\n    message: \\\"发生错误2\\\"，\\n    url: \\\"http://localhost:8080/json\\\"\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"至此，已完成在Spring Boot中创建统一的异常处理，实际实现还是依靠Spring MVC的注解，更多更深入的使用可参考Spring MVC的文档。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-4\"}},[_vm._v(\"完整示例：lesson3-4\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-2f53649e\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/WebDev/Abnormity.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('blockquote',[_c('p',[_c('code',{pre:true},[_vm._v(\"LocalDate\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"LocalTime\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"LocalDateTime\")]),_vm._v(\"是Java 8开始提供的时间日期API，主要用来优化Java 8以前对于时间日期的处理操作。然而，我们在使用Spring Boot或使用Spring Cloud Feign的时候，往往会发现使用请求参数或返回结果中有\"),_c('code',{pre:true},[_vm._v(\"LocalDate\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"LocalTime\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"LocalDateTime\")]),_vm._v(\"的时候会发生各种问题。本文我们就来说说这种情况下出现的问题，以及如何解决。\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"问题现象\")]),_vm._v(\" \"),_c('p',[_vm._v(\"先来看看症状。比如下面的例子：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@SpringBootApplication\\npublic class Application {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(Application.class, args);\\n    }\\n\\n    @RestController\\n    class HelloController {\\n\\n        @PostMapping(\\\"/user\\\")\\n        public UserDto user(@RequestBody UserDto userDto) throws Exception {\\n            return userDto;\\n        }\\n\\n    }\\n\\n    @Data\\n    @NoArgsConstructor\\n    @AllArgsConstructor\\n    static class UserDto {\\n\\n        private String userName;\\n        private LocalDate birthday;\\n\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"上面的代码构建了一个简单的Spring Boot Web应用，它提供了一个提交用户信息的接口，用户信息中包含了\"),_c('code',{pre:true},[_vm._v(\"LocalDate\")]),_vm._v(\"类型的数据。此时，如果我们使用Feign来调用这个接口的时候，会得到如下错误：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2018-03-13 09:22:58,445 WARN  [http-nio-9988-exec-3] org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Can not construct instance of java.time.LocalDate: no suitable constructor found, can not deserialize from Object value (missing default constructor or creator, or perhaps need to add/enable type information?); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not construct instance of java.time.LocalDate: no suitable constructor found, can not deserialize from Object value (missing default constructor or creator, or perhaps need to add/enable type information?)\\n at [Source: java.io.PushbackInputStream@67064c65; line: 1, column: 63] (through reference chain: java.util.ArrayList[0]->com.didispace.UserDto[\\\"birthday\\\"])\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"分析解决\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于上面的错误信息\"),_c('code',{pre:true},[_vm._v(\"JSON parse error: Can not construct instance of java.time.LocalDate: no suitable constructor found, can not deserialize from Object value\")]),_vm._v(\"，熟悉Spring MVC的童鞋应该马上就能定位错误与\"),_c('code',{pre:true},[_vm._v(\"LocalDate\")]),_vm._v(\"的反序列化有关。但是，依然会有很多读者会被这段错误信息\"),_c('code',{pre:true},[_vm._v(\"java.util.ArrayList[0]->com.didispace.UserDto[\\\"birthday\\\"]\")]),_vm._v(\"所困惑。我们命名提交的\"),_c('code',{pre:true},[_vm._v(\"UserDto[\\\"birthday\\\"]\")]),_vm._v(\"是个\"),_c('code',{pre:true},[_vm._v(\"LocalDate\")]),_vm._v(\"对象嘛，跟\"),_c('code',{pre:true},[_vm._v(\"ArrayList\")]),_vm._v(\"列表对象有啥关系呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们不妨通过postman等手工发一个请求看看服务端返回的是什么？比如你可以按下图发起一个请求：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"!(Spring-Boot-And-Feign-Use-localdate-1.png)[../../assets/Spring-Boot-And-Feign-Use-localdate-1.png]\")]),_vm._v(\" \"),_c('p',[_vm._v(\"从上图中我们就可以理解上面我所提到的困惑了，实际上默认情况下Spring MVC对于LocalDate序列化成了一个数组类型，而Feign在调用的时候，还是按照ArrayList来处理，所以自然无法反序列化为\"),_c('code',{pre:true},[_vm._v(\"LocalDate\")]),_vm._v(\"对象了。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"解决方法\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"为了解决上面的问题非常简单，因为jackson也为此提供了一整套的序列化方案，我们只需要在\"),_c('code',{pre:true},[_vm._v(\"pom.xml\")]),_vm._v(\"中引入\"),_c('code',{pre:true},[_vm._v(\"jackson-datatype-jsr310\")]),_vm._v(\"依赖，具体如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>com.fasterxml.jackson.datatype</groupId>\\n    <artifactId>jackson-datatype-jsr310</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('p',[_c('em',[_vm._v(\"注意：在设置了spring boot的parent的情况下不需要指定具体的版本，也不建议指定某个具体版本\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在该模块中封装对Java 8的时间日期API序列化的实现，其具体实现在这个类中：\"),_c('code',{pre:true},[_vm._v(\"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule\")]),_vm._v(\"（注意：一些较早版本疯转在这个类中“\"),_c('code',{pre:true},[_vm._v(\"com.fasterxml.jackson.datatype.jsr310.JSR310Module\")]),_vm._v(\"）。在配置了依赖之后，我们只需要在上面的应用主类中增加这个序列化模块，并禁用对日期以时间戳方式输出的特性：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Bean\\npublic ObjectMapper serializingObjectMapper() {\\n    ObjectMapper objectMapper = new ObjectMapper();\\n    objectMapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\\n    objectMapper.registerModule(new JavaTimeModule());\\n    return objectMapper;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"此时，我们在访问刚才的接口，就不再是数组类型了，同时对于Feign客户端的调用也不会再出现上面的错误了。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-5\"}},[_vm._v(\"完整示例：lesson3-5\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-53c2f276\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/WebDev/Java8Api.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"在之前的所有Spring Boot教程中，我们都只提到和用到了针对HTML和JSON格式的请求与响应处理。那么对于XML格式的请求要如何快速的在Controller中包装成对象，以及如何以XML的格式返回一个对象呢？\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"实现原理：消息转换器（Message Converter）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在扩展上述问题之前，我们先要知道Spring Boot中处理HTTP请求的实现是采用的Spring MVC。而在Spring MVC中有一个消息转换器这个概念，它主要负责处理各种不同格式的请求数据进行处理，并包转换成对象，以提供更好的编程体验。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring MVC中定义了\"),_c('code',{pre:true},[_vm._v(\"HttpMessageConverter\")]),_vm._v(\"接口，抽象了消息转换器对类型的判断、对读写的判断与操作，具体可见如下定义：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface HttpMessageConverter<T> {\\n\\n    boolean canRead(Class<?> clazz, @Nullable MediaType mediaType);\\n\\n    boolean canWrite(Class<?> clazz, @Nullable MediaType mediaType);\\n\\n    List<MediaType> getSupportedMediaTypes();\\n\\n    T read(Class<? extends T> clazz, HttpInputMessage inputMessage) throws IOException, HttpMessageNotReadableException;\\n\\n    void write(T t, @Nullable MediaType contentType, HttpOutputMessage outputMessage) throws IOException, HttpMessageNotWritableException;\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"众所周知，HTTP请求的Content-Type有各种不同格式定义，如果要支持Xml格式的消息转换，就必须要使用对应的转换器。Spring MVC中默认已经有一套采用Jackson实现的转换器\"),_c('code',{pre:true},[_vm._v(\"MappingJackson2XmlHttpMessageConverter\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"扩展实现\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"第一步：引入Xml消息转换器\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在传统Spring应用中，我们可以通过如下配置加入对Xml格式数据的消息转换实现：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Configuration\\npublic class MessageConverterConfig1 extends WebMvcConfigurerAdapter {\\n    @Override\\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\\n        Jackson2ObjectMapperBuilder builder = Jackson2ObjectMapperBuilder.xml();\\n        builder.indentOutput(true);\\n        converters.add(new MappingJackson2XmlHttpMessageConverter(builder.build()));\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot应用不用像上面这么麻烦，只需要加入\"),_c('code',{pre:true},[_vm._v(\"jackson-dataformat-xml\")]),_vm._v(\"依赖，Spring Boot就会自动引入\"),_c('code',{pre:true},[_vm._v(\"MappingJackson2XmlHttpMessageConverter\")]),_vm._v(\"的实现：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>com.fasterxml.jackson.dataformat</groupId>\\n    <artifactId>jackson-dataformat-xml</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"同时，为了配置Xml数据与维护对象属性的关系所要使用的注解也在上述依赖中，所以这个依赖也是必须的。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"第二步：定义对象与Xml的关系\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"做好了基础扩展之后，下面就可以定义Xml内容对应的Java对象了，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Data\\n@NoArgsConstructor\\n@AllArgsConstructor\\n@JacksonXmlRootElement(localName = \\\"User\\\")\\npublic class User {\\n\\n    @JacksonXmlProperty(localName = \\\"name\\\")\\n    private String name;\\n    @JacksonXmlProperty(localName = \\\"age\\\")\\n    private Integer age;\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"其中：\"),_c('code',{pre:true},[_vm._v(\"@Data\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"@NoArgsConstructor\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"@AllArgsConstructor\")]),_vm._v(\"是lombok简化代码的注解，主要用于生成get、set以及构造函数。\"),_c('code',{pre:true},[_vm._v(\"@JacksonXmlRootElement\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"@JacksonXmlProperty\")]),_vm._v(\"注解是用来维护对象属性在xml中的对应关系。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"上述配置的User对象，其可以映射的Xml样例如下（后续可以使用上述xml来请求接口）：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<User>\\n\\t<name>aaaa</name>\\n\\t<age>10</age>\\n</User>\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"第三步：创建接收xml请求的接口\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"完成了要转换的对象之后，可以编写一个接口来接收xml并返回xml，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Controller\\npublic class UserController {\\n\\n    @PostMapping(value = \\\"/user\\\", \\n        consumes = MediaType.APPLICATION_XML_VALUE, \\n        produces = MediaType.APPLICATION_XML_VALUE)\\n    @ResponseBody\\n    public User create(@RequestBody User user) {\\n        user.setName(\\\"didispace.com : \\\" + user.getName());\\n        user.setAge(user.getAge() + 100);\\n        return user;\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"最后，启动Spring Boot应用，通过POSTMAN等请求工具，尝试一下这个接口，可以看到请求Xml，并且返回了经过处理后的Xml内容。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"../../assets/pasted-121.png\"),\"alt\":\"pasted-121.png\"}})]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson3-6\"}},[_vm._v(\"完整示列：lesson3-6\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-e9ce2068\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/WebDev/XMLResponse.md\n// module id = null\n// module chunks = ","import commonView from '@/components';\r\nimport RESTfulAPI from \"@/components/WebDev/RESTfulAPI.md\";\r\nimport Thymeleaf from '@/components/WebDev/Thymeleaf.md';\r\nimport Swagger2 from '@/components/WebDev/Swagger2.md';\r\nimport Abnormity from '@/components/WebDev/Abnormity.md';\r\nimport Java8Api from '@/components/WebDev/Java8Api.md';\r\nimport XMLResponse from '@/components/WebDev/XMLResponse.md';\r\n\r\nexport default {\r\n    path: \"/Web\",\r\n    cnName: 'Web开发',\r\n    component: commonView,\r\n    name: \"Web\",\r\n    children: [\r\n      {\r\n        path: 'RESTfulAPI',\r\n        component: RESTfulAPI,\r\n        cnName: \"构建RESTful API\",\r\n        title: 'Spring Boot构建RESTful API与单元测试',\r\n        date: \"2018-11-07\",\r\n        name: \"RESTfulAPI\"\r\n      },\r\n      {\r\n        path: \"Thymeleaf\",\r\n        component: Thymeleaf,\r\n        cnName: \"Thymeleaf使用\",\r\n        title: '使用Thymeleaf模板引擎渲染web视图',\r\n        date: '2018-11-08',\r\n        name: \"Thymeleaf\"\r\n      },\r\n      {\r\n        path: \"Swagger2\",\r\n        component: Swagger2,\r\n        cnName: \"Swagger2构建API文档\",\r\n        title: 'Spring Boot中使用Swagger2构建强大的RESTful API文档',\r\n        date: '2018-11-09',\r\n        name: \"Swagger2\"\r\n      },\r\n      {\r\n        path: \"Abnormity\",\r\n        component: Abnormity,\r\n        cnName: \"统一异常处理\",\r\n        title: 'Spring Boot中Web应用的统一异常处理',\r\n        date: '2018-11-10',\r\n        name: \"Abnormity\"\r\n      },\r\n      {\r\n        path: \"Java8Api\",\r\n        component: Java8Api,\r\n        title: 'Spring Boot和Feign中使用Java 8时间日期API',\r\n        date: '2018-11-11',\r\n        cnName: 'Java 8时间日期API',\r\n        name: \"Java8Api\"\r\n      },\r\n      {\r\n        path: \"XMLResponse\",\r\n        component: XMLResponse,\r\n        title: 'Spring Boot中如何扩展XML请求和响应的支持',\r\n        date: '2018-11-12',\r\n        cnName: 'XML请求和响应的支持',\r\n        name: \"XMLResponse\"\r\n      }\r\n    ]\r\n  };\n\n\n// WEBPACK FOOTER //\n// ./src/router/webRouter.js","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-044bb974\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./RESTfulAPI.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebDev/RESTfulAPI.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2214ca50\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Thymeleaf.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebDev/Thymeleaf.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7655b7be\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Swagger2.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebDev/Swagger2.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2f53649e\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Abnormity.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebDev/Abnormity.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-53c2f276\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./Java8Api.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebDev/Java8Api.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e9ce2068\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./XMLResponse.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebDev/XMLResponse.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"我们在编写Spring Boot应用中经常会遇到这样的场景，比如：我需要定时地发送一些短信、邮件之类的操作，也可能会定时地检查和监控一些标志、参数等。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"创建定时任务\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中编写定时任务是非常简单的事，下面通过实例介绍如何在Spring Boot中创建定时任务，实现每过5秒输出一下当前时间。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在Spring Boot的主类中加入\"),_c('code',{pre:true},[_vm._v(\"@EnableScheduling\")]),_vm._v(\"注解，启用定时任务的配置\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@SpringBootApplication\\n@EnableScheduling\\npublic class Application {\\n\\n\\tpublic static void main(String[] args) {\\n\\t\\tSpringApplication.run(Application.class, args);\\n\\t}\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建定时任务实现类\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Component\\npublic class ScheduledTasks {\\n\\n    private static final SimpleDateFormat dateFormat = new SimpleDateFormat(\\\"HH:mm:ss\\\");\\n\\n    @Scheduled(fixedRate = 5000)\\n    public void reportCurrentTime() {\\n        System.out.println(\\\"现在时间：\\\" + dateFormat.format(new Date()));\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"运行程序，控制台中可以看到类似如下输出，定时任务开始正常运作了。\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2016-05-15 10:40:04.073  INFO 1688 --- [           main] com.didispace.Application                : Started Application in 1.433 seconds (JVM running for 1.967)\\n现在时间：10:40:09\\n现在时间：10:40:14\\n现在时间：10:40:19\\n现在时间：10:40:24\\n现在时间：10:40:29522\\n现在时间：10:40:34\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"关于上述的简单入门示例也可以参见官方的\"),_c('a',{attrs:{\"href\":\"http://spring.io/guides/gs/scheduling-tasks/\"}},[_vm._v(\"Scheduling Tasks\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"@Scheduled详解\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在上面的入门例子中，使用了\"),_c('code',{pre:true},[_vm._v(\"@Scheduled(fixedRate = 5000)\")]),_vm._v(\" 注解来定义每过5秒执行的任务，对于\"),_c('code',{pre:true},[_vm._v(\"@Scheduled\")]),_vm._v(\"的使用可以总结如下几种方式：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"@Scheduled(fixedRate = 5000)\")]),_vm._v(\" ：上一次开始执行时间点之后5秒再执行\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"@Scheduled(fixedDelay = 5000)\")]),_vm._v(\" ：上一次执行完毕时间点之后5秒再执行\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"@Scheduled(initialDelay=1000, fixedRate=5000)\")]),_vm._v(\" ：第一次延迟1秒后执行，之后按fixedRate的规则每5秒执行一次\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"@Scheduled(cron=\\\"*/5 * * * * *\\\")\")]),_vm._v(\" ：通过cron表达式定义规则\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson5-1\"}},[_vm._v(\"完整示例：lesson5-1\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-9e875c70\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Async/scheduled.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"什么是“异步调用”？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"“异步调用”对应的是“同步调用”，同步调用指程序按照定义顺序依次执行，每一行程序都必须等待上一行程序执行完成之后才能执行；异步调用指程序在顺序执行时，不等待异步调用的语句返回结果就执行后面的程序。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"同步调用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面通过一个简单示例来直观的理解什么是同步调用：\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('h3',[_vm._v(\"异步调用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"上述的同步调用虽然顺利的执行完了三个任务，但是可以看到执行时间比较长，若这三个任务本身之间不存在依赖关系，可以并发执行的话，同步调用在执行效率方面就比较差，可以考虑通过异步调用的方式来并发执行。\")]),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_vm._m(8),_vm._v(\" \"),_c('p',[_vm._v(\"为了让@Async注解能够生效，还需要在Spring Boot的主程序中配置@EnableAsync，如下所示：\")]),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_c('p',[_vm._v(\"此时可以反复执行单元测试，您可能会遇到各种不同的结果，比如：\")]),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_c('h3',[_vm._v(\"异步回调\")]),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_c('p',[_vm._v(\"按照如上方式改造一下其他两个异步函数之后，下面我们改造一下测试用例，让测试在等待完成三个异步调用之后来做一些其他事情。\")]),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_c('p',[_vm._v(\"看看我们做了哪些改变：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在测试用例一开始记录开始时间\")]),_vm._v(\" \"),_c('li',[_vm._v(\"在调用三个异步函数的时候，返回Future\"),_c('String',[_vm._v(\"类型的结果对象\")])],1),_vm._v(\" \"),_c('li',[_vm._v(\"在调用完三个异步函数之后，开启一个循环，根据返回的Future\"),_c('String',[_vm._v(\"对象来判断三个异步函数是否都结束了。若都结束，就结束循环；若没有都结束，就等1秒后再判断。\")])],1),_vm._v(\" \"),_c('li',[_vm._v(\"跳出循环之后，根据结束时间 - 开始时间，计算出三个任务并发执行的总耗时。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"执行一下上述的单元测试，可以看到如下结果：\")]),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_c('p',[_vm._v(\"可以看到，通过异步调用，让任务一、二、三并发执行，有效的减少了程序的总运行时间。\")]),_vm._v(\" \"),_vm._m(18)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"定义Task类，创建三个处理函数分别模拟三个执行任务的操作，操作消耗时间随机取（10秒内）\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Component\\npublic class Task {\\n\\n    public static Random random =new Random();\\n\\n    public void doTaskOne() throws Exception {\\n        System.out.println(\\\"开始做任务一\\\");\\n        long start = System.currentTimeMillis();\\n        Thread.sleep(random.nextInt(10000));\\n        long end = System.currentTimeMillis();\\n        System.out.println(\\\"完成任务一，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n\\n    public void doTaskTwo() throws Exception {\\n        System.out.println(\\\"开始做任务二\\\");\\n        long start = System.currentTimeMillis();\\n        Thread.sleep(random.nextInt(10000));\\n        long end = System.currentTimeMillis();\\n        System.out.println(\\\"完成任务二，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n\\n    public void doTaskThree() throws Exception {\\n        System.out.println(\\\"开始做任务三\\\");\\n        long start = System.currentTimeMillis();\\n        Thread.sleep(random.nextInt(10000));\\n        long end = System.currentTimeMillis();\\n        System.out.println(\\\"完成任务三，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n}\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"在单元测试用例中，注入Task对象，并在测试用例中执行doTaskOne、doTaskTwo、doTaskThree三个函数。\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringApplicationConfiguration(classes = Application.class)\\npublic class ApplicationTests {\\n\\n\\t@Autowired\\n\\tprivate Task task;\\n\\n\\t@Test\\n\\tpublic void test() throws Exception {\\n\\t\\ttask.doTaskOne();\\n\\t\\ttask.doTaskTwo();\\n\\t\\ttask.doTaskThree();\\n\\t}\\n\\n}\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"执行单元测试，可以看到类似如下输出：\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"开始做任务一\\n完成任务一，耗时：4256毫秒\\n开始做任务二\\n完成任务二，耗时：4957毫秒\\n开始做任务三\\n完成任务三，耗时：7173毫秒\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"任务一、任务二、任务三顺序的执行完了，换言之\"),_c('code',{pre:true},[_vm._v(\"doTaskOne\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"doTaskTwo\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"doTaskThree\")]),_vm._v(\"三个函数顺序的执行完成。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"在Spring Boot中，我们只需要通过使用\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"注解就能简单的将原来的同步函数变为异步函数，Task类改在为如下模式：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Component\\npublic class Task {\\n\\n    @Async\\n    public void doTaskOne() throws Exception {\\n        // 同上内容，省略\\n    }\\n\\n    @Async\\n    public void doTaskTwo() throws Exception {\\n        // 同上内容，省略\\n    }\\n\\n    @Async\\n    public void doTaskThree() throws Exception {\\n        // 同上内容，省略\\n    }\\n\\n}\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@SpringBootApplication\\n@EnableAsync\\npublic class Application {\\n\\n\\tpublic static void main(String[] args) {\\n\\t\\tSpringApplication.run(Application.class, args);\\n\\t}\\n\\n}\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"没有任何任务相关的输出\")]),_vm._v(\" \"),_c('li',[_vm._v(\"有部分任务相关的输出\")]),_vm._v(\" \"),_c('li',[_vm._v(\"乱序的任务相关的输出\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"原因是目前\"),_c('code',{pre:true},[_vm._v(\"doTaskOne\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"doTaskTwo\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"doTaskThree\")]),_vm._v(\"三个函数的时候已经是异步执行了。主程序在异步调用之后，主程序并不会理会这三个函数是否执行完成了，由于没有其他需要执行的内容，所以程序就自动结束了，导致了不完整或是没有输出任务相关内容的情况。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"__注： \"),_c('strong',[_vm._v(\"at__Async所修饰的函数不要定义为static类型，这样异步调用不会生效\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"为了让\"),_c('code',{pre:true},[_vm._v(\"doTaskOne\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"doTaskTwo\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"doTaskThree\")]),_vm._v(\"能正常结束，假设我们需要统计一下三个任务并发执行共耗时多少，这就需要等到上述三个函数都完成调动之后记录时间，并计算结果。\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"那么我们如何判断上述三个异步调用是否已经执行完成呢？我们需要使用\"),_c('code',{pre:true},[_vm._v(\"Future<T>\")]),_vm._v(\"来返回异步调用的结果，就像如下方式改造\"),_c('code',{pre:true},[_vm._v(\"doTaskOne\")]),_vm._v(\"函数：\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Async\\npublic Future<String> doTaskOne() throws Exception {\\n    System.out.println(\\\"开始做任务一\\\");\\n    long start = System.currentTimeMillis();\\n    Thread.sleep(random.nextInt(10000));\\n    long end = System.currentTimeMillis();\\n    System.out.println(\\\"完成任务一，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    return new AsyncResult<>(\\\"任务一完成\\\");\\n}\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Test\\npublic void test() throws Exception {\\n\\n\\tlong start = System.currentTimeMillis();\\n\\n\\tFuture<String> task1 = task.doTaskOne();\\n\\tFuture<String> task2 = task.doTaskTwo();\\n\\tFuture<String> task3 = task.doTaskThree();\\n\\n\\twhile(true) {\\n\\t\\tif(task1.isDone() && task2.isDone() && task3.isDone()) {\\n\\t\\t\\t// 三个任务都调用完成，退出循环等待\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\tThread.sleep(1000);\\n\\t}\\n\\n\\tlong end = System.currentTimeMillis();\\n\\n\\tSystem.out.println(\\\"任务全部完成，总耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n}\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"开始做任务一\\n开始做任务二\\n开始做任务三\\n完成任务三，耗时：37毫秒\\n完成任务二，耗时：3661毫秒\\n完成任务一，耗时：7149毫秒\\n任务全部完成，总耗时：8025毫秒\\n\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson5-2\"}},[_vm._v(\"完整示例：lesson5-2\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-44a8bf3a\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Async/asyncCall.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('blockquote',[_c('p',[_vm._v(\"在之前的Spring Boot基础教程系列中，已经通过\"),_c('a',{attrs:{\"href\":\"#/async/asyncCall\"}},[_vm._v(\"《Spring Boot中使用@Async实现异步调用》\")]),_vm._v(\"一文介绍过如何使用\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"注解来实现异步调用了。但是，对于这些异步执行的控制是我们保障自身应用健康的基本技能。本文我们就来学习一下，如果通过自定义线程池的方式来控制异步调用的并发。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"本文中的例子我们可以在之前的例子基础上修改，也可以创建一个全新的Spring Boot项目来尝试。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"定义线程池\")]),_vm._v(\" \"),_c('p',[_vm._v(\"第一步，创建\"),_c('code',{pre:true},[_vm._v(\"TaskPoolConfig\")]),_vm._v(\"类中定义一个线程池，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@EnableAsync\\n@Configuration\\npublic class TaskPoolConfig {\\n\\n    @Bean(\\\"taskExecutor\\\")\\n    public Executor taskExecutor(){\\n        ThreadPoolTaskExecutor executor=new ThreadPoolTaskExecutor();\\n        executor.setCorePoolSize(10);\\n        executor.setMaxPoolSize(20);\\n        executor.setQueueCapacity(200);\\n        executor.setKeepAliveSeconds(60);\\n        executor.setThreadNamePrefix(\\\"taskExecutor-\\\");\\n        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\\n        return executor;\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"上面我们通过使用\"),_c('code',{pre:true},[_vm._v(\"ThreadPoolTaskExecutor\")]),_vm._v(\"创建了一个线程池，同时设置了以下这些参数：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"核心线程数10：线程池创建时候初始化的线程数\")]),_vm._v(\" \"),_c('li',[_vm._v(\"最大线程数20：线程池最大的线程数，只有在缓冲队列满了之后才会申请超过核心线程数的线程\")]),_vm._v(\" \"),_c('li',[_vm._v(\"缓冲队列200：用来缓冲执行任务的队列\")]),_vm._v(\" \"),_c('li',[_vm._v(\"允许线程的空闲时间60秒：当超过了核心线程出之外的线程在空闲时间到达之后会被销毁\")]),_vm._v(\" \"),_c('li',[_vm._v(\"线程池名的前缀：设置好了之后可以方便我们定位处理任务所在的线程池\")]),_vm._v(\" \"),_c('li',[_vm._v(\"线程池对拒绝任务的处理策略：这里采用了CallerRunsPolicy策略，当线程池没有处理能力的时候，该策略会直接在 execute 方法的调用线程中运行被拒绝的任务；如果执行程序已关闭，则会丢弃该任务\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"使用线程池\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在定义了线程池之后，我们如何让异步调用的执行任务使用这个线程池中的资源来运行呢？方法非常简单，我们只需要在\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"注解中指定线程池名即可，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Slf4j\\n@Component\\npublic class Task {\\n\\n    public static Random random = new Random();\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public void doTaskOne() throws Exception {\\n        log.info(\\\"开始做任务一\\\");\\n        long start = System.currentTimeMillis();\\n        Thread.sleep(random.nextInt(10000));\\n        long end = System.currentTimeMillis();\\n        log.info(\\\"完成任务一，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public void doTaskTwo() throws Exception {\\n        log.info(\\\"开始做任务二\\\");\\n        long start = System.currentTimeMillis();\\n        Thread.sleep(random.nextInt(10000));\\n        long end = System.currentTimeMillis();\\n        log.info(\\\"完成任务二，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public void doTaskThree() throws Exception {\\n        log.info(\\\"开始做任务三\\\");\\n        long start = System.currentTimeMillis();\\n        Thread.sleep(random.nextInt(10000));\\n        long end = System.currentTimeMillis();\\n        log.info(\\\"完成任务三，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"单元测试\")]),_vm._v(\" \"),_c('p',[_vm._v(\"最后，我们来写个单元测试来验证一下\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringBootTest\\npublic class ApplicationTests {\\n\\n    @Autowired\\n    private Task task;\\n\\n    @Test\\n    public void test() throws Exception {\\n\\n        task.doTaskOne();\\n        task.doTaskTwo();\\n        task.doTaskThree();\\n\\n        Thread.currentThread().join();\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"执行上面的单元测试，我们可以在控制台中看到所有输出的线程名前都是之前我们定义的线程池前缀名开始的，说明我们使用线程池来执行异步任务的试验成功了！\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2018-03-27 22:01:15.620  INFO 73703 --- [ taskExecutor-1] com.didispace.async.Task                 : 开始做任务一\\n2018-03-27 22:01:15.620  INFO 73703 --- [ taskExecutor-2] com.didispace.async.Task                 : 开始做任务二\\n2018-03-27 22:01:15.620  INFO 73703 --- [ taskExecutor-3] com.didispace.async.Task                 : 开始做任务三\\n2018-03-27 22:01:18.165  INFO 73703 --- [ taskExecutor-2] com.didispace.async.Task                 : 完成任务二，耗时：2545毫秒\\n2018-03-27 22:01:22.149  INFO 73703 --- [ taskExecutor-3] com.didispace.async.Task                 : 完成任务三，耗时：6529毫秒\\n2018-03-27 22:01:23.912  INFO 73703 --- [ taskExecutor-1] com.didispace.async.Task                 : 完成任务一，耗时：8292毫秒\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson5-3\"}},[_vm._v(\"完整示例：lesson5-3\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-24d18bf7\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Async/taskExecutor.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('blockquote',[_c('p',[_vm._v(\"上周发了一篇关于Spring Boot中使用\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"来实现异步任务和线程池控制的文章：\"),_c('a',{attrs:{\"href\":\"#/async/taskExecutor\"}},[_vm._v(\"《Spring Boot使用@Async实现异步调用：自定义线程池》\")]),_vm._v(\"。由于最近身边也发现了不少异步任务没有正确处理而导致的不少问题，所以在本文就接前面内容，继续说说线程池的优雅关闭，主要针对\"),_c('code',{pre:true},[_vm._v(\"ThreadPoolTaskScheduler\")]),_vm._v(\"线程池。\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"问题现象\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在上篇文章的例子[lesson5-3]中，我们定义了一个线程池，然后利用\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"注解写了3个任务，并指定了这些任务执行使用的线程池。在上文的单元测试中，我们没有具体说说shutdown相关的问题，下面我们就来模拟一个问题现场出来。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"第一步：如前文一样，我们定义一个\"),_c('code',{pre:true},[_vm._v(\"ThreadPoolTaskScheduler\")]),_vm._v(\"线程池：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@EnableAsync\\n@Configuration\\npublic class TaskPoolConfig {\\n\\n    @Bean(\\\"taskExecutor\\\")\\n    public Executor taskExecutor() {\\n        ThreadPoolTaskScheduler executor = new ThreadPoolTaskScheduler();\\n        executor.setPoolSize(20);\\n        executor.setThreadNamePrefix(\\\"taskExecutor-\\\");\\n\\n        executor.setWaitForTasksToCompleteOnShutdown(true);\\n        executor.setAwaitTerminationSeconds(60);\\n        return executor;\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"第二步：改造之前的异步任务，让它依赖一个外部资源，比如：Redis\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Slf4j\\n@Component\\npublic class Task {\\n\\n    @Autowired\\n    private StringRedisTemplate stringRedisTemplate;\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public void doTaskOne() throws Exception {\\n        log.info(\\\"开始做任务一\\\");\\n        long start = System.currentTimeMillis();\\n        log.info(stringRedisTemplate.randomKey());\\n        long end = System.currentTimeMillis();\\n        log.info(\\\"完成任务一，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public void doTaskTwo() throws Exception {\\n        log.info(\\\"开始做任务二\\\");\\n        long start = System.currentTimeMillis();\\n        log.info(stringRedisTemplate.randomKey());\\n        long end = System.currentTimeMillis();\\n        log.info(\\\"完成任务二，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public void doTaskThree() throws Exception {\\n        log.info(\\\"开始做任务三\\\");\\n        long start = System.currentTimeMillis();\\n        log.info(stringRedisTemplate.randomKey());\\n        long end = System.currentTimeMillis();\\n        log.info(\\\"完成任务三，耗时：\\\" + (end - start) + \\\"毫秒\\\");\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"注意：这里省略了pom.xml中引入依赖和配置redis的步骤\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"第三步：修改单元测试，模拟高并发情况下ShutDown的情况：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringBootTest\\npublic class ApplicationTests {\\n\\n    @Autowired\\n    private Task task;\\n\\n    @Test\\n    @SneakyThrows\\n    public void test() {\\n\\n        for (int i = 0; i < 10000; i++) {\\n            task.doTaskOne();\\n            task.doTaskTwo();\\n            task.doTaskThree();\\n\\n            if (i == 9999) {\\n                System.exit(0);\\n            }\\n        }\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"说明：通过for循环往上面定义的线程池中提交任务，由于是异步执行，在执行过程中，利用\"),_c('code',{pre:true},[_vm._v(\"System.exit(0)\")]),_vm._v(\"来关闭程序，此时由于有任务在执行，就可以观察这些异步任务的销毁与Spring容器中其他资源的顺序是否安全。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"第四步：运行上面的单元测试，我们将碰到下面的异常内容。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"org.springframework.data.redis.RedisConnectionFailureException: Cannot get Jedis connection; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool\\n\\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:204) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.getConnection(JedisConnectionFactory.java:348) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:129) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:92) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:79) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:194) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:169) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat org.springframework.data.redis.core.RedisTemplate.randomKey(RedisTemplate.java:781) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\tat com.didispace.async.Task.doTaskOne(Task.java:26) ~[classes/:na]\\n\\tat com.didispace.async.Task$$FastClassBySpringCGLIB$$ca3ff9d6.invoke(<generated>) ~[classes/:na]\\n\\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738) ~[spring-aop-4.3.14.RELEASE.jar:4.3.14.RELEASE]\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.3.14.RELEASE.jar:4.3.14.RELEASE]\\n\\tat org.springframework.aop.interceptor.AsyncExecutionInterceptor$1.call(AsyncExecutionInterceptor.java:115) ~[spring-aop-4.3.14.RELEASE.jar:4.3.14.RELEASE]\\n\\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_151]\\n\\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_151]\\n\\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_151]\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_151]\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_151]\\n\\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_151]\\nCaused by: redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool\\n\\tat redis.clients.util.Pool.getResource(Pool.java:53) ~[jedis-2.9.0.jar:na]\\n\\tat redis.clients.jedis.JedisPool.getResource(JedisPool.java:226) ~[jedis-2.9.0.jar:na]\\n\\tat redis.clients.jedis.JedisPool.getResource(JedisPool.java:16) ~[jedis-2.9.0.jar:na]\\n\\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:194) ~[spring-data-redis-1.8.10.RELEASE.jar:na]\\n\\t... 19 common frames omitted\\nCaused by: java.lang.InterruptedException: null\\n\\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014) ~[na:1.8.0_151]\\n\\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088) ~[na:1.8.0_151]\\n\\tat org.apache.commons.pool2.impl.LinkedBlockingDeque.pollFirst(LinkedBlockingDeque.java:635) ~[commons-pool2-2.4.3.jar:2.4.3]\\n\\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:442) ~[commons-pool2-2.4.3.jar:2.4.3]\\n\\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:361) ~[commons-pool2-2.4.3.jar:2.4.3]\\n\\tat redis.clients.util.Pool.getResource(Pool.java:49) ~[jedis-2.9.0.jar:na]\\n\\t... 22 common frames omitted\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"如何解决\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"原因分析\")]),_vm._v(\" \"),_c('p',[_vm._v(\"从异常信息\"),_c('code',{pre:true},[_vm._v(\"JedisConnectionException: Could not get a resource from the pool\")]),_vm._v(\"来看，我们很容易的可以想到，在应用关闭的时候异步任务还在执行，由于Redis连接池先销毁了，导致异步任务中要访问Redis的操作就报了上面的错。所以，我们得出结论，上面的实现方式在应用关闭的时候是不优雅的，那么我们要怎么做呢？\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"解决方法\")]),_vm._v(\" \"),_c('p',[_vm._v(\"要解决上面的问题很简单，Spring的\"),_c('code',{pre:true},[_vm._v(\"ThreadPoolTaskScheduler\")]),_vm._v(\"为我们提供了相关的配置，只需要加入如下设置即可：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Bean(\\\"taskExecutor\\\")\\npublic Executor taskExecutor() {\\n    ThreadPoolTaskScheduler executor = new ThreadPoolTaskScheduler();\\n    executor.setPoolSize(20);\\n    executor.setThreadNamePrefix(\\\"taskExecutor-\\\");\\n    executor.setWaitForTasksToCompleteOnShutdown(true);\\n    executor.setAwaitTerminationSeconds(60);\\n    return executor;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"说明：\"),_c('code',{pre:true},[_vm._v(\"setWaitForTasksToCompleteOnShutdown（true）\")]),_vm._v(\"该方法就是这里的关键，用来设置线程池关闭的时候等待所有任务都完成再继续销毁其他的Bean，这样这些异步任务的销毁就会先于Redis线程池的销毁。同时，这里还设置了\"),_c('code',{pre:true},[_vm._v(\"setAwaitTerminationSeconds(60)\")]),_vm._v(\"，该方法用来设置线程池中任务的等待时间，如果超过这个时候还没有销毁就强制销毁，以确保应用最后能够被关闭，而不是阻塞住。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson5-4\"}},[_vm._v(\"完整示例：lesson5-4\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-d0eb3a76\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Async/taskClose.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"之前连续写了几篇关于使用\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"实现异步调用的内容，也得到不少童鞋的反馈，其中问题比较多的就是关于返回\"),_c('code',{pre:true},[_vm._v(\"Future\")]),_vm._v(\"的使用方法以及对异步执行的超时控制，所以这篇就来一起讲讲这两个问题的处理。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"定义异步任务\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先，我们先使用\"),_c('code',{pre:true},[_vm._v(\"@Async\")]),_vm._v(\"注解来定义一个异步任务，这个方法返回\"),_c('code',{pre:true},[_vm._v(\"Future\")]),_vm._v(\"类型，具体如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Slf4j\\n@Component\\npublic class Task {\\n\\n    public static Random random = new Random();\\n\\n    @Async(\\\"taskExecutor\\\")\\n    public Future<String> run() throws Exception {\\n        long sleep = random.nextInt(10000);\\n        log.info(\\\"开始任务，需耗时：\\\" + sleep + \\\"毫秒\\\");\\n        Thread.sleep(sleep);\\n        log.info(\\\"完成任务\\\");\\n        return new AsyncResult<>(\\\"test\\\");\\n    }\\n\\n}\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"Tips：什么是\"),_c('code',{pre:true},[_vm._v(\"Future\")]),_vm._v(\"类型？\")]),_vm._v(\" \"),_c('p',[_c('code',{pre:true},[_vm._v(\"Future\")]),_vm._v(\"是对于具体的\"),_c('code',{pre:true},[_vm._v(\"Runnable\")]),_vm._v(\"或者\"),_c('code',{pre:true},[_vm._v(\"Callable\")]),_vm._v(\"任务的执行结果进行取消、查询是否完成、获取结果的接口。必要时可以通过get方法获取执行结果，该方法会阻塞直到任务返回结果。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"它的接口定义如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"public interface Future<V> {\\n    boolean cancel(boolean mayInterruptIfRunning);\\n    boolean isCancelled();\\n    boolean isDone();\\n    V get() throws InterruptedException, ExecutionException;\\n    V get(long timeout, TimeUnit unit)\\n        throws InterruptedException, ExecutionException, TimeoutException;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"它声明这样的五个方法：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"cancel方法用来取消任务，如果取消任务成功则返回true，如果取消任务失败则返回false。参数mayInterruptIfRunning表示是否允许取消正在执行却没有执行完毕的任务，如果设置true，则表示可以取消正在执行过程中的任务。如果任务已经完成，则无论mayInterruptIfRunning为true还是false，此方法肯定返回false，即如果取消已经完成的任务会返回false；如果任务正在执行，若mayInterruptIfRunning设置为true，则返回true，若mayInterruptIfRunning设置为false，则返回false；如果任务还没有执行，则无论mayInterruptIfRunning为true还是false，肯定返回true。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"isCancelled方法表示任务是否被取消成功，如果在任务正常完成前被取消成功，则返回 true。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"isDone方法表示任务是否已经完成，若任务完成，则返回true；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"get()方法用来获取执行结果，这个方法会产生阻塞，会一直等到任务执行完毕才返回；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"get(long timeout, TimeUnit unit)用来获取执行结果，如果在指定时间内，还没获取到结果，就直接返回null。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"也就是说Future提供了三种功能：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"判断任务是否完成；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"能够中断任务；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"能够获取任务执行结果。\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"测试执行与定义超时\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在完成了返回\"),_c('code',{pre:true},[_vm._v(\"Future\")]),_vm._v(\"的异步任务定义之后，我们来尝试实现一个单元测试来使用这个Future完成任务的执行，比如：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"@Slf4j\\n@RunWith(SpringJUnit4ClassRunner.class)\\n@SpringBootTest\\npublic class ApplicationTests {\\n\\n    @Autowired\\n    private Task task;\\n\\n    @Test\\n    public void test() throws Exception {\\n        Future<String> futureResult = task.run();\\n        String result = futureResult.get(5, TimeUnit.SECONDS);\\n        log.info(result);\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"上面的代码中，我们在get方法中还定义了该线程执行的超时时间，通过执行这个测试我们可以观察到执行时间超过5秒的时候，这里会抛出超时异常，该执行线程就能够因执行超时而释放回线程池，不至于一直阻塞而占用资源。\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson5-5\"}},[_vm._v(\"完整示例：lesson5-5\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-a84a16aa\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Async/future.md\n// module id = null\n// module chunks = ","import commonView from '@/components';\r\nimport scheduled from \"@/components/Async/scheduled.md\";\r\nimport asyncCall from \"@/components/Async/asyncCall.md\";\r\nimport taskExecutor from \"@/components/Async/taskExecutor.md\";\r\nimport taskClose from \"@/components/Async/taskClose.md\";\r\nimport future from \"@/components/Async/future.md\";\r\n\r\nexport default{\r\n    path:'/async',\r\n    cnName:'定时任务与异步',\r\n    component:commonView,\r\n    name:\"async\",\r\n    children:[\r\n        {\r\n            path:'scheduled',\r\n            component:scheduled,\r\n            cnName:'创建定时任务',\r\n            title:'Spring Boot中使用@Scheduled创建定时任务',\r\n            date:'2018-11-16',\r\n            name:'scheduled'\r\n        },\r\n        {\r\n            path:\"asyncCall\",\r\n            component:asyncCall,\r\n            cnName:\"异步调用实现\",\r\n            title:\"Spring Boot中使用@Async实现异步调用\",\r\n            date:\"2018-11-17\",\r\n            name:\"asyncCall\"\r\n        },\r\n        {\r\n            path:\"taskExecutor\",\r\n            component:taskExecutor,\r\n            cnName:\"自定义线程池\",\r\n            title:\"Spring Boot使用@Async实现异步调用：自定义线程池\",\r\n            date:\"2018-11-18\",\r\n            name:\"taskExecutor\"\r\n        },\r\n        {\r\n            path:\"taskClose\",\r\n            component:taskClose,\r\n            cnName:\"资源优雅关闭\",\r\n            title:\"Spring Boot使用@Async实现异步调用：ThreadPoolTaskScheduler线程池的优雅关闭\",\r\n            date:\"2018-11-19\",\r\n            name:\"taskClose\"\r\n        },\r\n        {\r\n            path:\"future\",\r\n            component:future,\r\n            cnName:\"超时定义\",\r\n            title:\"Spring Boot使用@Async实现异步调用：使用Future以及定义超时\",\r\n            date:\"2018-11-20\",\r\n            name:\"future\"\r\n        }\r\n    ]\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/router/asyncRouter.js","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9e875c70\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./scheduled.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Async/scheduled.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-44a8bf3a\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./asyncCall.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Async/asyncCall.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-24d18bf7\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./taskExecutor.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Async/taskExecutor.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d0eb3a76\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./taskClose.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Async/taskClose.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a84a16aa\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./future.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Async/future.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"Spring Boot在所有内部日志中使用\"),_c('a',{attrs:{\"href\":\"http://commons.apache.org/proper/commons-logging/\"}},[_vm._v(\"Commons Logging\")]),_vm._v(\"，但是默认配置也提供了对常用日志的支持，如：\"),_c('a',{attrs:{\"href\":\"http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html\"}},[_vm._v(\"Java Util Logging\")]),_vm._v(\"，\"),_c('a',{attrs:{\"href\":\"http://logging.apache.org/log4j/\"}},[_vm._v(\"Log4J\")]),_vm._v(\", \"),_c('a',{attrs:{\"href\":\"http://logging.apache.org/log4j/\"}},[_vm._v(\"Log4J2\")]),_vm._v(\"和\"),_c('a',{attrs:{\"href\":\"http://logback.qos.ch/\"}},[_vm._v(\"Logback\")]),_vm._v(\"。每种Logger都可以通过配置使用控制台或者文件输出日志内容。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"格式化日志\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认的日志输出如下：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"2018-11-21 08:23:50.120  INFO 37397 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.11.Final}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"输出内容元素具体如下：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"时间日期 — 精确到毫秒\")]),_vm._v(\" \"),_c('li',[_vm._v(\"日志级别 — ERROR, WARN, INFO, DEBUG or TRACE\")]),_vm._v(\" \"),_c('li',[_vm._v(\"进程ID\")]),_vm._v(\" \"),_c('li',[_vm._v(\"分隔符 — --- 标识实际日志的开始\")]),_vm._v(\" \"),_c('li',[_vm._v(\"线程名 — 方括号括起来（可能会截断控制台输出）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Logger名 — 通常使用源代码的类名\")]),_vm._v(\" \"),_c('li',[_vm._v(\"日志内容\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"控制台输出\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中默认配置了\"),_c('code',{pre:true},[_vm._v(\"ERROR\")]),_vm._v(\"、\"),_c('code',{pre:true},[_vm._v(\"WARN\")]),_vm._v(\"和\"),_c('code',{pre:true},[_vm._v(\"INFO\")]),_vm._v(\"级别的日志输出到控制台。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们可以通过两种方式切换至\"),_c('code',{pre:true},[_vm._v(\"DEBUG\")]),_vm._v(\"级别：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"在运行命令后加入\"),_c('code',{pre:true},[_vm._v(\"--debug\")]),_vm._v(\"标志，如：\"),_c('code',{pre:true},[_vm._v(\"$ java -jar myapp.jar --debug\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中配置\"),_c('code',{pre:true},[_vm._v(\"debug=true\")]),_vm._v(\"，该属性置为true的时候，核心Logger（包含嵌入式容器、hibernate、spring）会输出更多内容，但是你自己应用的日志并不会输出为DEBUG级别。\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"多彩输出\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你的终端支持ANSI，设置彩色输出会让日志更具可读性。通过在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中设置\"),_c('code',{pre:true},[_vm._v(\"spring.output.ansi.enabled\")]),_vm._v(\"参数来支持。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"NEVER：禁用ANSI-colored输出（默认项）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"文件输出\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot默认配置只会输出到控制台，并不会记录到文件中，但是我们通常生产环境使用时都需要以文件方式记录。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"若要增加文件输出，需要在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中配置\"),_c('code',{pre:true},[_vm._v(\"logging.file\")]),_vm._v(\"或\"),_c('code',{pre:true},[_vm._v(\"logging.path\")]),_vm._v(\"属性。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：\"),_c('code',{pre:true},[_vm._v(\"logging.file=my.log\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：\"),_c('code',{pre:true},[_vm._v(\"logging.path=/var/log\")])])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"日志文件会在10Mb大小的时候被截断，产生新的日志文件，默认级别为：ERROR、WARN、INFO\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"级别控制\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中只需要在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"中进行配置完成日志记录的级别控制。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"配置格式：\"),_c('code',{pre:true},[_vm._v(\"logging.level.*=LEVEL\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"logging.level\")]),_vm._v(\"：日志级别控制前缀，*为包名或Logger名\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"LEVEL\")]),_vm._v(\"：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"举例：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',{pre:true},[_vm._v(\"logging.level.com.didispace=DEBUG\")]),_vm._v(\"：\"),_c('code',{pre:true},[_vm._v(\"com.didispace\")]),_vm._v(\"包下所有class以DEBUG级别输出\")]),_vm._v(\" \"),_c('li',[_c('code',{pre:true},[_vm._v(\"logging.level.root=WARN\")]),_vm._v(\"：root日志以WARN级别输出\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"自定义日志配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由于日志服务一般都在ApplicationContext创建前就初始化了，它并不是必须通过Spring的配置文件控制。因此通过系统属性和传统的Spring Boot外部配置文件依然可以很好的支持日志控制和管理。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"根据不同的日志系统，你可以按如下规则组织配置文件名，就能被正确加载：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"Logback：\"),_c('code',{pre:true},[_vm._v(\"logback-spring.xml\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"logback-spring.groovy\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"logback.xml\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"logback.groovy\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Log4j：\"),_c('code',{pre:true},[_vm._v(\"log4j-spring.properties\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"log4j-spring.xml\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"log4j.properties\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"log4j.xml\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Log4j2：\"),_c('code',{pre:true},[_vm._v(\"log4j2-spring.xml\")]),_vm._v(\", \"),_c('code',{pre:true},[_vm._v(\"log4j2.xml\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"JDK (Java Util Logging)：\"),_c('code',{pre:true},[_vm._v(\"logging.properties\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"Spring Boot官方推荐优先使用带有\"),_c('code',{pre:true},[_vm._v(\"-spring\")]),_vm._v(\"的文件名作为你的日志配置（如使用\"),_c('code',{pre:true},[_vm._v(\"logback-spring.xml\")]),_vm._v(\"，而不是\"),_c('code',{pre:true},[_vm._v(\"logback.xml\")]),_vm._v(\"）\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"自定义输出格式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在Spring Boot中可以通过在\"),_c('code',{pre:true},[_vm._v(\"application.properties\")]),_vm._v(\"配置如下参数控制输出格式：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"logging.pattern.console：定义输出到控制台的样式（不支持JDK Logger）\\nlogging.pattern.file：定义输出到文件的样式（不支持JDK Logger）\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-78e67002\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Log/defaultLog.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"之前在\"),_c('a',{attrs:{\"href\":\"#/log/defaultLog\"}},[_vm._v(\"Spring Boot日志管理\")]),_vm._v(\" 一文中主要介绍了Spring Boot中默认日志工具（logback）的基本配置内容。对于很多习惯使用log4j的开发者，Spring Boot依然可以很好的支持，只是需要做一些小小的配置功能。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"引入log4j依赖\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在创建Spring Boot工程时，我们引入了\"),_c('code',{pre:true},[_vm._v(\"spring-boot-starter\")]),_vm._v(\"，其中包含了\"),_c('code',{pre:true},[_vm._v(\"spring-boot-starter-logging\")]),_vm._v(\"，该依赖内容就是Spring Boot默认的日志框架Logback，所以我们在引入log4j之前，需要先排除该包的依赖，再引入log4j的依赖，就像下面这样：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter</artifactId>\\n    <exclusions>\\n        <exclusion> \\n            <groupId>org.springframework.boot</groupId>\\n            <artifactId>spring-boot-starter-logging</artifactId>\\n        </exclusion>\\n    </exclusions>\\n</dependency>\\n\\n<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-log4j2</artifactId>\\n</dependency>\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"配置log4j.properties\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在引入了log4j依赖之后，只需要在\"),_c('code',{pre:true},[_vm._v(\"src/main/resources\")]),_vm._v(\"目录下加入log4j.properties配置文件，就可以开始对应用的日志进行配置使用。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"控制台输出\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过如下配置，设定root日志的输出级别为INFO，appender为控制台输出stdout\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# LOG4J配置\\nlog4j.rootCategory=INFO, stdout\\n\\n# 控制台输出\\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"输出到文件\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在开发环境，我们只是输出到控制台没有问题，但是到了生产或测试环境，或许持久化日志内容，方便追溯问题原因。可以通过添加如下的appender内容，按天输出到不同的文件中去，同时还需要为\"),_c('code',{pre:true},[_vm._v(\"log4j.rootCategory\")]),_vm._v(\"添加名为file的appender，这样root日志就可以输出到\"),_c('code',{pre:true},[_vm._v(\"logs/all.log\")]),_vm._v(\"文件中了。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"#\\nlog4j.rootCategory=INFO, stdout, file\\n\\n# root日志输出\\nlog4j.appender.file=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.file.file=logs/all.log\\nlog4j.appender.file.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"分类输出\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当我们日志量较多的时候，查找问题会非常困难，常用的手段就是对日志进行分类，比如：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"可以按不同package进行输出。通过定义输出到\"),_c('code',{pre:true},[_vm._v(\"logs/my.log\")]),_vm._v(\"的appender，并对\"),_c('code',{pre:true},[_vm._v(\"com.lesson6-1\")]),_vm._v(\"包下的日志级别设定为DEBUG级别、appender设置为输出到\"),_c('code',{pre:true},[_vm._v(\"logs/my.log\")]),_vm._v(\"的名为\"),_c('code',{pre:true},[_vm._v(\"lesson61\")]),_vm._v(\"的appender。\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# com.didispace包下的日志配置\\nlog4j.category.com.lesson61=DEBUG, didifile\\n\\n# com.didispace下的日志输出\\nlog4j.appender.lesson61=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.lesson61.file=logs/my.log\\nlog4j.appender.lesson61.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.lesson61.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.lesson61.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n\\n\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"可以对不同级别进行分类，比如对ERROR级别输出到特定的日志文件中，具体配置可以如下。\")])]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"log4j.logger.error=errorfile\\n# error日志输出\\nlog4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.errorfile.file=logs/error.log\\nlog4j.appender.errorfile.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.errorfile.Threshold = ERROR\\nlog4j.appender.errorfile.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.errorfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"本文主要介绍如何在spring boot中引入log4j，以及一些基础用法，对于更多log4j的用法，还请参考\"),_c('a',{attrs:{\"href\":\"http://logging.apache.org/log4j/1.2/\"}},[_vm._v(\"log4j官方网站\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson6-1\"}},[_vm._v(\"完整示列：lesson6-1\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-1ef52f8a\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Log/log4j.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"之前介绍了在\"),_c('a',{attrs:{\"href\":\"#/log/log4j\"}},[_vm._v(\"《Spring boot中使用log4j记录日志》\")]),_vm._v(\"，仅通过\"),_c('code',{pre:true},[_vm._v(\"log4j.properties\")]),_vm._v(\"对日志级别进行控制，对于需要多环境部署的环境不是很方便，可能我们在开发环境大部分模块需要采用DEBUG级别，在测试环境可能需要小部分采用DEBUG级别，而在生产环境时我们又希望采用INFO级别。这个时候，我们要自己手工编辑\"),_c('code',{pre:true},[_vm._v(\"log4j.properties\")]),_vm._v(\"文件来调整日志级别，不论在版本库中默认保存哪个环境的级别设定，都会增加其他环境使用人员的工作量，虽然很细微，但是手工修改总不是一件很好的选择，难免会发现修改后误提交等问题。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那么，有没有办法对于开发人员、运维人员都不需要改变源代码实现不同环境的不同日志级别呢?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"是否还记得之前在\"),_c('a',{attrs:{\"href\":\"#/config/ConfigIntroduce\"}},[_vm._v(\"《Spring Boot属性配置文件详解》\")]),_vm._v(\"一文中，提到的关于Spring Boot多环境的配置以及属性文件中的参数引用？若没有了解过相关内容，建议先阅读该文后继续此篇内容。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"尝试改造\")]),_vm._v(\" \"),_c('p',[_vm._v(\"先以\"),_c('code',{pre:true},[_vm._v(\"lesson6-1\")]),_vm._v(\"工程作为基础工程，我们来进行多环境配置的改造。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"创建多环境配置文件\\n\"),_c('ul',[_c('li',[_vm._v(\"application-dev.properties：开发环境\")]),_vm._v(\" \"),_c('li',[_vm._v(\"application-test.properties：测试环境\")]),_vm._v(\" \"),_c('li',[_vm._v(\"application-prod.properties：生产环境\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"application.properties中添加属性：spring.profiles.active=dev（默认激活application-dev.properties配置）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"application-dev.properties和application-test.properties配置文件中添加日志级别定义：logging.level.com.didispace=DEBUG\")]),_vm._v(\" \"),_c('li',[_vm._v(\"application-prod.properties配置文件中添加日志级别定义：logging.level.com.didispace=INFO\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"通过上面的定义，根据\"),_c('code',{pre:true},[_vm._v(\"logging.level.com.didispace\")]),_vm._v(\"在不同环境的配置文件中定义了不同的级别，但是我们已经把日志交给了log4j管理，看看我们log4j.properties中对com.didispace包下的日志定义是这样的，固定定义了DEBUG级别，并输出到名为didifile定义的appender中。\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# LOG4J配置\\nlog4j.category.com.didispace=DEBUG, lesson62\\n\\n# com.didispace下的日志输出\\nlog4j.appender.lesson62=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.lesson62.file=logs/my.log\\nlog4j.appender.lesson62.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.lesson62.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.lesson62.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"那么，要如何动态的改变这个DEBUG级别呢？在\"),_c('a',{attrs:{\"href\":\"#/log/log4j\"}},[_vm._v(\"《Spring boot中使用log4j记录日志》\")]),_vm._v(\"中还提到了关于配置文件中参数的引用。我们需要将DEBUG替换成application-{profile}.properties配置文件中定义logging.level.com.didispace即可，所以配置变为如下内容：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"# LOG4J配置\\nlog4j.category.com.didispace=${logging.level.com.lesson62}, lesson62\\n\\n# com.didispace下的日志输出\\nlog4j.appender.lesson62=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.lesson62.file=logs/my.log\\nlog4j.appender.lesson62.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.lesson62.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.lesson62.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"到这里我们已经完成了所有配置工作，我们可以通过运行单元测试，然后看my.log文件中输出的日志内容。通过修改默认的\"),_c('code',{pre:true},[_vm._v(\"application-dev.properties\")]),_vm._v(\"配置的日志级别为INFO，再运行单元测试的DEBUG内容是否被输出到了my.log中验证参数是否被正确引用了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于不同环境的使用人员也不需要改变代码或打包文件，只需要通过执行命令中参加参数即可，比如我想采用生产环境的级别，那么我可以这样运行应用：\")]),_vm._v(\" \"),_c('pre',{pre:true},[_c('code',{attrs:{\"v-pre\":\"\"}},[_vm._v(\"java -jar xxx.jar --spring.profiles.active=prod\\n\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://github.com/codeyoyo/spring-boot-learn/tree/master/springboot/lesson6-2\"}},[_vm._v(\"完整示例：lesson6-2\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-140b89ab\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./src/components/Log/logLevel.md\n// module id = null\n// module chunks = ","import commonView from '@/components';\r\nimport defaultLog from \"@/components/Log/defaultLog.md\";\r\nimport log4j from \"@/components/Log/log4j.md\";\r\nimport logLevel from \"@/components/Log/logLevel.md\";\r\n\r\nexport default{\r\n    path:'/log',\r\n    cnName:'日志管理',\r\n    component:commonView,\r\n    name:\"log\",\r\n    children:[\r\n        {\r\n            path:'defaultLog',\r\n            component:defaultLog,\r\n            cnName:'默认日志配置',\r\n            title:'Spring Boot日志管理',\r\n            date:'2018-11-21',\r\n            name:'defaultLog'\r\n        },\r\n        {\r\n            path:\"log4j\",\r\n            component:log4j,\r\n            cnName:\"log4j日志使用\",\r\n            title:'Spring boot中使用log4j记录日志',\r\n            date:'2018-11-22',\r\n            name:'log4j'\r\n        },\r\n        {\r\n            path:\"logLevel\",\r\n            component:logLevel,\r\n            cnName:\"日志级别控制\",\r\n            title:\"Spring Boot中对log4j进行多环境不同日志级别的控制\",\r\n            date:'2018-11-23',\r\n            name:\"logLevel\"\r\n        }\r\n    ]\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/router/logRouter.js","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-78e67002\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./defaultLog.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Log/defaultLog.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1ef52f8a\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./log4j.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Log/log4j.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-140b89ab\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../node_modules/_vue-markdown-loader@2.4.1@vue-markdown-loader/lib/markdown-compiler.js??ref--12-1!./logLevel.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Log/logLevel.md\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld';\n\nimport configRouter from \"./configRouter\";\nimport dataRouter from \"./dataRouter\";\nimport webRouter from \"./webRouter\";\nimport asyncRouter from \"./asyncRouter\";\nimport logRouter from \"./logRouter\";\n\nVue.use(Router);\n\nconst router = new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'HelloWorld',\n      component: HelloWorld,\n      cnName: \"起步\"\n    },\n    configRouter,\n    webRouter,\n    dataRouter,\n    asyncRouter,\n    logRouter\n  ]\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport App from './App';\nimport router from './router';\nimport iView from 'iview';\nimport 'iview/dist/styles/iview.css';\nimport '@/styles/animate.css';\nimport '@/styles/common.less';\nimport 'highlight.js/styles/github.css';\nimport hljs from \"highlight.js\";\nimport VueLazyLoad from 'vue-lazyload'\n\nVue.use(VueLazyLoad);\nVue.config.productionTip = false;\nVue.use(iView);\n\nVue.directive('highlight', (el) => {\n  let blocks = el.querySelectorAll(\"pre code\");\n  blocks.forEach(block => {\n    hljs.highlightBlock(block);\n  });\n});\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = __webpack_public_path__ + \"static/img/swagger2_1.497fe35.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/swagger2_1.png\n// module id = Yqqd\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/zfb.682c258.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/zfb.png\n// module id = Zx4y\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/idea.bc93d09.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/idea.png\n// module id = eD7Y\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/pasted-121.08ce5ca.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/pasted-121.png\n// module id = gK0i\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/abnormity.9a51d59.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/abnormity.png\n// module id = knyi\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/spring-download.bbcf1eb.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/spring-download.png\n// module id = mE74\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/helloworld.a65c0b2.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/helloworld.png\n// module id = v9vT\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/springbootrestfulapi-1.a5727be.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/springbootrestfulapi-1.png\n// module id = yoQO\n// module chunks = 1"],"sourceRoot":""}